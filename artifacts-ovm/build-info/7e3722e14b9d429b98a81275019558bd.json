{
  "id": "7e3722e14b9d429b98a81275019558bd",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.5.16",
  "solcLongVersion": "0.5.16+commit.9c3226ce",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Aqueduct.sol": {
        "content": "pragma solidity ^0.5.16;\n\nimport \"./RBCN.sol\";\n\n// This contract aims to serve as a holder of the community's RBCN\ncontract Aqueduct {\n    address public RBCNAddress;\n\n    address public RubiconMarketAddress;\n\n    uint256 public distributionDuration;\n\n    address public owner;\n\n    /// @notice The address of the Rubicon governance token\n    RBCNInterface public RBCN;\n\n    uint256 public timeOfLastRBCNDist;\n\n    uint256 public propToMakers; // the number out of 100 that represents proportion of an RBCN trade distribution to go to Maker vs. Taker\n\n    event Distribution(address recipient, uint256 amount, uint256 timestamp);\n\n    constructor(uint256 communityDuration, address _owner) public {\n        require(communityDuration != 0);\n        owner = _owner;\n        distributionDuration = communityDuration;\n        // Initial 60/40 distribution of RBCN between makers and takers\n        propToMakers = 60;\n    }\n\n    function setDistributionParams(address _RBCNAddress, address RubiconMarket)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        RBCNAddress = _RBCNAddress;\n        RubiconMarketAddress = RubiconMarket;\n        RBCN = RBCNInterface(RBCNAddress);\n        timeOfLastRBCNDist = RBCN.getDistStartTime();\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the current Rubicon Exchange.\n     */\n    modifier onlyExchange() {\n        require(isExchange(), \"Caller is not the Rubicon Market\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == owner;\n    }\n\n    /**\n     * @dev Safe subtraction function\n     */\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    /**\n     * @dev Returns true if the caller is the current Rubicon Exchange.\n     */\n    function isExchange() public view returns (bool) {\n        return msg.sender == RubiconMarketAddress;\n    }\n\n    /**\n     * @dev Admin has the ability to choose a new exchange.\n     */\n    function setNewExchange(address newImplementation)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        RubiconMarketAddress = newImplementation;\n    }\n\n    /**\n     * @dev Only the owner can set a new owner. Timelock can be set as owner\n     */\n    function setOwner(address newOwner) public onlyOwner returns (bool) {\n        owner = newOwner;\n    }\n\n    function getRBCNAddress() public view returns (address) {\n        return RBCNAddress;\n    }\n\n    // Should return the proportion of RBCN distribution per block that\n    // is allocated to a Maker of a trade\n    // The allocation that goes to the Taker is 1 - % to Maker\n    function getPropToMakers() public view returns (uint256) {\n        return propToMakers;\n    }\n\n    function setPropToMakers(uint256 newProp)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        propToMakers = newProp;\n        return true;\n    }\n\n    function distributeGovernanceToken(address recipient, uint256 amount)\n        internal\n        returns (bool)\n    {\n        require(\n            msg.sender == RubiconMarketAddress,\n            \"caller is not Rubicon Market\"\n        );\n        require(RBCN.transfer(recipient, amount), \"transfer of RBCN failed\");\n        emit Distribution(recipient, amount, block.timestamp);\n        return true;\n    }\n\n    //This function should distribute a time-weighted RBCN allocation\n    function distributeToMakerAndTaker(address maker, address taker)\n        external\n        onlyExchange\n        returns (bool)\n    {\n        require(\n            timeOfLastRBCNDist < block.timestamp,\n            \"timeOfLastRBCNDist < block.timestamp\"\n        );\n        require(taker != address(0), \"taker is zero address\");\n        require(maker != address(0), \"maker is zero address\");\n        require(\n            block.timestamp <= RBCN.getDistEndTime(),\n            \"RBCN Distribution is over\"\n        );\n\n        //calculate change in time from last distribution to now\n        uint256 delta = sub(block.timestamp, timeOfLastRBCNDist);\n\n        //calculate quantity to send maker and taker\n        uint256 distQuanityMaker =\n            (getPropToMakers() * (delta) * RBCN.getDistRate()) / 100;\n        uint256 distQuanityTaker =\n            (((100 - getPropToMakers())) * (delta) * RBCN.getDistRate()) / 100;\n\n        // TO DO: Extrapolate everything to Aqueduct?\n        //send to Maker distQuanityMaker\n        require(\n            distributeGovernanceToken(maker, distQuanityMaker),\n            \"distribution to maker failed\"\n        );\n\n        //send to Taker distQuanityTaker\n        require(\n            distributeGovernanceToken(taker, distQuanityTaker),\n            \"distribution to taker failed\"\n        );\n\n        //time of timeOfLastRBCNDist is set immediately after distribution is made\n        timeOfLastRBCNDist = block.timestamp;\n\n        return true;\n    }\n}\n\ninterface RBCNInterface {\n    function getPriorVotes(address account, uint256 blockNumber)\n        external\n        view\n        returns (uint96);\n\n    function getDistRate() external pure returns (uint256);\n\n    function getDistStartTime() external view returns (uint256);\n\n    function getDistEndTime() external view returns (uint256);\n\n    function transfer(address, uint256) external returns (bool);\n}\n"
      },
      "contracts/RBCN.sol": {
        "content": "/**\n *Submitted for verification at Etherscan.io on 2020-03-04\n */\n\npragma solidity ^0.5.16;\n\n// pragma experimental ABIEncoderV2;\n\ncontract RBCN {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Rubicon\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"RBCN\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint256 public constant totalSupply = 1000000000e18; // 1 billion RBCN\n\n    /// @notice The Unix Timestamp to begin RBCN public distribution\n    uint256 public distStartTime;\n\n    /// @notice The Unix Timestamp to begin RBCN public distribution\n    uint256 public distEndTime;\n\n    /// @notice The contract that holds the RBCN public distribution\n    address public aqueductAddress;\n\n    /// @ notice The rate of RBCN per unit of Unix time (millisecond) distributed\n    ///          to the community\n    /// Selected Number: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*%28.51%29%29%2F%28365*x*24*60*60%29+%3D+%284044409199048374306+%2F+1e18%29\n    /// Rate calculation: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*.51%29%2F1.261e%2B8\n    /// Rate = 4044409199048374 / 1e18 = 4.044409199...\n    uint256 public constant distRate = 4044409199048374306; //Distribution rate Wad in SECONDS\n    /// True rate of RBCN per second is distRate / 1e18\n\n    /// @notice Allowance amounts on behalf of others\n    mapping(address => mapping(address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping(address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping(address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping(address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH =\n        keccak256(\n            \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"\n        );\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping(address => uint256) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(\n        address indexed delegator,\n        address indexed fromDelegate,\n        address indexed toDelegate\n    );\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(\n        address indexed delegate,\n        uint256 previousBalance,\n        uint256 newBalance\n    );\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 amount\n    );\n\n    /**\n     * @notice Construct a new RBCN token\n     * @param aqueduct The holder of all community tokens\n     * @param admin The recipient of non-community tokens\n     */\n    constructor(address aqueduct, address admin) public {\n        // 51% to community\n        balances[aqueduct] = uint96(510000000e18);\n        emit Transfer(address(0), aqueduct, uint256(1000000000e18));\n        aqueductAddress = aqueduct;\n\n        // 49% to admin. See distribution here:\n        balances[admin] = uint96(490000000e18);\n        emit Transfer(address(0), admin, uint96(490000000e18));\n\n        // Start distributing RBCN to community at launch\n        distStartTime = now;\n        distEndTime = now + (4 * 365 days);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender)\n        external\n        view\n        returns (uint256)\n    {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint256 rawAmount)\n        external\n        returns (bool)\n    {\n        uint96 amount;\n        if (rawAmount == uint256(-1)) {\n            amount = uint96(-1);\n        } else {\n            amount = safe96(rawAmount, \"RBCN::approve: amount exceeds 96 bits\");\n        }\n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint256) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint256 rawAmount) external returns (bool) {\n        uint96 amount =\n            safe96(rawAmount, \"RBCN::transfer: amount exceeds 96 bits\");\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(\n        address src,\n        address dst,\n        uint256 rawAmount\n    ) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount =\n            safe96(rawAmount, \"RBCN::approve: amount exceeds 96 bits\");\n\n        if (spender != src && spenderAllowance != uint96(-1)) {\n            uint96 newAllowance =\n                sub96(\n                    spenderAllowance,\n                    amount,\n                    \"RBCN::transferFrom: transfer amount exceeds spender allowance\"\n                );\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        bytes32 domainSeparator =\n            keccak256(\n                abi.encode(\n                    DOMAIN_TYPEHASH,\n                    keccak256(bytes(name)),\n                    getChainId(),\n                    address(this)\n                )\n            );\n        bytes32 structHash =\n            keccak256(\n                abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\n            );\n        bytes32 digest =\n            keccak256(\n                abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\n            );\n        address signatory = ecrecover(digest, v, r, s);\n        require(\n            signatory != address(0),\n            \"RBCN::delegateBySig: invalid signature\"\n        );\n        require(\n            nonce == nonces[signatory]++,\n            \"RBCN::delegateBySig: invalid nonce\"\n        );\n        require(now <= expiry, \"RBCN::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber)\n        public\n        view\n        returns (uint96)\n    {\n        require(\n            blockNumber < block.number,\n            \"RBCN::getPriorVotes: not yet determined\"\n        );\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function getDistStartTime() external view returns (uint256) {\n        return distStartTime;\n    }\n\n    function getDistEndTime() external view returns (uint256) {\n        return distEndTime;\n    }\n\n    function getDistRate() external pure returns (uint256) {\n        return distRate;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(\n        address src,\n        address dst,\n        uint96 amount\n    ) internal {\n        require(\n            src != address(0),\n            \"RBCN::_transferTokens: cannot transfer from the zero address\"\n        );\n        require(\n            dst != address(0),\n            \"RBCN::_transferTokens: cannot transfer to the zero address\"\n        );\n\n        balances[src] = sub96(\n            balances[src],\n            amount,\n            \"RBCN::_transferTokens: transfer amount exceeds balance\"\n        );\n        balances[dst] = add96(\n            balances[dst],\n            amount,\n            \"RBCN::_transferTokens: transfer amount overflows\"\n        );\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(\n        address srcRep,\n        address dstRep,\n        uint96 amount\n    ) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld =\n                    srcRepNum > 0\n                        ? checkpoints[srcRep][srcRepNum - 1].votes\n                        : 0;\n                uint96 srcRepNew =\n                    sub96(\n                        srcRepOld,\n                        amount,\n                        \"RBCN::_moveVotes: vote amount underflows\"\n                    );\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld =\n                    dstRepNum > 0\n                        ? checkpoints[dstRep][dstRepNum - 1].votes\n                        : 0;\n                uint96 dstRepNew =\n                    add96(\n                        dstRepOld,\n                        amount,\n                        \"RBCN::_moveVotes: vote amount overflows\"\n                    );\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint96 oldVotes,\n        uint96 newVotes\n    ) internal {\n        uint32 blockNumber =\n            safe32(\n                block.number,\n                \"RBCN::_writeCheckpoint: block number exceeds 32 bits\"\n            );\n\n        if (\n            nCheckpoints > 0 &&\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\n        ) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\n                blockNumber,\n                newVotes\n            );\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint256 n, string memory errorMessage)\n        internal\n        pure\n        returns (uint32)\n    {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint256 n, string memory errorMessage)\n        internal\n        pure\n        returns (uint96)\n    {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(\n        uint96 a,\n        uint96 b,\n        string memory errorMessage\n    ) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(\n        uint96 a,\n        uint96 b,\n        string memory errorMessage\n    ) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        return chainId;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Aqueduct.sol": {
        "Aqueduct": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "communityDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "Distribution",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "RBCN",
              "outputs": [
                {
                  "internalType": "contract RBCNInterface",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "RBCNAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "RubiconMarketAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "taker",
                  "type": "address"
                }
              ],
              "name": "distributeToMakerAndTaker",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "distributionDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getPropToMakers",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getRBCNAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isExchange",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isOwner",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "propToMakers",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_RBCNAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "RubiconMarket",
                  "type": "address"
                }
              ],
              "name": "setDistributionParams",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "setNewExchange",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newProp",
                  "type": "uint256"
                }
              ],
              "name": "setPropToMakers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "timeOfLastRBCNDist",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {
              "isExchange()": {
                "details": "Returns true if the caller is the current Rubicon Exchange."
              },
              "isOwner()": {
                "details": "Returns true if the caller is the current owner."
              },
              "setNewExchange(address)": {
                "details": "Admin has the ability to choose a new exchange."
              },
              "setOwner(address)": {
                "details": "Only the owner can set a new owner. Timelock can be set as owner"
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH1 0x0 DUP1 PUSH3 0x19 PUSH3 0xD9 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x141D CODESIZE SUB DUP1 PUSH3 0x141D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x4D JUMPI PUSH1 0x0 DUP1 PUSH3 0x4A PUSH3 0xD9 JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD SWAP3 POP POP POP DUP2 PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 PUSH3 0x72 PUSH3 0xD9 JUMP JUMPDEST POP POP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x1 DUP2 PUSH3 0x85 PUSH3 0x146 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH3 0xA9 PUSH3 0x1A8 JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x2 DUP2 SWAP1 PUSH3 0xBB PUSH3 0x1A8 JUMP JUMPDEST POP POP POP PUSH1 0x3C PUSH1 0x6 DUP2 SWAP1 PUSH3 0xCE PUSH3 0x1A8 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x1F7 JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH3 0x113 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xF6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x1A3 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x18A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH3 0x18A JUMP JUMPDEST PUSH2 0x1216 DUP1 PUSH3 0x207 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A695C5 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x114EB4DB EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1D156DCF EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x540907BB EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x5794A68A EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x58CB0340 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x60F71B24 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x82F107E0 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8AADB371 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8CCE6851 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB30ED7B3 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xC3A4B81F EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD6C3BF2C EQ PUSH2 0x26B JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE4 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xEF PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x280 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 PUSH2 0x125 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x31A JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 PUSH2 0x170 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x324 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1D3 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 PUSH2 0x20A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x62D JUMP JUMPDEST PUSH2 0x18B PUSH2 0x64E JUMP JUMPDEST PUSH2 0x138 PUSH2 0x65A JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 PUSH2 0x248 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x667 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x18B PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x27D PUSH2 0xE9A JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH2 0x28C PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B PUSH2 0x65A JUMP JUMPDEST PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2DF PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x1 DUP2 PUSH2 0x2F0 PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x312 PUSH2 0xEFA JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH2 0x27D PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E PUSH2 0x65A JUMP JUMPDEST PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x372 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 PUSH1 0x1 DUP1 DUP1 PUSH2 0x2F0 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x3AE PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x3D0 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 PUSH2 0x65A JUMP JUMPDEST PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x439 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 PUSH2 0x44A PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x46C PUSH2 0xEFA JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 PUSH2 0x481 PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x4A3 PUSH2 0xEFA JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP1 SWAP1 PUSH2 0x4B2 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 PUSH2 0x4D3 PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x4F5 PUSH2 0xEFA JUMP JUMPDEST POP POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 PUSH2 0x505 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCB4774F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x548 PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 PUSH2 0x55A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x567 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x583 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x5A2 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP DUP3 SWAP2 POP PUSH1 0x5 SWAP1 POP PUSH2 0x5BC PUSH2 0xEFA JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CF PUSH2 0x65A JUMP JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x613 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 DUP1 PUSH1 0x6 PUSH2 0x622 PUSH2 0xEFA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x639 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH2 0x3AE PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207468652052756269636F6E204D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x6C7 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST GAS PUSH2 0x6D3 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x6DD PUSH2 0xE9A JUMP JUMPDEST LT PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11F2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x71F PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x74616B6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x77A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6D616B6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x7D5 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0x7E4 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC0198AC4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x827 PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 PUSH2 0x839 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x846 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x862 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 PUSH2 0x881 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP POP POP GAS PUSH2 0x897 PUSH2 0x10C5 JUMP JUMPDEST GT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x292121A7102234B9BA3934B13ABA34B7B71034B99037BB32B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x8EB PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x90B GAS PUSH2 0x8FC PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x906 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP2 PUSH1 0x4 PUSH2 0x91C PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x44D5437D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x95F PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 PUSH2 0x971 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x97E PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x99A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 PUSH2 0x9B9 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP DUP6 SWAP2 POP PUSH2 0x9D1 SWAP1 POP PUSH2 0x280 JUMP JUMPDEST MUL MUL DUP2 PUSH2 0x9DA JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP2 PUSH1 0x4 PUSH2 0x9EC PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x44D5437D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xA2F PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 PUSH2 0xA41 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xA4E PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xA6A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 PUSH2 0xA89 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP DUP7 SWAP2 POP PUSH2 0xAA1 SWAP1 POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x64 SUB MUL MUL DUP2 PUSH2 0xAAD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xABA DUP7 DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x191A5CDD1C9A589D5D1A5BDB881D1BC81B585AD95C8819985A5B1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xB0F PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xB1C DUP6 DUP3 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x191A5CDD1C9A589D5D1A5BDB881D1BC81D185AD95C8819985A5B1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xB71 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST GAS PUSH2 0xB7D PUSH2 0x10C5 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH2 0xB88 PUSH2 0xEFA JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH2 0x27D PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xC03 PUSH2 0xE2F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0xC18 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0xC3A PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x18D85B1B195C881A5CC81B9BDD08149D589A58DBDB8813585C9AD95D PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xC99 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0xCA8 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0xD09 PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 PUSH2 0xD1B PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xD28 PUSH2 0x110B JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xD45 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 PUSH2 0xD64 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP PUSH2 0xDC5 SWAP2 POP POP JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1D1C985B9CD9995C881BD988149090D38819985A5B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xDC2 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH32 0xA8EE3E5C0B1FD681042265199E8B28CF463B81BC21F6658D4C73E741AEABD3F5 DUP4 DUP4 GAS PUSH2 0xDF1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xE67 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE4C JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x8435035B MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100B JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0xB93 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0xB93 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x1043 JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x102B JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x1098 DUP14 RETURNDATASIZE PUSH2 0xFFB JUMP JUMPDEST DUP13 ADD PUSH2 0x10A4 DUP2 DUP8 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A5 JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x85979F76 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP8 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x114F JUMPI DUP1 DUP10 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1137 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP11 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP13 DUP13 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x11A4 DUP15 RETURNDATASIZE PUSH2 0xFFB JUMP JUMPDEST DUP14 ADD PUSH2 0x11B0 DUP2 DUP8 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11B1 JUMP JUMPDEST POP SWAP3 SWAP14 POP POP POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E657274696D654F664C6173745242 NUMBER 0x4E DIFFICULTY PUSH10 0x7374203C20626C6F636B 0x2E PUSH21 0x696D657374616D7000000000000000000000000000 ",
              "sourceMap": "115:5070:0:-;;;635:283;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;635:283:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;635:283:0;;;;;;;;;;;;;;-1:-1:-1;;;715:22:0;707:31;;;;;;:::i;:::-;;;;756:6;748:5;:14;:5;:14;;:::i;:::-;;-1:-1:-1;;;;;748:14:0;;;;;-1:-1:-1;;;;;748:14:0;;;;;;:::i;:::-;;;;795:17;772:20;:40;;;;:::i;:::-;;;;909:2;894:12;:17;;;;:::i;:::-;;;;635:283;;115:5070;;;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;242:1;231:9;227:17;295:4;284:9;277:23;362:6;355:4;344:9;340:20;333:36;424:1;407:143;436:6;431:3;428:15;407:143;;;536:3;528:6;524:16;518:23;486:30;;;505:4;486:30;479:63;462:4;453:14;407:143;;;411:16;720:4;709:9;700:6;694:4;690:17;679:9;674:51;;;;;;;;;;;;;;;;;;;;;;;;;;0:821;;;115:5070:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;259:22;;521:1;504:100;533:4;528:3;525:13;504:100;;;598:1;577:19;;;570:30;557:4;548:14;504:100;;;508:16;0:607;;115:5070:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;219:2;212:4;201:9;197:20;190:32;284:1;273:9;269:2;258:9;253:33;;;;;;;;;;;;;;;;;;;;;;;;;;530:1;579:30;;566:4;513:100;;115:5070:0;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001957600080610016610e2f565b50505b50600436106100d95760003560e01c806305a695c5146100e7578063114eb4db1461010157806313af4035146101095780631d156dcf1461014c578063540907bb146101545780635794a68a1461018357806358cb0340146101a757806360f71b24146101af57806382f107e0146101b75780638aadb371146101ee5780638cce6851146102145780638da5cb5b1461021c5780638f32d59b14610224578063b30ed7b31461022c578063c3a4b81f14610263578063d6c3bf2c1461026b575b6000806100e4610e2f565b50505b6100ef610273565b60405190815260200160405180910390f35b6100ef610280565b6101386004803603602081101561012857600080610125610e2f565b50505b50356001600160a01b0316610291565b604051901515815260200160405180910390f35b6100ef61031a565b6101386004803603602081101561017357600080610170610e2f565b50505b50356001600160a01b0316610324565b61018b610382565b6040516001600160a01b03909116815260200160405180910390f35b6101386103a1565b61018b6103df565b610138600480360360408110156101d6576000806101d3610e2f565b50505b506001600160a01b03813581169160200135166103eb565b6101386004803603602081101561020d5760008061020a610e2f565b50505b50356105c5565b61018b61062d565b61018b61064e565b61013861065a565b6101386004803603604081101561024b57600080610248610e2f565b50505b506001600160a01b0381358116916020013516610667565b6100ef610b99565b61018b610ba3565b600561027d610e9a565b81565b6000600661028c610e9a565b905090565b600061029b61065a565b6102e25760405162461bcd60e51b815260206004820181905260248201526000805160206111d28339815191526044820152606401604051809103906102df610e2f565b50505b8160036001816102f0610e9a565b816001600160a01b0302191690836001600160a01b0316021790610312610efa565b505050919050565b600261027d610e9a565b600061032e61065a565b6103755760405162461bcd60e51b815260206004820181905260248201526000805160206111d2833981519152604482015260640160405180910390610372610e2f565b50505b81600180806102f0610e9a565b6000600461038e610e9a565b906101000a90046001600160a01b031681565b60008060016103ae610e9a565b906101000a90046001600160a01b03166001600160a01b03165a6103d0610f48565b6001600160a01b031614905090565b6000600161038e610e9a565b60006103f561065a565b61043c5760405162461bcd60e51b815260206004820181905260248201526000805160206111d2833981519152604482015260640160405180910390610439610e2f565b50505b82600060018161044a610e9a565b816001600160a01b0302191690836001600160a01b031602179061046c610efa565b50505081600160006101000a81610481610e9a565b816001600160a01b0302191690836001600160a01b03160217906104a3610efa565b505050600080906104b2610e9a565b906101000a90046001600160a01b0316600460006101000a816104d3610e9a565b816001600160a01b0302191690836001600160a01b03160217906104f5610efa565b5050506004600090610505610e9a565b906101000a90046001600160a01b03166001600160a01b031663cb4774f36040518163ffffffff1660e01b81526004016020604051808303818680610548610f8e565b15801561055d5760008061055a610e2f565b50505b505a610567610fda565b5050505050158015610586573d6000803e3d6000610583610e2f565b50505b505050506040513d60208110156105a5576000806105a2610e2f565b50505b8101908080519250829150600590506105bc610efa565b50505092915050565b60006105cf61065a565b6106165760405162461bcd60e51b815260206004820181905260248201526000805160206111d2833981519152604482015260640160405180910390610613610e2f565b50505b81806006610622610efa565b506001949350505050565b60008080610639610e9a565b906101000a90046001600160a01b0316905090565b6000600361038e610e9a565b60008060036103ae610e9a565b60006106716103a1565b6106ca5760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f74207468652052756269636f6e204d61726b65746044820152606401604051809103906106c7610e2f565b50505b5a6106d36110c5565b60056106dd610e9a565b106107225760405162461bcd60e51b81526004018080602001828103825260248152602001806111f2602491396040019150506040518091039061071f610e2f565b50505b6001600160a01b03821661077d5760405162461bcd60e51b815260206004820152601560248201527474616b6572206973207a65726f206164647265737360581b60448201526064016040518091039061077a610e2f565b50505b6001600160a01b0383166107d85760405162461bcd60e51b81526020600482015260156024820152746d616b6572206973207a65726f206164647265737360581b6044820152606401604051809103906107d5610e2f565b50505b600060046107e4610e9a565b906101000a90046001600160a01b03166001600160a01b031663c0198ac46040518163ffffffff1660e01b81526004016020604051808303818680610827610f8e565b15801561083c57600080610839610e2f565b50505b505a610846610fda565b5050505050158015610865573d6000803e3d6000610862610e2f565b50505b505050506040513d602081101561088457600080610881610e2f565b50505b810190808051925050505a6108976110c5565b11156108ee5760405162461bcd60e51b8152602060048201526019602482015278292121a7102234b9ba3934b13aba34b7b71034b99037bb32b960391b6044820152606401604051809103906108eb610e2f565b50505b600061090b5a6108fc6110c5565b6005610906610e9a565b610bae565b90506000606481600461091c610e9a565b906101000a90046001600160a01b03166001600160a01b03166344d5437d6040518163ffffffff1660e01b8152600401602060405180830381868061095f610f8e565b15801561097457600080610971610e2f565b50505b505a61097e610fda565b505050505015801561099d573d6000803e3d600061099a610e2f565b50505b505050506040513d60208110156109bc576000806109b9610e2f565b50505b81019080805192508591506109d19050610280565b0202816109da57fe5b049050600060648160046109ec610e9a565b906101000a90046001600160a01b03166001600160a01b03166344d5437d6040518163ffffffff1660e01b81526004016020604051808303818680610a2f610f8e565b158015610a4457600080610a41610e2f565b50505b505a610a4e610fda565b5050505050158015610a6d573d6000803e3d6000610a6a610e2f565b50505b505050506040513d6020811015610a8c57600080610a89610e2f565b50505b8101908080519250869150610aa19050610280565b606403020281610aad57fe5b049050610aba8683610c0b565b610b125760405162461bcd60e51b815260206004820152601c60248201527b191a5cdd1c9a589d5d1a5bdb881d1bc81b585ad95c8819985a5b195960221b604482015260640160405180910390610b0f610e2f565b50505b610b1c8582610c0b565b610b745760405162461bcd60e51b815260206004820152601c60248201527b191a5cdd1c9a589d5d1a5bdb881d1bc81d185ad95c8819985a5b195960221b604482015260640160405180910390610b71610e2f565b50505b5a610b7d6110c5565b806005610b88610efa565b505050600193505050505b92915050565b600661027d610e9a565b60008061038e610e9a565b80820382811115610b935760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015260640160405180910390610c03610e2f565b505092915050565b6000806001610c18610e9a565b906101000a90046001600160a01b03166001600160a01b03165a610c3a610f48565b6001600160a01b031614610c9c5760405162461bcd60e51b815260206004820152601c60248201527b18d85b1b195c881a5cc81b9bdd08149d589a58dbdb8813585c9ad95d60221b604482015260640160405180910390610c99610e2f565b50505b60006004610ca8610e9a565b906101000a90046001600160a01b03166001600160a01b031663a9059cbb84846040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038160008780610d09610f8e565b158015610d1e57600080610d1b610e2f565b50505b505a610d2861110b565b505050505050158015610d48573d6000803e3d6000610d45610e2f565b50505b505050506040513d6020811015610d6757600080610d64610e2f565b50505b8101908080519250610dc59150505760405162461bcd60e51b81526020600482015260176024820152761d1c985b9cd9995c881bd988149090d38819985a5b1959604a1b604482015260640160405180910390610dc2610e2f565b50505b7fa8ee3e5c0b1fd681042265199e8b28cf463b81bc21f6658d4c73e741aeabd3f583835a610df16110c5565b60405180846001600160a01b03166001600160a01b03168152602001838152602001828152602001935050505060405180910390a150600192915050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610e67578086015182820160400152602001610e4c565b506020828760640184336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52505050565b6303daa959598160e01b8152836004820152602081602483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c528051935060005b6040811015610ef557600082820152602001610ede565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52600081526020610ede565b6373509064598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020610ede565b638435035b598160e01b8152836004820152602081602483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020610ede565b638540661f598160e01b815261100b565b8080831115610b93575090919050565b8080831015610b93575090919050565b836004820152846024820152606060448201528660648201526084810160005b8881101561104357808801518282015260200161102b565b506060828960a40184336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52815160408301513d6000853e8b8b82606087013350600060045af150596110988d3d610ffb565b8c016110a48187610feb565b5b828110156110b957600081526020016110a5565b50929c50505050505050565b63bdbf8c36598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020610ede565b6385979f76598160e01b8152836004820152846024820152606060448201528760648201526084810160005b8981101561114f578089015182820152602001611137565b506060828a60a40184336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52815160408301513d6000853e8c8c82606087013350600060045af150596111a48e3d610ffb565b8d016111b08187610feb565b5b828110156111c557600081526020016111b1565b50929d5050505050505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657274696d654f664c6173745242434e44697374203c20626c6f636b2e74696d657374616d70",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A695C5 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x114EB4DB EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1D156DCF EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x540907BB EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x5794A68A EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x58CB0340 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x60F71B24 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x82F107E0 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8AADB371 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8CCE6851 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB30ED7B3 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xC3A4B81F EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD6C3BF2C EQ PUSH2 0x26B JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE4 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xEF PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x280 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 PUSH2 0x125 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x31A JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 PUSH2 0x170 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x324 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1D3 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 PUSH2 0x20A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x62D JUMP JUMPDEST PUSH2 0x18B PUSH2 0x64E JUMP JUMPDEST PUSH2 0x138 PUSH2 0x65A JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 PUSH2 0x248 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x667 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x18B PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x27D PUSH2 0xE9A JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH2 0x28C PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B PUSH2 0x65A JUMP JUMPDEST PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2DF PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x1 DUP2 PUSH2 0x2F0 PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x312 PUSH2 0xEFA JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH2 0x27D PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E PUSH2 0x65A JUMP JUMPDEST PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x372 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 PUSH1 0x1 DUP1 DUP1 PUSH2 0x2F0 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x3AE PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x3D0 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 PUSH2 0x65A JUMP JUMPDEST PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x439 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 PUSH2 0x44A PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x46C PUSH2 0xEFA JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 PUSH2 0x481 PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x4A3 PUSH2 0xEFA JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP1 SWAP1 PUSH2 0x4B2 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 PUSH2 0x4D3 PUSH2 0xE9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x4F5 PUSH2 0xEFA JUMP JUMPDEST POP POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 PUSH2 0x505 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCB4774F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x548 PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 PUSH2 0x55A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x567 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x583 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x5A2 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP DUP3 SWAP2 POP PUSH1 0x5 SWAP1 POP PUSH2 0x5BC PUSH2 0xEFA JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CF PUSH2 0x65A JUMP JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x11D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x613 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 DUP1 PUSH1 0x6 PUSH2 0x622 PUSH2 0xEFA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x639 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH2 0x3AE PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207468652052756269636F6E204D61726B6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x6C7 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST GAS PUSH2 0x6D3 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x6DD PUSH2 0xE9A JUMP JUMPDEST LT PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11F2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x71F PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x74616B6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x77A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6D616B6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x7D5 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0x7E4 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC0198AC4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x827 PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 PUSH2 0x839 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x846 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x862 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 PUSH2 0x881 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP POP POP GAS PUSH2 0x897 PUSH2 0x10C5 JUMP JUMPDEST GT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x292121A7102234B9BA3934B13ABA34B7B71034B99037BB32B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x8EB PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x90B GAS PUSH2 0x8FC PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x906 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP2 PUSH1 0x4 PUSH2 0x91C PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x44D5437D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x95F PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 PUSH2 0x971 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x97E PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x99A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 PUSH2 0x9B9 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP DUP6 SWAP2 POP PUSH2 0x9D1 SWAP1 POP PUSH2 0x280 JUMP JUMPDEST MUL MUL DUP2 PUSH2 0x9DA JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP2 PUSH1 0x4 PUSH2 0x9EC PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x44D5437D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xA2F PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 PUSH2 0xA41 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xA4E PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xA6A PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 PUSH2 0xA89 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP DUP7 SWAP2 POP PUSH2 0xAA1 SWAP1 POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x64 SUB MUL MUL DUP2 PUSH2 0xAAD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xABA DUP7 DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x191A5CDD1C9A589D5D1A5BDB881D1BC81B585AD95C8819985A5B1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xB0F PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xB1C DUP6 DUP3 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x191A5CDD1C9A589D5D1A5BDB881D1BC81D185AD95C8819985A5B1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xB71 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST GAS PUSH2 0xB7D PUSH2 0x10C5 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH2 0xB88 PUSH2 0xEFA JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH2 0x27D PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38E PUSH2 0xE9A JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xC03 PUSH2 0xE2F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0xC18 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0xC3A PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x18D85B1B195C881A5CC81B9BDD08149D589A58DBDB8813585C9AD95D PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xC99 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0xCA8 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0xD09 PUSH2 0xF8E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 PUSH2 0xD1B PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xD28 PUSH2 0x110B JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xD45 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 PUSH2 0xD64 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 POP PUSH2 0xDC5 SWAP2 POP POP JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1D1C985B9CD9995C881BD988149090D38819985A5B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xDC2 PUSH2 0xE2F JUMP JUMPDEST POP POP JUMPDEST PUSH32 0xA8EE3E5C0B1FD681042265199E8B28CF463B81BC21F6658D4C73E741AEABD3F5 DUP4 DUP4 GAS PUSH2 0xDF1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xE67 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE4C JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x8435035B MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100B JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0xB93 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0xB93 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x1043 JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x102B JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x1098 DUP14 RETURNDATASIZE PUSH2 0xFFB JUMP JUMPDEST DUP13 ADD PUSH2 0x10A4 DUP2 DUP8 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A5 JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x85979F76 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP8 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x114F JUMPI DUP1 DUP10 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1137 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP11 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP13 DUP13 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x11A4 DUP15 RETURNDATASIZE PUSH2 0xFFB JUMP JUMPDEST DUP14 ADD PUSH2 0x11B0 DUP2 DUP8 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11B1 JUMP JUMPDEST POP SWAP3 SWAP14 POP POP POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E657274696D654F664C6173745242 NUMBER 0x4E DIFFICULTY PUSH10 0x7374203C20626C6F636B 0x2E PUSH21 0x696D657374616D7000000000000000000000000000 ",
              "sourceMap": "115:5070:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;115:5070:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;375:33;;;:::i;:::-;;;;;;;;;;;;;;;2956:93;;;:::i;2575:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;2575:101:0;-1:-1:-1;;;;;2575:101:0;;:::i;:::-;;;;;;;;;;;;;;;;;214:35;;;:::i;2306:170::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;2306:170:0;-1:-1:-1;;;;;2306:170:0;;:::i;343:25::-;;;:::i;:::-;;;-1:-1:-1;;;;;343:25:0;;;;;;;;;;;;;;2117:107;;;:::i;172:35::-;;;:::i;924:324::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;924:324:0;;;;;;;;;;:::i;3055:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;3055:164:0;;:::i;2682:91::-;;;:::i;256:20::-;;;:::i;1738:89::-;;;:::i;3703:1480::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;3703:1480:0;;;;;;;;;;:::i;415:27::-;;;:::i;139:26::-;;;:::i;375:33::-;;;;:::i;:::-;;:::o;2956:93::-;3004:7;3030:12;;;:::i;:::-;3023:19;;2956:93;:::o;2575:101::-;2637:4;1375:9;:7;:9::i;:::-;1367:54;;;;-1:-1:-1;;;1367:54:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1367:54:0;;;;;;;;;;;;;;:::i;:::-;;;;2661:8;2653:5;:16;:5;:16;;:::i;:::-;;-1:-1:-1;;;;;2653:16:0;;;;;-1:-1:-1;;;;;2653:16:0;;;;;;:::i;:::-;;;;2575:101;;;:::o;214:35::-;;;;:::i;2306:170::-;2409:4;1375:9;:7;:9::i;:::-;1367:54;;;;-1:-1:-1;;;1367:54:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1367:54:0;;;;;;;;;;;;;;:::i;:::-;;;;2452:17;2429:20;;;:40;;:::i;343:25::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;343:25:0;;:::o;2117:107::-;2160:4;;2197:20;;;:::i;:::-;;;;;;-1:-1:-1;;;;;2197:20:0;-1:-1:-1;;;;;2183:34:0;:10;;;:::i;:::-;-1:-1:-1;;;;;2183:34:0;;2176:41;;2117:107;:::o;172:35::-;;;;;:::i;924:324::-;1052:4;1375:9;:7;:9::i;:::-;1367:54;;;;-1:-1:-1;;;1367:54:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1367:54:0;;;;;;;;;;;;;;:::i;:::-;;;;1086:12;1072:11;:26;:11;:26;;:::i;:::-;;-1:-1:-1;;;;;1072:26:0;;;;;-1:-1:-1;;;;;1072:26:0;;;;;;:::i;:::-;;;;1131:13;1108:20;;:36;;;;;:::i;:::-;;-1:-1:-1;;;;;1108:36:0;;;;;-1:-1:-1;;;;;1108:36:0;;;;;;:::i;:::-;;;;1175:11;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1175:11:0;1154:4;;:33;;;;;:::i;:::-;;-1:-1:-1;;;;;1154:33:0;;;;;-1:-1:-1;;;;;1154:33:0;;;;;;:::i;:::-;;;;1218:4;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1218:4:0;-1:-1:-1;;;;;1218:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;1218:23:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;1218:23:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;1218:23:0;;;;;;;-1:-1:-1;1218:23:0;;-1:-1:-1;1197:18:0;;-1:-1:-1;1197:44:0;;:::i;:::-;;;;924:324;;;;:::o;3055:164::-;3149:4;1375:9;:7;:9::i;:::-;1367:54;;;;-1:-1:-1;;;1367:54:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1367:54:0;;;;;;;;;;;;;;:::i;:::-;;;;3184:7;;3169:12;:22;;:::i;:::-;-1:-1:-1;3208:4:0;;3055:164;-1:-1:-1;;;;3055:164:0:o;2682:91::-;2729:7;;;2755:11;;:::i;:::-;;;;;;-1:-1:-1;;;;;2755:11:0;2748:18;;2682:91;:::o;256:20::-;;;;;:::i;1738:89::-;1778:4;;1815:5;;;:::i;3703:1480::-;3823:4;1588:12;:10;:12::i;:::-;1580:57;;;;-1:-1:-1;;;1580:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3885:15;;;:::i;:::-;3864:18;;;:::i;:::-;:36;3843:119;;;;-1:-1:-1;;;3843:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3980:19:0;;3972:53;;;;-1:-1:-1;;;3972:53:0;;;;;;;;;;;;-1:-1:-1;;;3972:53:0;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;4043:19:0;;4035:53;;;;-1:-1:-1;;;4035:53:0;;;;;;;;;;;;-1:-1:-1;;;4035:53:0;;;;;;;;;;;;;;:::i;:::-;;;;4138:4;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;4138:4:0;-1:-1:-1;;;;;4138:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;4138:21:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;4138:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;4138:21:0;;;;;;;-1:-1:-1;;;4119:15:0;;;:::i;:::-;:40;;4098:112;;;;-1:-1:-1;;;4098:112:0;;;;;;;;;;;;-1:-1:-1;;;4098:112:0;;;;;;;;;;;;;;:::i;:::-;;;;4286:13;4302:40;4306:15;;;:::i;:::-;4323:18;;;:::i;:::-;4302:3;:40::i;:::-;4286:56;-1:-1:-1;4406:24:0;4498:3;4406:24;4476:4;;;:::i;:::-;;;;;;-1:-1:-1;;;;;4476:4:0;-1:-1:-1;;;;;4476:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;4476:18:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;4476:18:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;4476:18:0;;;;;;;-1:-1:-1;4467:5:0;;-1:-1:-1;4446:17:0;;-1:-1:-1;4446:15:0;:17::i;:::-;:27;:48;4445:56;;;;;;;-1:-1:-1;4511:24:0;4613:3;4511:24;4591:4;;;:::i;:::-;;;;;;-1:-1:-1;;;;;4591:4:0;-1:-1:-1;;;;;4591:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;4591:18:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;4591:18:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;4591:18:0;;;;;;;-1:-1:-1;4582:5:0;;-1:-1:-1;4559:17:0;;-1:-1:-1;4559:15:0;:17::i;:::-;4553:3;:23;4551:37;:58;4550:66;;;;;;4511:105;;4743:50;4769:5;4776:16;4743:25;:50::i;:::-;4722:125;;;;-1:-1:-1;;;4722:125:0;;;;;;;;;;;;-1:-1:-1;;;4722:125:0;;;;;;;;;;;;;;:::i;:::-;;;;4920:50;4946:5;4953:16;4920:25;:50::i;:::-;4899:125;;;;-1:-1:-1;;;4899:125:0;;;;;;;;;;;;-1:-1:-1;;;4899:125:0;;;;;;;;;;;;;;:::i;:::-;;;;5139:15;;;:::i;:::-;5118:36;:18;:36;;:::i;:::-;;;;5172:4;5165:11;;;;;1647:1;3703:1480;;;;:::o;415:27::-;;;;:::i;139:26::-;;;;;:::i;1887:136::-;1979:5;;;1974:16;;;;1966:50;;;;-1:-1:-1;;;1966:50:0;;;;;;;;;;;;-1:-1:-1;;;1966:50:0;;;;;;;;;;;;;;:::i;:::-;;;1887:136;;;;:::o;3225:402::-;3329:4;;3384:20;;;:::i;:::-;;;;;;-1:-1:-1;;;;;3384:20:0;-1:-1:-1;;;;;3370:34:0;:10;;;:::i;:::-;-1:-1:-1;;;;;3370:34:0;;3349:109;;;;-1:-1:-1;;;3349:109:0;;;;;;;;;;;;-1:-1:-1;;;3349:109:0;;;;;;;;;;;;;;:::i;:::-;;;;3476:4;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;3476:4:0;-1:-1:-1;;;;;3476:13:0;;3490:9;3501:6;3476:32;;-1:-1:-1;;;;;;3476:32:0;;;;;;;-1:-1:-1;;;;;3476:32:0;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;3476:32:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;3476:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;3476:32:0;;;;;;;-1:-1:-1;3468:68:0;;-1:-1:-1;;3468:68:0;;;-1:-1:-1;;;3468:68:0;;;;;;;;;;;;-1:-1:-1;;;3468:68:0;;;;;;;;;;;;;;:::i;:::-;;;;3551:48;3564:9;3575:6;3583:15;;;:::i;:::-;3551:48;;;;-1:-1:-1;;;;;3551:48:0;-1:-1:-1;;;;;3551:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3616:4:0;3225:402;;;;:::o;115:5070::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;242:1;231:9;227:17;295:4;284:9;277:23;362:6;355:4;344:9;340:20;333:36;424:1;407:143;436:6;431:3;428:15;407:143;;;536:3;528:6;524:16;518:23;486:30;;;505:4;486:30;479:63;462:4;453:14;407:143;;;411:16;720:4;709:9;700:6;694:4;690:17;679:9;674:51;;;;;;;;;;;;;;;;;;;;;;;;;;0:821;;;115:5070:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;259:22;;521:1;504:100;533:4;528:3;525:13;504:100;;;598:1;577:19;;;570:30;557:4;548:14;504:100;;;508:16;0:607;;115:5070:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;219:2;212:4;201:9;197:20;190:32;284:1;273:9;269:2;258:9;253:33;;;;;;;;;;;;;;;;;;;;;;;;;;530:1;579:30;;566:4;513:100;;115:5070:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;115:5070:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;521:1;570:30;;259:22;-1:-1;557:4;504:100;;115:5070:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;188:107;;;241:5;253:17;;;250:2;;;-1:-1;283:6;;226:69;-1:-1;226:69;298:110;353:5;365:17;;;362:2;;;-1:-1;396:6;;337:71;-1:-1;337:71;;462:6;455:4;444:9;440:20;433:36;521:4;514;503:9;499:20;492:34;592:4;585;574:9;570:20;563:34;670:10;663:4;652:9;648:20;641:40;762:4;751:9;747:20;787:1;770:135;799:10;794:3;791:19;770:135;;;895:3;883:10;879:20;873:27;849:22;;;842:59;829:4;820:14;770:135;;;774:16;1304:4;1293:9;1280:10;1274:4;1270:21;1259:9;1254:55;;;;;;;;;;;;;;;;;;;;;;;;;;1354:9;1348:16;1463:4;1452:9;1448:20;1442:27;1707:16;1704:1;1693:9;1678:46;1792:9;1781;1754:25;1747:4;1736:9;1732:20;1727:75;;;;;;;1870:7;2034:32;2056:9;2038:16;2034:32;;;2024:9;2020:47;2087:31;2102:15;2091:9;2087:31;;;2070:123;2129:10;2124:3;2121:19;2070:123;;;2184:4;2172:17;;2159:4;2150:14;2070:123;;;-1:-1;2351:10;;-1:-1;;;;;;;115:5070:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;115:5070:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;462:6;455:4;444:9;440:20;433:36;521:4;514;503:9;499:20;492:34;592:4;585;574:9;570:20;563:34;670:10;663:4;652:9;648:20;641:40;762:4;751:9;747:20;787:1;770:135;799:10;794:3;791:19;770:135;;;895:3;883:10;879:20;873:27;849:22;;;842:59;829:4;820:14;770:135;;;774:16;1304:4;1293:9;1280:10;1274:4;1270:21;1259:9;1254:55;;;;;;;;;;;;;;;;;;;;;;;;;;1354:9;1348:16;1463:4;1452:9;1448:20;1442:27;1707:16;1704:1;1693:9;1678:46;1792:9;1781;1754:25;1747:4;1736:9;1732:20;1727:75;;;;;;;1870:7;2034:32;2056:9;2038:16;2034:32;;;2024:9;2020:47;2087:31;2102:15;2091:9;2087:31;;;2070:123;2129:10;2124:3;2121:19;2070:123;;;2184:4;2172:17;;2159:4;2150:14;2070:123;;;-1:-1;2351:10;;-1:-1;;;;;;;115:5070:0:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "926000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "RBCN()": "infinite",
                "RBCNAddress()": "infinite",
                "RubiconMarketAddress()": "infinite",
                "distributeToMakerAndTaker(address,address)": "infinite",
                "distributionDuration()": "infinite",
                "getPropToMakers()": "infinite",
                "getRBCNAddress()": "infinite",
                "isExchange()": "infinite",
                "isOwner()": "infinite",
                "owner()": "infinite",
                "propToMakers()": "infinite",
                "setDistributionParams(address,address)": "infinite",
                "setNewExchange(address)": "infinite",
                "setOwner(address)": "infinite",
                "setPropToMakers(uint256)": "infinite",
                "timeOfLastRBCNDist()": "infinite"
              },
              "internal": {
                "distributeGovernanceToken(address,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "RBCN()": "5794a68a",
              "RBCNAddress()": "d6c3bf2c",
              "RubiconMarketAddress()": "60f71b24",
              "distributeToMakerAndTaker(address,address)": "b30ed7b3",
              "distributionDuration()": "1d156dcf",
              "getPropToMakers()": "114eb4db",
              "getRBCNAddress()": "8cce6851",
              "isExchange()": "58cb0340",
              "isOwner()": "8f32d59b",
              "owner()": "8da5cb5b",
              "propToMakers()": "c3a4b81f",
              "setDistributionParams(address,address)": "82f107e0",
              "setNewExchange(address)": "540907bb",
              "setOwner(address)": "13af4035",
              "setPropToMakers(uint256)": "8aadb371",
              "timeOfLastRBCNDist()": "05a695c5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16-develop.2020.12.10+ovm+commit.25adf37d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"communityDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Distribution\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"RBCN\",\"outputs\":[{\"internalType\":\"contract RBCNInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RBCNAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RubiconMarketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"distributeToMakerAndTaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPropToMakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRBCNAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"propToMakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RBCNAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RubiconMarket\",\"type\":\"address\"}],\"name\":\"setDistributionParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"setNewExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProp\",\"type\":\"uint256\"}],\"name\":\"setPropToMakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeOfLastRBCNDist\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isExchange()\":{\"details\":\"Returns true if the caller is the current Rubicon Exchange.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"setNewExchange(address)\":{\"details\":\"Admin has the ability to choose a new exchange.\"},\"setOwner(address)\":{\"details\":\"Only the owner can set a new owner. Timelock can be set as owner\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Aqueduct.sol\":\"Aqueduct\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Aqueduct.sol\":{\"content\":\"pragma solidity ^0.5.16;\\n\\nimport \\\"./RBCN.sol\\\";\\n\\n// This contract aims to serve as a holder of the community's RBCN\\ncontract Aqueduct {\\n    address public RBCNAddress;\\n\\n    address public RubiconMarketAddress;\\n\\n    uint256 public distributionDuration;\\n\\n    address public owner;\\n\\n    /// @notice The address of the Rubicon governance token\\n    RBCNInterface public RBCN;\\n\\n    uint256 public timeOfLastRBCNDist;\\n\\n    uint256 public propToMakers; // the number out of 100 that represents proportion of an RBCN trade distribution to go to Maker vs. Taker\\n\\n    event Distribution(address recipient, uint256 amount, uint256 timestamp);\\n\\n    constructor(uint256 communityDuration, address _owner) public {\\n        require(communityDuration != 0);\\n        owner = _owner;\\n        distributionDuration = communityDuration;\\n        // Initial 60/40 distribution of RBCN between makers and takers\\n        propToMakers = 60;\\n    }\\n\\n    function setDistributionParams(address _RBCNAddress, address RubiconMarket)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        RBCNAddress = _RBCNAddress;\\n        RubiconMarketAddress = RubiconMarket;\\n        RBCN = RBCNInterface(RBCNAddress);\\n        timeOfLastRBCNDist = RBCN.getDistStartTime();\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the current Rubicon Exchange.\\n     */\\n    modifier onlyExchange() {\\n        require(isExchange(), \\\"Caller is not the Rubicon Market\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return msg.sender == owner;\\n    }\\n\\n    /**\\n     * @dev Safe subtraction function\\n     */\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x, \\\"ds-math-sub-underflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current Rubicon Exchange.\\n     */\\n    function isExchange() public view returns (bool) {\\n        return msg.sender == RubiconMarketAddress;\\n    }\\n\\n    /**\\n     * @dev Admin has the ability to choose a new exchange.\\n     */\\n    function setNewExchange(address newImplementation)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        RubiconMarketAddress = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Only the owner can set a new owner. Timelock can be set as owner\\n     */\\n    function setOwner(address newOwner) public onlyOwner returns (bool) {\\n        owner = newOwner;\\n    }\\n\\n    function getRBCNAddress() public view returns (address) {\\n        return RBCNAddress;\\n    }\\n\\n    // Should return the proportion of RBCN distribution per block that\\n    // is allocated to a Maker of a trade\\n    // The allocation that goes to the Taker is 1 - % to Maker\\n    function getPropToMakers() public view returns (uint256) {\\n        return propToMakers;\\n    }\\n\\n    function setPropToMakers(uint256 newProp)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        propToMakers = newProp;\\n        return true;\\n    }\\n\\n    function distributeGovernanceToken(address recipient, uint256 amount)\\n        internal\\n        returns (bool)\\n    {\\n        require(\\n            msg.sender == RubiconMarketAddress,\\n            \\\"caller is not Rubicon Market\\\"\\n        );\\n        require(RBCN.transfer(recipient, amount), \\\"transfer of RBCN failed\\\");\\n        emit Distribution(recipient, amount, block.timestamp);\\n        return true;\\n    }\\n\\n    //This function should distribute a time-weighted RBCN allocation\\n    function distributeToMakerAndTaker(address maker, address taker)\\n        external\\n        onlyExchange\\n        returns (bool)\\n    {\\n        require(\\n            timeOfLastRBCNDist < block.timestamp,\\n            \\\"timeOfLastRBCNDist < block.timestamp\\\"\\n        );\\n        require(taker != address(0), \\\"taker is zero address\\\");\\n        require(maker != address(0), \\\"maker is zero address\\\");\\n        require(\\n            block.timestamp <= RBCN.getDistEndTime(),\\n            \\\"RBCN Distribution is over\\\"\\n        );\\n\\n        //calculate change in time from last distribution to now\\n        uint256 delta = sub(block.timestamp, timeOfLastRBCNDist);\\n\\n        //calculate quantity to send maker and taker\\n        uint256 distQuanityMaker =\\n            (getPropToMakers() * (delta) * RBCN.getDistRate()) / 100;\\n        uint256 distQuanityTaker =\\n            (((100 - getPropToMakers())) * (delta) * RBCN.getDistRate()) / 100;\\n\\n        // TO DO: Extrapolate everything to Aqueduct?\\n        //send to Maker distQuanityMaker\\n        require(\\n            distributeGovernanceToken(maker, distQuanityMaker),\\n            \\\"distribution to maker failed\\\"\\n        );\\n\\n        //send to Taker distQuanityTaker\\n        require(\\n            distributeGovernanceToken(taker, distQuanityTaker),\\n            \\\"distribution to taker failed\\\"\\n        );\\n\\n        //time of timeOfLastRBCNDist is set immediately after distribution is made\\n        timeOfLastRBCNDist = block.timestamp;\\n\\n        return true;\\n    }\\n}\\n\\ninterface RBCNInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n\\n    function getDistRate() external pure returns (uint256);\\n\\n    function getDistStartTime() external view returns (uint256);\\n\\n    function getDistEndTime() external view returns (uint256);\\n\\n    function transfer(address, uint256) external returns (bool);\\n}\\n\",\"keccak256\":\"0xf11efcd1b5de5ac47d1874be45dce45e339b5a06c8308f630eeb7322b08d9dc3\"},\"contracts/RBCN.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2020-03-04\\n */\\n\\npragma solidity ^0.5.16;\\n\\n// pragma experimental ABIEncoderV2;\\n\\ncontract RBCN {\\n    /// @notice EIP-20 token name for this token\\n    string public constant name = \\\"Rubicon\\\";\\n\\n    /// @notice EIP-20 token symbol for this token\\n    string public constant symbol = \\\"RBCN\\\";\\n\\n    /// @notice EIP-20 token decimals for this token\\n    uint8 public constant decimals = 18;\\n\\n    /// @notice Total number of tokens in circulation\\n    uint256 public constant totalSupply = 1000000000e18; // 1 billion RBCN\\n\\n    /// @notice The Unix Timestamp to begin RBCN public distribution\\n    uint256 public distStartTime;\\n\\n    /// @notice The Unix Timestamp to begin RBCN public distribution\\n    uint256 public distEndTime;\\n\\n    /// @notice The contract that holds the RBCN public distribution\\n    address public aqueductAddress;\\n\\n    /// @ notice The rate of RBCN per unit of Unix time (millisecond) distributed\\n    ///          to the community\\n    /// Selected Number: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*%28.51%29%29%2F%28365*x*24*60*60%29+%3D+%284044409199048374306+%2F+1e18%29\\n    /// Rate calculation: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*.51%29%2F1.261e%2B8\\n    /// Rate = 4044409199048374 / 1e18 = 4.044409199...\\n    uint256 public constant distRate = 4044409199048374306; //Distribution rate Wad in SECONDS\\n    /// True rate of RBCN per second is distRate / 1e18\\n\\n    /// @notice Allowance amounts on behalf of others\\n    mapping(address => mapping(address => uint96)) internal allowances;\\n\\n    /// @notice Official record of token balances for each account\\n    mapping(address => uint96) internal balances;\\n\\n    /// @notice A record of each accounts delegate\\n    mapping(address => address) public delegates;\\n\\n    /// @notice A checkpoint for marking number of votes from a given block\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint96 votes;\\n    }\\n\\n    /// @notice A record of votes checkpoints for each account, by index\\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\\n\\n    /// @notice The number of checkpoints for each account\\n    mapping(address => uint32) public numCheckpoints;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\\\");\\n\\n    /// @notice A record of states for signing / validating signatures\\n    mapping(address => uint256) public nonces;\\n\\n    /// @notice An event thats emitted when an account changes its delegate\\n    event DelegateChanged(\\n        address indexed delegator,\\n        address indexed fromDelegate,\\n        address indexed toDelegate\\n    );\\n\\n    /// @notice An event thats emitted when a delegate account's vote balance changes\\n    event DelegateVotesChanged(\\n        address indexed delegate,\\n        uint256 previousBalance,\\n        uint256 newBalance\\n    );\\n\\n    /// @notice The standard EIP-20 transfer event\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    /// @notice The standard EIP-20 approval event\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @notice Construct a new RBCN token\\n     * @param aqueduct The holder of all community tokens\\n     * @param admin The recipient of non-community tokens\\n     */\\n    constructor(address aqueduct, address admin) public {\\n        // 51% to community\\n        balances[aqueduct] = uint96(510000000e18);\\n        emit Transfer(address(0), aqueduct, uint256(1000000000e18));\\n        aqueductAddress = aqueduct;\\n\\n        // 49% to admin. See distribution here:\\n        balances[admin] = uint96(490000000e18);\\n        emit Transfer(address(0), admin, uint96(490000000e18));\\n\\n        // Start distributing RBCN to community at launch\\n        distStartTime = now;\\n        distEndTime = now + (4 * 365 days);\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\\n     * @param account The address of the account holding the funds\\n     * @param spender The address of the account spending the funds\\n     * @return The number of tokens approved\\n     */\\n    function allowance(address account, address spender)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return allowances[account][spender];\\n    }\\n\\n    /**\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\n     * @dev This will overwrite the approval amount for `spender`\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\n     * @param spender The address of the account which may transfer tokens\\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\\n     * @return Whether or not the approval succeeded\\n     */\\n    function approve(address spender, uint256 rawAmount)\\n        external\\n        returns (bool)\\n    {\\n        uint96 amount;\\n        if (rawAmount == uint256(-1)) {\\n            amount = uint96(-1);\\n        } else {\\n            amount = safe96(rawAmount, \\\"RBCN::approve: amount exceeds 96 bits\\\");\\n        }\\n\\n        allowances[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens held by the `account`\\n     * @param account The address of the account to get the balance of\\n     * @return The number of tokens held\\n     */\\n    function balanceOf(address account) external view returns (uint256) {\\n        return balances[account];\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\n     * @param dst The address of the destination account\\n     * @param rawAmount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transfer(address dst, uint256 rawAmount) external returns (bool) {\\n        uint96 amount =\\n            safe96(rawAmount, \\\"RBCN::transfer: amount exceeds 96 bits\\\");\\n        _transferTokens(msg.sender, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\n     * @param src The address of the source account\\n     * @param dst The address of the destination account\\n     * @param rawAmount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 rawAmount\\n    ) external returns (bool) {\\n        address spender = msg.sender;\\n        uint96 spenderAllowance = allowances[src][spender];\\n        uint96 amount =\\n            safe96(rawAmount, \\\"RBCN::approve: amount exceeds 96 bits\\\");\\n\\n        if (spender != src && spenderAllowance != uint96(-1)) {\\n            uint96 newAllowance =\\n                sub96(\\n                    spenderAllowance,\\n                    amount,\\n                    \\\"RBCN::transferFrom: transfer amount exceeds spender allowance\\\"\\n                );\\n            allowances[src][spender] = newAllowance;\\n\\n            emit Approval(src, spender, newAllowance);\\n        }\\n\\n        _transferTokens(src, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Delegate votes from `msg.sender` to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     */\\n    function delegate(address delegatee) public {\\n        return _delegate(msg.sender, delegatee);\\n    }\\n\\n    /**\\n     * @notice Delegates votes from signatory to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     * @param nonce The contract state required to match the signature\\n     * @param expiry The time at which to expire the signature\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function delegateBySig(\\n        address delegatee,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name)),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n        bytes32 structHash =\\n            keccak256(\\n                abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\\n            );\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"RBCN::delegateBySig: invalid signature\\\"\\n        );\\n        require(\\n            nonce == nonces[signatory]++,\\n            \\\"RBCN::delegateBySig: invalid nonce\\\"\\n        );\\n        require(now <= expiry, \\\"RBCN::delegateBySig: signature expired\\\");\\n        return _delegate(signatory, delegatee);\\n    }\\n\\n    /**\\n     * @notice Gets the current votes balance for `account`\\n     * @param account The address to get votes balance\\n     * @return The number of current votes for `account`\\n     */\\n    function getCurrentVotes(address account) external view returns (uint96) {\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        return\\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\\n    }\\n\\n    /**\\n     * @notice Determine the prior number of votes for an account as of a block number\\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\\n     * @param account The address of the account to check\\n     * @param blockNumber The block number to get the vote balance at\\n     * @return The number of votes the account had as of the given block\\n     */\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        require(\\n            blockNumber < block.number,\\n            \\\"RBCN::getPriorVotes: not yet determined\\\"\\n        );\\n\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        if (nCheckpoints == 0) {\\n            return 0;\\n        }\\n\\n        // First check most recent balance\\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\\n            return checkpoints[account][nCheckpoints - 1].votes;\\n        }\\n\\n        // Next check implicit zero balance\\n        if (checkpoints[account][0].fromBlock > blockNumber) {\\n            return 0;\\n        }\\n\\n        uint32 lower = 0;\\n        uint32 upper = nCheckpoints - 1;\\n        while (upper > lower) {\\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n            Checkpoint memory cp = checkpoints[account][center];\\n            if (cp.fromBlock == blockNumber) {\\n                return cp.votes;\\n            } else if (cp.fromBlock < blockNumber) {\\n                lower = center;\\n            } else {\\n                upper = center - 1;\\n            }\\n        }\\n        return checkpoints[account][lower].votes;\\n    }\\n\\n    function getDistStartTime() external view returns (uint256) {\\n        return distStartTime;\\n    }\\n\\n    function getDistEndTime() external view returns (uint256) {\\n        return distEndTime;\\n    }\\n\\n    function getDistRate() external pure returns (uint256) {\\n        return distRate;\\n    }\\n\\n    function _delegate(address delegator, address delegatee) internal {\\n        address currentDelegate = delegates[delegator];\\n        uint96 delegatorBalance = balances[delegator];\\n        delegates[delegator] = delegatee;\\n\\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\\n\\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\\n    }\\n\\n    function _transferTokens(\\n        address src,\\n        address dst,\\n        uint96 amount\\n    ) internal {\\n        require(\\n            src != address(0),\\n            \\\"RBCN::_transferTokens: cannot transfer from the zero address\\\"\\n        );\\n        require(\\n            dst != address(0),\\n            \\\"RBCN::_transferTokens: cannot transfer to the zero address\\\"\\n        );\\n\\n        balances[src] = sub96(\\n            balances[src],\\n            amount,\\n            \\\"RBCN::_transferTokens: transfer amount exceeds balance\\\"\\n        );\\n        balances[dst] = add96(\\n            balances[dst],\\n            amount,\\n            \\\"RBCN::_transferTokens: transfer amount overflows\\\"\\n        );\\n        emit Transfer(src, dst, amount);\\n\\n        _moveDelegates(delegates[src], delegates[dst], amount);\\n    }\\n\\n    function _moveDelegates(\\n        address srcRep,\\n        address dstRep,\\n        uint96 amount\\n    ) internal {\\n        if (srcRep != dstRep && amount > 0) {\\n            if (srcRep != address(0)) {\\n                uint32 srcRepNum = numCheckpoints[srcRep];\\n                uint96 srcRepOld =\\n                    srcRepNum > 0\\n                        ? checkpoints[srcRep][srcRepNum - 1].votes\\n                        : 0;\\n                uint96 srcRepNew =\\n                    sub96(\\n                        srcRepOld,\\n                        amount,\\n                        \\\"RBCN::_moveVotes: vote amount underflows\\\"\\n                    );\\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\\n            }\\n\\n            if (dstRep != address(0)) {\\n                uint32 dstRepNum = numCheckpoints[dstRep];\\n                uint96 dstRepOld =\\n                    dstRepNum > 0\\n                        ? checkpoints[dstRep][dstRepNum - 1].votes\\n                        : 0;\\n                uint96 dstRepNew =\\n                    add96(\\n                        dstRepOld,\\n                        amount,\\n                        \\\"RBCN::_moveVotes: vote amount overflows\\\"\\n                    );\\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\\n            }\\n        }\\n    }\\n\\n    function _writeCheckpoint(\\n        address delegatee,\\n        uint32 nCheckpoints,\\n        uint96 oldVotes,\\n        uint96 newVotes\\n    ) internal {\\n        uint32 blockNumber =\\n            safe32(\\n                block.number,\\n                \\\"RBCN::_writeCheckpoint: block number exceeds 32 bits\\\"\\n            );\\n\\n        if (\\n            nCheckpoints > 0 &&\\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\\n        ) {\\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\\n        } else {\\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\\n                blockNumber,\\n                newVotes\\n            );\\n            numCheckpoints[delegatee] = nCheckpoints + 1;\\n        }\\n\\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\\n    }\\n\\n    function safe32(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint32)\\n    {\\n        require(n < 2**32, errorMessage);\\n        return uint32(n);\\n    }\\n\\n    function safe96(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint96)\\n    {\\n        require(n < 2**96, errorMessage);\\n        return uint96(n);\\n    }\\n\\n    function add96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        uint96 c = a + b;\\n        require(c >= a, errorMessage);\\n        return c;\\n    }\\n\\n    function sub96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\",\"keccak256\":\"0x521c3b92ca2fd7dde75cec2da33579576c55a6c59c18ca155c791141abc380d4\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 4,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "RBCNAddress",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 6,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "RubiconMarketAddress",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 8,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "distributionDuration",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 10,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "owner",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              },
              {
                "astId": 12,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "RBCN",
                "offset": 0,
                "slot": "4",
                "type": "t_contract(RBCNInterface)390"
              },
              {
                "astId": 14,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "timeOfLastRBCNDist",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 16,
                "contract": "contracts/Aqueduct.sol:Aqueduct",
                "label": "propToMakers",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_contract(RBCNInterface)390": {
                "encoding": "inplace",
                "label": "contract RBCNInterface",
                "numberOfBytes": "20"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "methods": {}
          }
        },
        "RBCNInterface": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "getDistEndTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getDistRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getDistStartTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getPriorVotes",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "",
                  "type": "uint96"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "getDistEndTime()": "c0198ac4",
              "getDistRate()": "44d5437d",
              "getDistStartTime()": "cb4774f3",
              "getPriorVotes(address,uint256)": "782d6fe1",
              "transfer(address,uint256)": "a9059cbb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16-develop.2020.12.10+ovm+commit.25adf37d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getDistEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDistRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDistStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Aqueduct.sol\":\"RBCNInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Aqueduct.sol\":{\"content\":\"pragma solidity ^0.5.16;\\n\\nimport \\\"./RBCN.sol\\\";\\n\\n// This contract aims to serve as a holder of the community's RBCN\\ncontract Aqueduct {\\n    address public RBCNAddress;\\n\\n    address public RubiconMarketAddress;\\n\\n    uint256 public distributionDuration;\\n\\n    address public owner;\\n\\n    /// @notice The address of the Rubicon governance token\\n    RBCNInterface public RBCN;\\n\\n    uint256 public timeOfLastRBCNDist;\\n\\n    uint256 public propToMakers; // the number out of 100 that represents proportion of an RBCN trade distribution to go to Maker vs. Taker\\n\\n    event Distribution(address recipient, uint256 amount, uint256 timestamp);\\n\\n    constructor(uint256 communityDuration, address _owner) public {\\n        require(communityDuration != 0);\\n        owner = _owner;\\n        distributionDuration = communityDuration;\\n        // Initial 60/40 distribution of RBCN between makers and takers\\n        propToMakers = 60;\\n    }\\n\\n    function setDistributionParams(address _RBCNAddress, address RubiconMarket)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        RBCNAddress = _RBCNAddress;\\n        RubiconMarketAddress = RubiconMarket;\\n        RBCN = RBCNInterface(RBCNAddress);\\n        timeOfLastRBCNDist = RBCN.getDistStartTime();\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the current Rubicon Exchange.\\n     */\\n    modifier onlyExchange() {\\n        require(isExchange(), \\\"Caller is not the Rubicon Market\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return msg.sender == owner;\\n    }\\n\\n    /**\\n     * @dev Safe subtraction function\\n     */\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x, \\\"ds-math-sub-underflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current Rubicon Exchange.\\n     */\\n    function isExchange() public view returns (bool) {\\n        return msg.sender == RubiconMarketAddress;\\n    }\\n\\n    /**\\n     * @dev Admin has the ability to choose a new exchange.\\n     */\\n    function setNewExchange(address newImplementation)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        RubiconMarketAddress = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Only the owner can set a new owner. Timelock can be set as owner\\n     */\\n    function setOwner(address newOwner) public onlyOwner returns (bool) {\\n        owner = newOwner;\\n    }\\n\\n    function getRBCNAddress() public view returns (address) {\\n        return RBCNAddress;\\n    }\\n\\n    // Should return the proportion of RBCN distribution per block that\\n    // is allocated to a Maker of a trade\\n    // The allocation that goes to the Taker is 1 - % to Maker\\n    function getPropToMakers() public view returns (uint256) {\\n        return propToMakers;\\n    }\\n\\n    function setPropToMakers(uint256 newProp)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        propToMakers = newProp;\\n        return true;\\n    }\\n\\n    function distributeGovernanceToken(address recipient, uint256 amount)\\n        internal\\n        returns (bool)\\n    {\\n        require(\\n            msg.sender == RubiconMarketAddress,\\n            \\\"caller is not Rubicon Market\\\"\\n        );\\n        require(RBCN.transfer(recipient, amount), \\\"transfer of RBCN failed\\\");\\n        emit Distribution(recipient, amount, block.timestamp);\\n        return true;\\n    }\\n\\n    //This function should distribute a time-weighted RBCN allocation\\n    function distributeToMakerAndTaker(address maker, address taker)\\n        external\\n        onlyExchange\\n        returns (bool)\\n    {\\n        require(\\n            timeOfLastRBCNDist < block.timestamp,\\n            \\\"timeOfLastRBCNDist < block.timestamp\\\"\\n        );\\n        require(taker != address(0), \\\"taker is zero address\\\");\\n        require(maker != address(0), \\\"maker is zero address\\\");\\n        require(\\n            block.timestamp <= RBCN.getDistEndTime(),\\n            \\\"RBCN Distribution is over\\\"\\n        );\\n\\n        //calculate change in time from last distribution to now\\n        uint256 delta = sub(block.timestamp, timeOfLastRBCNDist);\\n\\n        //calculate quantity to send maker and taker\\n        uint256 distQuanityMaker =\\n            (getPropToMakers() * (delta) * RBCN.getDistRate()) / 100;\\n        uint256 distQuanityTaker =\\n            (((100 - getPropToMakers())) * (delta) * RBCN.getDistRate()) / 100;\\n\\n        // TO DO: Extrapolate everything to Aqueduct?\\n        //send to Maker distQuanityMaker\\n        require(\\n            distributeGovernanceToken(maker, distQuanityMaker),\\n            \\\"distribution to maker failed\\\"\\n        );\\n\\n        //send to Taker distQuanityTaker\\n        require(\\n            distributeGovernanceToken(taker, distQuanityTaker),\\n            \\\"distribution to taker failed\\\"\\n        );\\n\\n        //time of timeOfLastRBCNDist is set immediately after distribution is made\\n        timeOfLastRBCNDist = block.timestamp;\\n\\n        return true;\\n    }\\n}\\n\\ninterface RBCNInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n\\n    function getDistRate() external pure returns (uint256);\\n\\n    function getDistStartTime() external view returns (uint256);\\n\\n    function getDistEndTime() external view returns (uint256);\\n\\n    function transfer(address, uint256) external returns (bool);\\n}\\n\",\"keccak256\":\"0xf11efcd1b5de5ac47d1874be45dce45e339b5a06c8308f630eeb7322b08d9dc3\"},\"contracts/RBCN.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2020-03-04\\n */\\n\\npragma solidity ^0.5.16;\\n\\n// pragma experimental ABIEncoderV2;\\n\\ncontract RBCN {\\n    /// @notice EIP-20 token name for this token\\n    string public constant name = \\\"Rubicon\\\";\\n\\n    /// @notice EIP-20 token symbol for this token\\n    string public constant symbol = \\\"RBCN\\\";\\n\\n    /// @notice EIP-20 token decimals for this token\\n    uint8 public constant decimals = 18;\\n\\n    /// @notice Total number of tokens in circulation\\n    uint256 public constant totalSupply = 1000000000e18; // 1 billion RBCN\\n\\n    /// @notice The Unix Timestamp to begin RBCN public distribution\\n    uint256 public distStartTime;\\n\\n    /// @notice The Unix Timestamp to begin RBCN public distribution\\n    uint256 public distEndTime;\\n\\n    /// @notice The contract that holds the RBCN public distribution\\n    address public aqueductAddress;\\n\\n    /// @ notice The rate of RBCN per unit of Unix time (millisecond) distributed\\n    ///          to the community\\n    /// Selected Number: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*%28.51%29%29%2F%28365*x*24*60*60%29+%3D+%284044409199048374306+%2F+1e18%29\\n    /// Rate calculation: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*.51%29%2F1.261e%2B8\\n    /// Rate = 4044409199048374 / 1e18 = 4.044409199...\\n    uint256 public constant distRate = 4044409199048374306; //Distribution rate Wad in SECONDS\\n    /// True rate of RBCN per second is distRate / 1e18\\n\\n    /// @notice Allowance amounts on behalf of others\\n    mapping(address => mapping(address => uint96)) internal allowances;\\n\\n    /// @notice Official record of token balances for each account\\n    mapping(address => uint96) internal balances;\\n\\n    /// @notice A record of each accounts delegate\\n    mapping(address => address) public delegates;\\n\\n    /// @notice A checkpoint for marking number of votes from a given block\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint96 votes;\\n    }\\n\\n    /// @notice A record of votes checkpoints for each account, by index\\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\\n\\n    /// @notice The number of checkpoints for each account\\n    mapping(address => uint32) public numCheckpoints;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\\\");\\n\\n    /// @notice A record of states for signing / validating signatures\\n    mapping(address => uint256) public nonces;\\n\\n    /// @notice An event thats emitted when an account changes its delegate\\n    event DelegateChanged(\\n        address indexed delegator,\\n        address indexed fromDelegate,\\n        address indexed toDelegate\\n    );\\n\\n    /// @notice An event thats emitted when a delegate account's vote balance changes\\n    event DelegateVotesChanged(\\n        address indexed delegate,\\n        uint256 previousBalance,\\n        uint256 newBalance\\n    );\\n\\n    /// @notice The standard EIP-20 transfer event\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    /// @notice The standard EIP-20 approval event\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @notice Construct a new RBCN token\\n     * @param aqueduct The holder of all community tokens\\n     * @param admin The recipient of non-community tokens\\n     */\\n    constructor(address aqueduct, address admin) public {\\n        // 51% to community\\n        balances[aqueduct] = uint96(510000000e18);\\n        emit Transfer(address(0), aqueduct, uint256(1000000000e18));\\n        aqueductAddress = aqueduct;\\n\\n        // 49% to admin. See distribution here:\\n        balances[admin] = uint96(490000000e18);\\n        emit Transfer(address(0), admin, uint96(490000000e18));\\n\\n        // Start distributing RBCN to community at launch\\n        distStartTime = now;\\n        distEndTime = now + (4 * 365 days);\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\\n     * @param account The address of the account holding the funds\\n     * @param spender The address of the account spending the funds\\n     * @return The number of tokens approved\\n     */\\n    function allowance(address account, address spender)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return allowances[account][spender];\\n    }\\n\\n    /**\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\n     * @dev This will overwrite the approval amount for `spender`\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\n     * @param spender The address of the account which may transfer tokens\\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\\n     * @return Whether or not the approval succeeded\\n     */\\n    function approve(address spender, uint256 rawAmount)\\n        external\\n        returns (bool)\\n    {\\n        uint96 amount;\\n        if (rawAmount == uint256(-1)) {\\n            amount = uint96(-1);\\n        } else {\\n            amount = safe96(rawAmount, \\\"RBCN::approve: amount exceeds 96 bits\\\");\\n        }\\n\\n        allowances[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens held by the `account`\\n     * @param account The address of the account to get the balance of\\n     * @return The number of tokens held\\n     */\\n    function balanceOf(address account) external view returns (uint256) {\\n        return balances[account];\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\n     * @param dst The address of the destination account\\n     * @param rawAmount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transfer(address dst, uint256 rawAmount) external returns (bool) {\\n        uint96 amount =\\n            safe96(rawAmount, \\\"RBCN::transfer: amount exceeds 96 bits\\\");\\n        _transferTokens(msg.sender, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\n     * @param src The address of the source account\\n     * @param dst The address of the destination account\\n     * @param rawAmount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 rawAmount\\n    ) external returns (bool) {\\n        address spender = msg.sender;\\n        uint96 spenderAllowance = allowances[src][spender];\\n        uint96 amount =\\n            safe96(rawAmount, \\\"RBCN::approve: amount exceeds 96 bits\\\");\\n\\n        if (spender != src && spenderAllowance != uint96(-1)) {\\n            uint96 newAllowance =\\n                sub96(\\n                    spenderAllowance,\\n                    amount,\\n                    \\\"RBCN::transferFrom: transfer amount exceeds spender allowance\\\"\\n                );\\n            allowances[src][spender] = newAllowance;\\n\\n            emit Approval(src, spender, newAllowance);\\n        }\\n\\n        _transferTokens(src, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Delegate votes from `msg.sender` to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     */\\n    function delegate(address delegatee) public {\\n        return _delegate(msg.sender, delegatee);\\n    }\\n\\n    /**\\n     * @notice Delegates votes from signatory to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     * @param nonce The contract state required to match the signature\\n     * @param expiry The time at which to expire the signature\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function delegateBySig(\\n        address delegatee,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name)),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n        bytes32 structHash =\\n            keccak256(\\n                abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\\n            );\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"RBCN::delegateBySig: invalid signature\\\"\\n        );\\n        require(\\n            nonce == nonces[signatory]++,\\n            \\\"RBCN::delegateBySig: invalid nonce\\\"\\n        );\\n        require(now <= expiry, \\\"RBCN::delegateBySig: signature expired\\\");\\n        return _delegate(signatory, delegatee);\\n    }\\n\\n    /**\\n     * @notice Gets the current votes balance for `account`\\n     * @param account The address to get votes balance\\n     * @return The number of current votes for `account`\\n     */\\n    function getCurrentVotes(address account) external view returns (uint96) {\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        return\\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\\n    }\\n\\n    /**\\n     * @notice Determine the prior number of votes for an account as of a block number\\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\\n     * @param account The address of the account to check\\n     * @param blockNumber The block number to get the vote balance at\\n     * @return The number of votes the account had as of the given block\\n     */\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        require(\\n            blockNumber < block.number,\\n            \\\"RBCN::getPriorVotes: not yet determined\\\"\\n        );\\n\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        if (nCheckpoints == 0) {\\n            return 0;\\n        }\\n\\n        // First check most recent balance\\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\\n            return checkpoints[account][nCheckpoints - 1].votes;\\n        }\\n\\n        // Next check implicit zero balance\\n        if (checkpoints[account][0].fromBlock > blockNumber) {\\n            return 0;\\n        }\\n\\n        uint32 lower = 0;\\n        uint32 upper = nCheckpoints - 1;\\n        while (upper > lower) {\\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n            Checkpoint memory cp = checkpoints[account][center];\\n            if (cp.fromBlock == blockNumber) {\\n                return cp.votes;\\n            } else if (cp.fromBlock < blockNumber) {\\n                lower = center;\\n            } else {\\n                upper = center - 1;\\n            }\\n        }\\n        return checkpoints[account][lower].votes;\\n    }\\n\\n    function getDistStartTime() external view returns (uint256) {\\n        return distStartTime;\\n    }\\n\\n    function getDistEndTime() external view returns (uint256) {\\n        return distEndTime;\\n    }\\n\\n    function getDistRate() external pure returns (uint256) {\\n        return distRate;\\n    }\\n\\n    function _delegate(address delegator, address delegatee) internal {\\n        address currentDelegate = delegates[delegator];\\n        uint96 delegatorBalance = balances[delegator];\\n        delegates[delegator] = delegatee;\\n\\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\\n\\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\\n    }\\n\\n    function _transferTokens(\\n        address src,\\n        address dst,\\n        uint96 amount\\n    ) internal {\\n        require(\\n            src != address(0),\\n            \\\"RBCN::_transferTokens: cannot transfer from the zero address\\\"\\n        );\\n        require(\\n            dst != address(0),\\n            \\\"RBCN::_transferTokens: cannot transfer to the zero address\\\"\\n        );\\n\\n        balances[src] = sub96(\\n            balances[src],\\n            amount,\\n            \\\"RBCN::_transferTokens: transfer amount exceeds balance\\\"\\n        );\\n        balances[dst] = add96(\\n            balances[dst],\\n            amount,\\n            \\\"RBCN::_transferTokens: transfer amount overflows\\\"\\n        );\\n        emit Transfer(src, dst, amount);\\n\\n        _moveDelegates(delegates[src], delegates[dst], amount);\\n    }\\n\\n    function _moveDelegates(\\n        address srcRep,\\n        address dstRep,\\n        uint96 amount\\n    ) internal {\\n        if (srcRep != dstRep && amount > 0) {\\n            if (srcRep != address(0)) {\\n                uint32 srcRepNum = numCheckpoints[srcRep];\\n                uint96 srcRepOld =\\n                    srcRepNum > 0\\n                        ? checkpoints[srcRep][srcRepNum - 1].votes\\n                        : 0;\\n                uint96 srcRepNew =\\n                    sub96(\\n                        srcRepOld,\\n                        amount,\\n                        \\\"RBCN::_moveVotes: vote amount underflows\\\"\\n                    );\\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\\n            }\\n\\n            if (dstRep != address(0)) {\\n                uint32 dstRepNum = numCheckpoints[dstRep];\\n                uint96 dstRepOld =\\n                    dstRepNum > 0\\n                        ? checkpoints[dstRep][dstRepNum - 1].votes\\n                        : 0;\\n                uint96 dstRepNew =\\n                    add96(\\n                        dstRepOld,\\n                        amount,\\n                        \\\"RBCN::_moveVotes: vote amount overflows\\\"\\n                    );\\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\\n            }\\n        }\\n    }\\n\\n    function _writeCheckpoint(\\n        address delegatee,\\n        uint32 nCheckpoints,\\n        uint96 oldVotes,\\n        uint96 newVotes\\n    ) internal {\\n        uint32 blockNumber =\\n            safe32(\\n                block.number,\\n                \\\"RBCN::_writeCheckpoint: block number exceeds 32 bits\\\"\\n            );\\n\\n        if (\\n            nCheckpoints > 0 &&\\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\\n        ) {\\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\\n        } else {\\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\\n                blockNumber,\\n                newVotes\\n            );\\n            numCheckpoints[delegatee] = nCheckpoints + 1;\\n        }\\n\\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\\n    }\\n\\n    function safe32(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint32)\\n    {\\n        require(n < 2**32, errorMessage);\\n        return uint32(n);\\n    }\\n\\n    function safe96(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint96)\\n    {\\n        require(n < 2**96, errorMessage);\\n        return uint96(n);\\n    }\\n\\n    function add96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        uint96 c = a + b;\\n        require(c >= a, errorMessage);\\n        return c;\\n    }\\n\\n    function sub96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\",\"keccak256\":\"0x521c3b92ca2fd7dde75cec2da33579576c55a6c59c18ca155c791141abc380d4\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "contracts/RBCN.sol": {
        "RBCN": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "aqueduct",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "delegator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "fromDelegate",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "toDelegate",
                  "type": "address"
                }
              ],
              "name": "DelegateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "previousBalance",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newBalance",
                  "type": "uint256"
                }
              ],
              "name": "DelegateVotesChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "DELEGATION_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "DOMAIN_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rawAmount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "aqueductAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "name": "checkpoints",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "votes",
                  "type": "uint96"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "delegatee",
                  "type": "address"
                }
              ],
              "name": "delegate",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "delegatee",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "delegateBySig",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "delegates",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "distEndTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "distRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "distStartTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getCurrentVotes",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "",
                  "type": "uint96"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getDistEndTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getDistRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getDistStartTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getPriorVotes",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "",
                  "type": "uint96"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "numCheckpoints",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dst",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rawAmount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "src",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dst",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rawAmount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {
              "allowance(address,address)": {
                "params": {
                  "account": "The address of the account holding the funds",
                  "spender": "The address of the account spending the funds"
                },
                "return": "The number of tokens approved"
              },
              "approve(address,uint256)": {
                "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
                "params": {
                  "rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
                  "spender": "The address of the account which may transfer tokens"
                },
                "return": "Whether or not the approval succeeded"
              },
              "balanceOf(address)": {
                "params": {
                  "account": "The address of the account to get the balance of"
                },
                "return": "The number of tokens held"
              },
              "constructor": {
                "params": {
                  "admin": "The recipient of non-community tokens",
                  "aqueduct": "The holder of all community tokens"
                }
              },
              "delegate(address)": {
                "params": {
                  "delegatee": "The address to delegate votes to"
                }
              },
              "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
                "params": {
                  "delegatee": "The address to delegate votes to",
                  "expiry": "The time at which to expire the signature",
                  "nonce": "The contract state required to match the signature",
                  "r": "Half of the ECDSA signature pair",
                  "s": "Half of the ECDSA signature pair",
                  "v": "The recovery byte of the signature"
                }
              },
              "getCurrentVotes(address)": {
                "params": {
                  "account": "The address to get votes balance"
                },
                "return": "The number of current votes for `account`"
              },
              "getPriorVotes(address,uint256)": {
                "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
                "params": {
                  "account": "The address of the account to check",
                  "blockNumber": "The block number to get the vote balance at"
                },
                "return": "The number of votes the account had as of the given block"
              },
              "transfer(address,uint256)": {
                "params": {
                  "dst": "The address of the destination account",
                  "rawAmount": "The number of tokens to transfer"
                },
                "return": "Whether or not the transfer succeeded"
              },
              "transferFrom(address,address,uint256)": {
                "params": {
                  "dst": "The address of the destination account",
                  "rawAmount": "The number of tokens to transfer",
                  "src": "The address of the source account"
                },
                "return": "Whether or not the transfer succeeded"
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60806040523480156200001c57600080620000196200020d565b50505b50604051620025c4380380620025c4833981810160405260408110156200004d576000806200004a6200020d565b50505b81019080805192919060200180516001600160a01b038516600090815260046020529093506b01a5dcb365fc4166be00000092506040915020600181620000936200027a565b816001600160601b0302191690836001600160601b0316021790620000b7620002dc565b5050506001600160a01b0382166000600080516020620025a48339815191526b033b2e3c9fd0803ce800000060405190815260200160405180910390a3816002600181620001046200027a565b816001600160a01b0302191690836001600160a01b031602179062000128620002dc565b5050506001600160a01b038116600090815260046020526b0195518939d43ed62a00000090604090206001816200015e6200027a565b816001600160601b0302191690836001600160601b031602179062000182620002dc565b5050506001600160a01b0381166000600080516020620025a48339815191526b0195518939d43ed62a0000006040516001600160601b03909116815260200160405180910390a35a620001d46200032b565b806000620001e1620002dc565b5050505a620001ef6200032b565b630784ce000180600162000202620002dc565b505050505062000372565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015620002475780860151828201604001526020016200022a565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015620002d757600082820152602001620002be565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020620002be565b63bdbf8c36598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620002be565b61222280620003826000396000f3fe608060405234801561001957600080610016611bda565b50505b50600436106101475760003560e01c806306fdde0314610155578063095ea7b3146101d457806318160ddd1461021d57806320606b701461023757806323b872dd1461023f5780632fcd7e431461027e578063313ce5671461028657806344d5437d146102a4578063587cde1e146102ac5780635c19a95c146102f75780636f9dd595146103285780636fcfff451461033057806370a0823114610378578063782d6fe1146103a75780637ecebe00146103f857806395d89b4114610427578063a9059cbb1461042f578063b4b5ea5714610464578063b8df67c814610493578063c0198ac41461049b578063c3cda520146104a3578063cb4774f3146104f3578063dd62ed3e146104fb578063decb7ee914610532578063e7a324dc1461053a578063f1127ed814610542575b600080610152611bda565b50505b61015d6105a5565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610199578082015183820152602001610181565b50505050905090810190601f1680156101c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610209600480360360408110156101f3576000806101f0611bda565b50505b506001600160a01b0381351690602001356105c6565b604051901515815260200160405180910390f35b6102256106c9565b60405190815260200160405180910390f35b6102256106d8565b6102096004803603606081101561025e5760008061025b611bda565b50505b506001600160a01b038135811691602081013590911690604001356106f3565b610225610886565b61028e610893565b60405160ff909116815260200160405180910390f35b610225610898565b6102db600480360360208110156102cb576000806102c8611bda565b50505b50356001600160a01b03166108a4565b6040516001600160a01b03909116815260200160405180910390f35b6103266004803603602081101561031657600080610313611bda565b50505b50356001600160a01b03166108d1565b005b6102256108e6565b61035f6004803603602081101561034f5760008061034c611bda565b50505b50356001600160a01b03166108f0565b60405163ffffffff909116815260200160405180910390f35b6102256004803603602081101561039757600080610394611bda565b50505b50356001600160a01b031661091a565b6103dc600480360360408110156103c6576000806103c3611bda565b50505b506001600160a01b038135169060200135610955565b6040516001600160601b03909116815260200160405180910390f35b6102256004803603602081101561041757600080610414611bda565b50505b50356001600160a01b0316610c32565b61015d610c4a565b6102096004803603604081101561044e5760008061044b611bda565b50505b506001600160a01b038135169060200135610c68565b6103dc6004803603602081101561048357600080610480611bda565b50505b50356001600160a01b0316610caa565b6102db610d47565b610225610d53565b610326600480360360c08110156104c2576000806104bf611bda565b50505b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610d64565b61022561109f565b6102256004803603604081101561051a57600080610517611bda565b50505b506001600160a01b03813581169160200135166110aa565b6102256110ff565b61022561110b565b61057d600480360360408110156105615760008061055e611bda565b50505b5080356001600160a01b0316906020013563ffffffff16611126565b60405163ffffffff90921682526001600160601b031660208201526040908101905180910390f35b604051604080820190526007815266293ab134b1b7b760c91b602082015281565b6000806000198314156105dc57506000196105ff565b6105fc836040516060810160405260258082526120f1602083013961117f565b90505b80600360005a61060d611c45565b6001600160a01b03166001600160a01b031681526020019081526020016000206001600160a01b038616600090815260209190915260409020600181610651611c9a565b816001600160601b0302191690836001600160601b0316021790610673611ce6565b505050836001600160a01b03165a610689611c45565b6001600160a01b03166000805160206120d1833981519152836040516001600160601b03909116815260200160405180910390a360019150505b92915050565b676765c793fa10079d601b1b81565b60405180604361204282396043019050604051809103902081565b6000805a6106ff611c45565b6001600160a01b03861660009081526003602052909150604081206001600160a01b03831660009081526020919091526040902060009061073e611c9a565b906101000a90046001600160601b031690506000610772856040516060810160405260258082526120f1602083013961117f565b9050866001600160a01b0316836001600160a01b03161415801561079f57506001600160601b0382811614155b1561086e5760006107c7838360405160608101604052603d808252611f5b6020830139611222565b6001600160a01b038916600090815260036020529091508190604090206001600160a01b038616600090815260209190915260409020600181610808611c9a565b816001600160601b0302191690836001600160601b031602179061082a611ce6565b505050836001600160a01b0316886001600160a01b03166000805160206120d1833981519152836040516001600160601b03909116815260200160405180910390a3505b6108798787836112d5565b5060019695505050505050565b6001610890611c9a565b81565b601281565b673820a0bd0399b82290565b6005602052806000526040600020600091506108be611c9a565b906101000a90046001600160a01b031681565b6108e35a6108dd611c45565b8261156c565b50565b6000610890611c9a565b60076020528060005260406000206000915061090a611c9a565b906101000a900463ffffffff1681565b6001600160a01b038116600090815260046020526040812060009061093d611c9a565b6001600160601b036101009290920a90041692915050565b60005a610960611d34565b82106109a65760405162461bcd60e51b8152600401808060200182810382526027815260200180611ff460279139604001915050604051809103906109a3611bda565b50505b6001600160a01b03831660009081526007602052604081206000906109c9611c9a565b63ffffffff6101009290920a9004169050806109e95760009150506106c3565b6001600160a01b0384166000908152600660205283906040902063ffffffff600019840116600090815260209190915260409020600090610a28611c9a565b906101000a900463ffffffff1663ffffffff1611610a95576001600160a01b038416600090815260066020526040902063ffffffff600019830116600090815260209190915260409020600490610a7d611c9a565b906101000a90046001600160601b03169150506106c3565b6001600160a01b03841660009081526006602052839060409020600080805260209190915260409020600090610ac9611c9a565b906101000a900463ffffffff1663ffffffff161115610aec5760009150506106c3565b600060001982015b8163ffffffff168163ffffffff161115610bde57600282820363ffffffff16048103610b1e611d7a565b6001600160a01b038816600090815260066020526040902063ffffffff8316600090815260209190915260409020604051604080820190529081600082610b63611c9a565b63ffffffff6101009290920a9004168152602001600482610b82611c9a565b6001600160601b036101009290920a900416905250905086815163ffffffff161415610bb9578060200151955050505050506106c3565b86815163ffffffff161015610bd057819350610bd7565b6001820392505b5050610af4565b6001600160a01b038616600090815260066020526040902063ffffffff8316600090815260209190915260409020600490610c17611c9a565b906101000a90046001600160601b0316935050505092915050565b60086020528060005260406000209050610890611c9a565b604051604080820190526004815263292121a760e11b602082015281565b600080610c8b83604051606081016040526026808252611fce602083013961117f565b9050610ca05a610c99611c45565b85836112d5565b5060019392505050565b6001600160a01b038116600090815260076020528060408120600090610cce611c9a565b906101000a900463ffffffff16905060008163ffffffff1611610cf2576000610d40565b6001600160a01b038316600090815260066020526040902063ffffffff600019830116600090815260209190915260409020600490610d2f611c9a565b906101000a90046001600160601b03165b9392505050565b600060026108be611c9a565b60006001610d5f611c9a565b905090565b6000604051806043612042823960430190506040518091039020604051604080820190526007815266293ab134b1b7b760c91b602082015280519060200120610dab611683565b5a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b6040811015610e0157600082820152602001610dea565b505050604051602081019490945260408085019390935260608401919091526001600160a01b0316608083015260a09091019051602081830303815290604052805190602001209050600060405180603a6121528239603a019050604051809103902088888860405160200180858152602001846001600160a01b03166001600160a01b031681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405161190160f01b602082015260228101929092526042820152606201604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855a610f45611d91565b5050505050158015610f64573d6000803e3d6000610f61611bda565b50505b5050506020604051035190506001600160a01b038116610fbe5760405162461bcd60e51b81526004018080602001828103825260268152602001806120856026913960400191505060405180910390610fbb611bda565b50505b6001600160a01b0381166000908152600860205260409020600081610fe1611c9a565b91600183019150610ff0611ce6565b505089146110385760405162461bcd60e51b8152600401808060200182810382526022815260200180611f396022913960400191505060405180910390611035611bda565b50505b875a611042611e7c565b11156110885760405162461bcd60e51b81526004018080602001828103825260268152602001806120ab6026913960400191505060405180910390611085611bda565b50505b611092818b61156c565b505050505b505050505050565b600080610d5f611c9a565b6001600160a01b03821660009081526003602052604081206001600160a01b0383166000908152602091909152604090206000906110e6611c9a565b6001600160601b036101009290920a9004169392505050565b673820a0bd0399b82281565b60405180603a6121528239603a019050604051809103902081565b60066020528160005260406000206020528060005260406000209150600090508161114f611c9a565b63ffffffff6101009290920a9004169060048161116a611c9a565b906101000a90046001600160601b0316905082565b600081600160601b841061121a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111d65780820151838201526020016111be565b50505050905090810190601f1680156112035780820380516001836020036101000a031916815260200191505b509250505060405180910390611217611bda565b50505b509192915050565b6000836001600160601b0316836001600160601b0316111582906112cd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611289578082015183820152602001611271565b50505050905090810190601f1680156112b65780820380516001836020036101000a031916815260200191505b5092505050604051809103906112ca611bda565b50505b505050900390565b6001600160a01b0383166113235760405162461bcd60e51b815260040180806020018281038252603c815260200180612116603c913960400191505060405180910390611320611bda565b50505b6001600160a01b0382166113715760405162461bcd60e51b815260040180806020018281038252603a8152602001806121e8603a91396040019150506040518091039061136e611bda565b50505b6001600160a01b038316600090815260046020526113c59060409020600090611398611c9a565b906101000a90046001600160601b031682604051606081016040526036808252611f986020830139611222565b6001600160a01b03841660009081526004602052604090206001816113e8611c9a565b816001600160601b0302191690836001600160601b031602179061140a611ce6565b5050506001600160a01b038216600090815260046020526114619060409020600090611434611c9a565b906101000a90046001600160601b031682604051606081016040526030808252611f096020830139611695565b6001600160a01b0383166000908152600460205260409020600181611484611c9a565b816001600160601b0302191690836001600160601b03160217906114a6611ce6565b505050816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516001600160601b03909116815260200160405180910390a36001600160a01b038316600090815260056020526115679060409020600090611521611c9a565b6001600160a01b03858116600090815260056020526101009390930a909104169060409020600090611551611c9a565b906101000a90046001600160a01b031683611745565b505050565b6001600160a01b038216600090815260056020526040812060009061158f611c9a565b6001600160a01b03858116600090815260046020526101009390930a909104169150604081206000906115c0611c9a565b906101000a90046001600160601b031690508260056000866001600160a01b03166001600160a01b03168152602001908152602001600020600181611603611c9a565b816001600160a01b0302191690836001600160a01b0316021790611625611ce6565b505050826001600160a01b0316826001600160a01b0316856001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461167d828483611745565b50505050565b6000805a61168f611ec2565b91505090565b6000838301826001600160601b03808716908316101561173c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116f85780820151838201526020016116e0565b50505050905090810190601f1680156117255780820380516001836020036101000a031916815260200191505b509250505060405180910390611739611bda565b50505b50949350505050565b816001600160a01b0316836001600160a01b03161415801561177057506000816001600160601b0316115b15611567576001600160a01b03831615611851576001600160a01b03831660009081526007602052604081206000906117a7611c9a565b906101000a900463ffffffff1690506000808263ffffffff16116117cc57600061181a565b6001600160a01b038516600090815260066020526040902063ffffffff600019840116600090815260209190915260409020600490611809611c9a565b906101000a90046001600160601b03165b9050600061183f828560405160608101604052602880825261218c6020830139611222565b905061184d86848484611925565b5050505b6001600160a01b03821615611567576001600160a01b0382166000908152600760205260408120600090611883611c9a565b906101000a900463ffffffff1690506000808263ffffffff16116118a85760006118f6565b6001600160a01b038416600090815260066020526040902063ffffffff6000198401166000908152602091909152604090206004906118e5611c9a565b906101000a90046001600160601b03165b9050600061191b828560405160608101604052602780825261201b6020830139611695565b9050611097858484845b600061194f5a611933611d34565b6040516060810160405260348082526121b46020830139611b85565b905060008463ffffffff161180156119bc57506001600160a01b0385166000908152600660205263ffffffff8216906040902063ffffffff6000198701166000908152602091909152604090206000906119a7611c9a565b906101000a900463ffffffff1663ffffffff16145b15611a2d576001600160a01b0385166000908152600660205282906040902063ffffffff600019870116600090815260209190915260409020600160201b81611a03611c9a565b816001600160601b0302191690836001600160601b0316021790611a25611ce6565b505050611b2e565b6040516040808201815263ffffffff831682526001600160601b0384166020808401919091526001600160a01b038816600090815260069091522063ffffffff8616600090815260209190915260409020815181600181611a8c611c9a565b8163ffffffff021916908363ffffffff16021790611aa8611ce6565b505050602082015181600160201b81611abf611c9a565b816001600160601b0302191690836001600160601b0316021790611ae1611ce6565b5050506001600160a01b038716600090815260076020526001870192506040915020600181611b0e611c9a565b8163ffffffff021916908363ffffffff16021790611b2a611ce6565b5050505b846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72484846040516001600160601b039283168152911660208201526040908101905180910390a25050505050565b600081600160201b841061121a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051602090910190808383600083156111d65780820151838201526020016111be565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015611c12578086015182820160400152602001611bf7565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b604081101561156757600082820152602001611c83565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020611c83565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020611c83565b635a98c361598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020611c83565b604051604080820190526000808252602082015290565b638540661f598160e01b8152611dc2565b80808311156106c3575090919050565b80808310156106c3575090919050565b836004820152846024820152606060448201528660648201526084810160005b88811015611dfa578088015182820152602001611de2565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af15059611e4f8d3d611db2565b8c01611e5b8187611da2565b5b82811015611e705760008152602001611e5c565b50929c50505050505050565b63bdbf8c36598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020611c83565b6390580256598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020611c8356fe5242434e3a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77735242434e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e63655242434e3a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63655242434e3a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63655242434e3a3a7472616e736665723a20616d6f756e74206578636565647320393620626974735242434e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e65645242434e3a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374295242434e3a3a64656c656761746542795369673a20696e76616c6964207369676e61747572655242434e3a3a64656c656761746542795369673a207369676e617475726520657870697265648c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255242434e3a3a617070726f76653a20616d6f756e74206578636565647320393620626974735242434e3a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e7432353620657870697279295242434e3a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77735242434e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974735242434e3a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH1 0x0 DUP1 PUSH3 0x19 PUSH3 0x20D JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25C4 CODESIZE SUB DUP1 PUSH3 0x25C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x4D JUMPI PUSH1 0x0 DUP1 PUSH3 0x4A PUSH3 0x20D JUMP JUMPDEST POP POP JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE SWAP1 SWAP4 POP PUSH12 0x1A5DCB365FC4166BE000000 SWAP3 POP PUSH1 0x40 SWAP2 POP KECCAK256 PUSH1 0x1 DUP2 PUSH3 0x93 PUSH3 0x27A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH3 0xB7 PUSH3 0x2DC JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x25A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 PUSH1 0x2 PUSH1 0x1 DUP2 PUSH3 0x104 PUSH3 0x27A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH3 0x128 PUSH3 0x2DC JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH12 0x195518939D43ED62A000000 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH3 0x15E PUSH3 0x27A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH3 0x182 PUSH3 0x2DC JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x25A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH12 0x195518939D43ED62A000000 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 GAS PUSH3 0x1D4 PUSH3 0x32B JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x1E1 PUSH3 0x2DC JUMP JUMPDEST POP POP POP GAS PUSH3 0x1EF PUSH3 0x32B JUMP JUMPDEST PUSH4 0x784CE00 ADD DUP1 PUSH1 0x1 PUSH3 0x202 PUSH3 0x2DC JUMP JUMPDEST POP POP POP POP POP PUSH3 0x372 JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH3 0x247 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x22A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x2D7 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH3 0x2BE JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH3 0x2BE JUMP JUMPDEST PUSH2 0x2222 DUP1 PUSH3 0x382 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x147 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2FCD7E43 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x44D5437D EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x6F9DD595 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xB8DF67C8 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0xC0198AC4 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xCB4774F3 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xDECB7EE9 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x542 JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x152 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x15D PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x199 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1F0 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 PUSH2 0x25B PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x886 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 PUSH2 0x2C8 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 PUSH2 0x34C PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 PUSH2 0x394 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91A JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3C3 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 PUSH2 0x414 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x15D PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 PUSH2 0x44B PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC68 JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 PUSH2 0x480 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x225 PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4BF PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 PUSH2 0x517 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x10AA JUMP JUMPDEST PUSH2 0x225 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x225 PUSH2 0x110B JUMP JUMPDEST PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 PUSH2 0x55E PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x293AB134B1B7B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x5DC JUMPI POP PUSH1 0x0 NOT PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x5FC DUP4 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x25 DUP1 DUP3 MSTORE PUSH2 0x20F1 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x117F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 GAS PUSH2 0x60D PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x651 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x673 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x689 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2042 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH2 0x6FF PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE SWAP1 SWAP2 POP PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x73E PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH2 0x772 DUP6 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x25 DUP1 DUP3 MSTORE PUSH2 0x20F1 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x117F JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x86E JUMPI PUSH1 0x0 PUSH2 0x7C7 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x3D DUP1 DUP3 MSTORE PUSH2 0x1F5B PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x808 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x82A PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x879 DUP8 DUP8 DUP4 PUSH2 0x12D5 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x890 PUSH2 0x1C9A JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH8 0x3820A0BD0399B822 SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP PUSH2 0x8BE PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x8E3 GAS PUSH2 0x8DD PUSH2 0x1C45 JUMP JUMPDEST DUP3 PUSH2 0x156C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP PUSH2 0x90A PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x93D PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 GAS PUSH2 0x960 PUSH2 0x1D34 JUMP JUMPDEST DUP3 LT PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FF4 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x9A3 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x9C9 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 POP DUP1 PUSH2 0x9E9 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP4 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP5 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xA28 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0xA95 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP4 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0xA7D PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP POP PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP4 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xAC9 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xBDE JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xB1E PUSH2 0x1D7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 PUSH2 0xB63 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 PUSH2 0xB82 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 MSTORE POP SWAP1 POP DUP7 DUP2 MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xBB9 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x6C3 JUMP JUMPDEST DUP7 DUP2 MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xBD0 JUMPI DUP2 SWAP4 POP PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0xC17 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x890 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x292121A7 PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC8B DUP4 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x26 DUP1 DUP3 MSTORE PUSH2 0x1FCE PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x117F JUMP JUMPDEST SWAP1 POP PUSH2 0xCA0 GAS PUSH2 0xC99 PUSH2 0x1C45 JUMP JUMPDEST DUP6 DUP4 PUSH2 0x12D5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xCCE PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xCF2 JUMPI PUSH1 0x0 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP4 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0xD2F PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x8BE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xD5F PUSH2 0x1C9A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2042 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x293AB134B1B7B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDAB PUSH2 0x1683 JUMP JUMPDEST GAS PUSH4 0x996D79A5 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP3 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDEA JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP1 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x2152 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS PUSH2 0xF45 PUSH2 0x1D91 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xF61 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2085 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xFBB PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP2 PUSH2 0xFE1 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP4 ADD SWAP2 POP PUSH2 0xFF0 PUSH2 0x1CE6 JUMP JUMPDEST POP POP DUP10 EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F39 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1035 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST DUP8 GAS PUSH2 0x1042 PUSH2 0x1E7C JUMP JUMPDEST GT ISZERO PUSH2 0x1088 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20AB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1085 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1092 DUP2 DUP12 PUSH2 0x156C JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5F PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x10E6 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH8 0x3820A0BD0399B822 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x2152 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 POP DUP2 PUSH2 0x114F PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 PUSH1 0x4 DUP2 PUSH2 0x116A PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11D6 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1203 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1217 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1289 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1271 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x12CA PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2116 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1320 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21E8 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x136E PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x13C5 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1398 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x36 DUP1 DUP3 MSTORE PUSH2 0x1F98 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x13E8 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x140A PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1461 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1434 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x30 DUP1 DUP3 MSTORE PUSH2 0x1F09 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x1484 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x14A6 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1567 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1521 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP1 SWAP2 DIV AND SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1551 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1745 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x158F PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP1 SWAP2 DIV AND SWAP2 POP PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x15C0 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x1603 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x1625 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x167D DUP3 DUP5 DUP4 PUSH2 0x1745 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH2 0x168F PUSH2 0x1EC2 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP8 AND SWAP1 DUP4 AND LT ISZERO PUSH2 0x173C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1725 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1739 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1770 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1851 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x17A7 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x17CC JUMPI PUSH1 0x0 PUSH2 0x181A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP5 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0x1809 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x183F DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x28 DUP1 DUP3 MSTORE PUSH2 0x218C PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1222 JUMP JUMPDEST SWAP1 POP PUSH2 0x184D DUP7 DUP5 DUP5 DUP5 PUSH2 0x1925 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1883 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x18A8 JUMPI PUSH1 0x0 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP5 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0x18E5 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x191B DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x27 DUP1 DUP3 MSTORE PUSH2 0x201B PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1695 JUMP JUMPDEST SWAP1 POP PUSH2 0x1097 DUP6 DUP5 DUP5 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x194F GAS PUSH2 0x1933 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x34 DUP1 DUP3 MSTORE PUSH2 0x21B4 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1B85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x19BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH4 0xFFFFFFFF DUP3 AND SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x19A7 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP3 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL DUP2 PUSH2 0x1A03 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x1A25 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 PUSH1 0x1 DUP2 PUSH2 0x1A8C PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 PUSH2 0x1AA8 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP2 PUSH2 0x1ABF PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x1AE1 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 DUP8 ADD SWAP3 POP PUSH1 0x40 SWAP2 POP KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x1B0E PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 PUSH2 0x1B2A PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x11D6 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11BE JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1C12 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF7 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x5A98C361 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x1DC2 JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0x6C3 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0x6C3 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x1DFA JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DE2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x1E4F DUP14 RETURNDATASIZE PUSH2 0x1DB2 JUMP JUMPDEST DUP13 ADD PUSH2 0x1E5B DUP2 DUP8 PUSH2 0x1DA2 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5C JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x90580256 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP INVALID MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F77735242434E GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E63655242434E3A3A5F7472616E PUSH20 0x666572546F6B656E733A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63655242434E GASPRICE GASPRICE PUSH21 0x72616E736665723A20616D6F756E74206578636565 PUSH5 0x7320393620 PUSH3 0x697473 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206F766572666C6F7773454950373132446F6D61 PUSH10 0x6E28737472696E67206E PUSH2 0x6D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374295242434E3A3A PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964207369676E61 PUSH21 0x7572655242434E3A3A64656C656761746542795369 PUSH8 0x3A207369676E6174 PUSH22 0x726520657870697265648C5BE1E5EBEC7D5BD14F7142 PUSH30 0x1E84F3DD0314C0F7B2291E5B200AC8C7C3B9255242434E3A3A617070726F PUSH23 0x653A20616D6F756E742065786365656473203936206269 PUSH21 0x735242434E3A3A5F7472616E73666572546F6B656E PUSH20 0x3A2063616E6E6F74207472616E73666572206672 PUSH16 0x6D20746865207A65726F206164647265 PUSH20 0x7344656C65676174696F6E286164647265737320 PUSH5 0x656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420756E646572666C6F77735242434E3A3A5F7772 PUSH10 0x7465436865636B706F69 PUSH15 0x743A20626C6F636B206E756D626572 KECCAK256 PUSH6 0x786365656473 KECCAK256 CALLER ORIGIN KECCAK256 PUSH3 0x697473 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A2063616E6E6F74 KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF ",
              "sourceMap": "132:15867:1:-;;;3702:536;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;3702:536:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;3702:536:1;;;;;;;;;;;;;-1:-1:-1;;;;;3792:18:1;;;;;;:8;3702:536;3792:18;3702:536;;-1:-1:-1;3820:12:1;;-1:-1:-1;3792:18:1;;-1:-1:-1;3792:18:1;:41;;;;:::i;:::-;;-1:-1:-1;;;;;3792:41:1;;;;;-1:-1:-1;;;;;3792:41:1;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;3848:54:1;;3865:1;-1:-1:-1;;;;;;;;;;;3887:13:1;3848:54;;;;;;;;;;;;;;3930:8;3912:15;:26;:15;:26;;:::i;:::-;;-1:-1:-1;;;;;3912:26:1;;;;;-1:-1:-1;;;;;3912:26:1;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;3997:15:1;;;;;;:8;:15;;4022:12;;3997:15;;;:38;;;;:::i;:::-;;-1:-1:-1;;;;;3997:38:1;;;;;-1:-1:-1;;;;;3997:38:1;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;4050:49:1;;4067:1;-1:-1:-1;;;;;;;;;;;4085:12:1;4050:49;;-1:-1:-1;;;;;4050:49:1;;;;;;;;;;;;;;4184:3;;;:::i;:::-;4168:19;:13;:19;;:::i;:::-;;;;4211:3;;;:::i;:::-;4218:12;4211:20;;4197:11;:34;;:::i;:::-;;;;3702:536;;132:15867;;;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;242:1;231:9;227:17;295:4;284:9;277:23;362:6;355:4;344:9;340:20;333:36;424:1;407:143;436:6;431:3;428:15;407:143;;;536:3;528:6;524:16;518:23;486:30;;;505:4;486:30;479:63;462:4;453:14;407:143;;;411:16;720:4;709:9;700:6;694:4;690:17;679:9;674:51;;;;;;;;;;;;;;;;;;;;;;;;;;0:821;;;132:15867:1:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;259:22;;521:1;504:100;533:4;528:3;525:13;504:100;;;598:1;577:19;;;570:30;557:4;548:14;504:100;;;508:16;0:607;;132:15867:1:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;219:2;212:4;201:9;197:20;190:32;284:1;273:9;269:2;258:9;253:33;;;;;;;;;;;;;;;;;;;;;;;;;;530:1;579:30;;566:4;513:100;;132:15867:1;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;132:15867:1;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001957600080610016611bda565b50505b50600436106101475760003560e01c806306fdde0314610155578063095ea7b3146101d457806318160ddd1461021d57806320606b701461023757806323b872dd1461023f5780632fcd7e431461027e578063313ce5671461028657806344d5437d146102a4578063587cde1e146102ac5780635c19a95c146102f75780636f9dd595146103285780636fcfff451461033057806370a0823114610378578063782d6fe1146103a75780637ecebe00146103f857806395d89b4114610427578063a9059cbb1461042f578063b4b5ea5714610464578063b8df67c814610493578063c0198ac41461049b578063c3cda520146104a3578063cb4774f3146104f3578063dd62ed3e146104fb578063decb7ee914610532578063e7a324dc1461053a578063f1127ed814610542575b600080610152611bda565b50505b61015d6105a5565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610199578082015183820152602001610181565b50505050905090810190601f1680156101c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610209600480360360408110156101f3576000806101f0611bda565b50505b506001600160a01b0381351690602001356105c6565b604051901515815260200160405180910390f35b6102256106c9565b60405190815260200160405180910390f35b6102256106d8565b6102096004803603606081101561025e5760008061025b611bda565b50505b506001600160a01b038135811691602081013590911690604001356106f3565b610225610886565b61028e610893565b60405160ff909116815260200160405180910390f35b610225610898565b6102db600480360360208110156102cb576000806102c8611bda565b50505b50356001600160a01b03166108a4565b6040516001600160a01b03909116815260200160405180910390f35b6103266004803603602081101561031657600080610313611bda565b50505b50356001600160a01b03166108d1565b005b6102256108e6565b61035f6004803603602081101561034f5760008061034c611bda565b50505b50356001600160a01b03166108f0565b60405163ffffffff909116815260200160405180910390f35b6102256004803603602081101561039757600080610394611bda565b50505b50356001600160a01b031661091a565b6103dc600480360360408110156103c6576000806103c3611bda565b50505b506001600160a01b038135169060200135610955565b6040516001600160601b03909116815260200160405180910390f35b6102256004803603602081101561041757600080610414611bda565b50505b50356001600160a01b0316610c32565b61015d610c4a565b6102096004803603604081101561044e5760008061044b611bda565b50505b506001600160a01b038135169060200135610c68565b6103dc6004803603602081101561048357600080610480611bda565b50505b50356001600160a01b0316610caa565b6102db610d47565b610225610d53565b610326600480360360c08110156104c2576000806104bf611bda565b50505b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610d64565b61022561109f565b6102256004803603604081101561051a57600080610517611bda565b50505b506001600160a01b03813581169160200135166110aa565b6102256110ff565b61022561110b565b61057d600480360360408110156105615760008061055e611bda565b50505b5080356001600160a01b0316906020013563ffffffff16611126565b60405163ffffffff90921682526001600160601b031660208201526040908101905180910390f35b604051604080820190526007815266293ab134b1b7b760c91b602082015281565b6000806000198314156105dc57506000196105ff565b6105fc836040516060810160405260258082526120f1602083013961117f565b90505b80600360005a61060d611c45565b6001600160a01b03166001600160a01b031681526020019081526020016000206001600160a01b038616600090815260209190915260409020600181610651611c9a565b816001600160601b0302191690836001600160601b0316021790610673611ce6565b505050836001600160a01b03165a610689611c45565b6001600160a01b03166000805160206120d1833981519152836040516001600160601b03909116815260200160405180910390a360019150505b92915050565b676765c793fa10079d601b1b81565b60405180604361204282396043019050604051809103902081565b6000805a6106ff611c45565b6001600160a01b03861660009081526003602052909150604081206001600160a01b03831660009081526020919091526040902060009061073e611c9a565b906101000a90046001600160601b031690506000610772856040516060810160405260258082526120f1602083013961117f565b9050866001600160a01b0316836001600160a01b03161415801561079f57506001600160601b0382811614155b1561086e5760006107c7838360405160608101604052603d808252611f5b6020830139611222565b6001600160a01b038916600090815260036020529091508190604090206001600160a01b038616600090815260209190915260409020600181610808611c9a565b816001600160601b0302191690836001600160601b031602179061082a611ce6565b505050836001600160a01b0316886001600160a01b03166000805160206120d1833981519152836040516001600160601b03909116815260200160405180910390a3505b6108798787836112d5565b5060019695505050505050565b6001610890611c9a565b81565b601281565b673820a0bd0399b82290565b6005602052806000526040600020600091506108be611c9a565b906101000a90046001600160a01b031681565b6108e35a6108dd611c45565b8261156c565b50565b6000610890611c9a565b60076020528060005260406000206000915061090a611c9a565b906101000a900463ffffffff1681565b6001600160a01b038116600090815260046020526040812060009061093d611c9a565b6001600160601b036101009290920a90041692915050565b60005a610960611d34565b82106109a65760405162461bcd60e51b8152600401808060200182810382526027815260200180611ff460279139604001915050604051809103906109a3611bda565b50505b6001600160a01b03831660009081526007602052604081206000906109c9611c9a565b63ffffffff6101009290920a9004169050806109e95760009150506106c3565b6001600160a01b0384166000908152600660205283906040902063ffffffff600019840116600090815260209190915260409020600090610a28611c9a565b906101000a900463ffffffff1663ffffffff1611610a95576001600160a01b038416600090815260066020526040902063ffffffff600019830116600090815260209190915260409020600490610a7d611c9a565b906101000a90046001600160601b03169150506106c3565b6001600160a01b03841660009081526006602052839060409020600080805260209190915260409020600090610ac9611c9a565b906101000a900463ffffffff1663ffffffff161115610aec5760009150506106c3565b600060001982015b8163ffffffff168163ffffffff161115610bde57600282820363ffffffff16048103610b1e611d7a565b6001600160a01b038816600090815260066020526040902063ffffffff8316600090815260209190915260409020604051604080820190529081600082610b63611c9a565b63ffffffff6101009290920a9004168152602001600482610b82611c9a565b6001600160601b036101009290920a900416905250905086815163ffffffff161415610bb9578060200151955050505050506106c3565b86815163ffffffff161015610bd057819350610bd7565b6001820392505b5050610af4565b6001600160a01b038616600090815260066020526040902063ffffffff8316600090815260209190915260409020600490610c17611c9a565b906101000a90046001600160601b0316935050505092915050565b60086020528060005260406000209050610890611c9a565b604051604080820190526004815263292121a760e11b602082015281565b600080610c8b83604051606081016040526026808252611fce602083013961117f565b9050610ca05a610c99611c45565b85836112d5565b5060019392505050565b6001600160a01b038116600090815260076020528060408120600090610cce611c9a565b906101000a900463ffffffff16905060008163ffffffff1611610cf2576000610d40565b6001600160a01b038316600090815260066020526040902063ffffffff600019830116600090815260209190915260409020600490610d2f611c9a565b906101000a90046001600160601b03165b9392505050565b600060026108be611c9a565b60006001610d5f611c9a565b905090565b6000604051806043612042823960430190506040518091039020604051604080820190526007815266293ab134b1b7b760c91b602082015280519060200120610dab611683565b5a63996d79a5598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c528051925060005b6040811015610e0157600082820152602001610dea565b505050604051602081019490945260408085019390935260608401919091526001600160a01b0316608083015260a09091019051602081830303815290604052805190602001209050600060405180603a6121528239603a019050604051809103902088888860405160200180858152602001846001600160a01b03166001600160a01b031681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405161190160f01b602082015260228101929092526042820152606201604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855a610f45611d91565b5050505050158015610f64573d6000803e3d6000610f61611bda565b50505b5050506020604051035190506001600160a01b038116610fbe5760405162461bcd60e51b81526004018080602001828103825260268152602001806120856026913960400191505060405180910390610fbb611bda565b50505b6001600160a01b0381166000908152600860205260409020600081610fe1611c9a565b91600183019150610ff0611ce6565b505089146110385760405162461bcd60e51b8152600401808060200182810382526022815260200180611f396022913960400191505060405180910390611035611bda565b50505b875a611042611e7c565b11156110885760405162461bcd60e51b81526004018080602001828103825260268152602001806120ab6026913960400191505060405180910390611085611bda565b50505b611092818b61156c565b505050505b505050505050565b600080610d5f611c9a565b6001600160a01b03821660009081526003602052604081206001600160a01b0383166000908152602091909152604090206000906110e6611c9a565b6001600160601b036101009290920a9004169392505050565b673820a0bd0399b82281565b60405180603a6121528239603a019050604051809103902081565b60066020528160005260406000206020528060005260406000209150600090508161114f611c9a565b63ffffffff6101009290920a9004169060048161116a611c9a565b906101000a90046001600160601b0316905082565b600081600160601b841061121a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111d65780820151838201526020016111be565b50505050905090810190601f1680156112035780820380516001836020036101000a031916815260200191505b509250505060405180910390611217611bda565b50505b509192915050565b6000836001600160601b0316836001600160601b0316111582906112cd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611289578082015183820152602001611271565b50505050905090810190601f1680156112b65780820380516001836020036101000a031916815260200191505b5092505050604051809103906112ca611bda565b50505b505050900390565b6001600160a01b0383166113235760405162461bcd60e51b815260040180806020018281038252603c815260200180612116603c913960400191505060405180910390611320611bda565b50505b6001600160a01b0382166113715760405162461bcd60e51b815260040180806020018281038252603a8152602001806121e8603a91396040019150506040518091039061136e611bda565b50505b6001600160a01b038316600090815260046020526113c59060409020600090611398611c9a565b906101000a90046001600160601b031682604051606081016040526036808252611f986020830139611222565b6001600160a01b03841660009081526004602052604090206001816113e8611c9a565b816001600160601b0302191690836001600160601b031602179061140a611ce6565b5050506001600160a01b038216600090815260046020526114619060409020600090611434611c9a565b906101000a90046001600160601b031682604051606081016040526030808252611f096020830139611695565b6001600160a01b0383166000908152600460205260409020600181611484611c9a565b816001600160601b0302191690836001600160601b03160217906114a6611ce6565b505050816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516001600160601b03909116815260200160405180910390a36001600160a01b038316600090815260056020526115679060409020600090611521611c9a565b6001600160a01b03858116600090815260056020526101009390930a909104169060409020600090611551611c9a565b906101000a90046001600160a01b031683611745565b505050565b6001600160a01b038216600090815260056020526040812060009061158f611c9a565b6001600160a01b03858116600090815260046020526101009390930a909104169150604081206000906115c0611c9a565b906101000a90046001600160601b031690508260056000866001600160a01b03166001600160a01b03168152602001908152602001600020600181611603611c9a565b816001600160a01b0302191690836001600160a01b0316021790611625611ce6565b505050826001600160a01b0316826001600160a01b0316856001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461167d828483611745565b50505050565b6000805a61168f611ec2565b91505090565b6000838301826001600160601b03808716908316101561173c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116f85780820151838201526020016116e0565b50505050905090810190601f1680156117255780820380516001836020036101000a031916815260200191505b509250505060405180910390611739611bda565b50505b50949350505050565b816001600160a01b0316836001600160a01b03161415801561177057506000816001600160601b0316115b15611567576001600160a01b03831615611851576001600160a01b03831660009081526007602052604081206000906117a7611c9a565b906101000a900463ffffffff1690506000808263ffffffff16116117cc57600061181a565b6001600160a01b038516600090815260066020526040902063ffffffff600019840116600090815260209190915260409020600490611809611c9a565b906101000a90046001600160601b03165b9050600061183f828560405160608101604052602880825261218c6020830139611222565b905061184d86848484611925565b5050505b6001600160a01b03821615611567576001600160a01b0382166000908152600760205260408120600090611883611c9a565b906101000a900463ffffffff1690506000808263ffffffff16116118a85760006118f6565b6001600160a01b038416600090815260066020526040902063ffffffff6000198401166000908152602091909152604090206004906118e5611c9a565b906101000a90046001600160601b03165b9050600061191b828560405160608101604052602780825261201b6020830139611695565b9050611097858484845b600061194f5a611933611d34565b6040516060810160405260348082526121b46020830139611b85565b905060008463ffffffff161180156119bc57506001600160a01b0385166000908152600660205263ffffffff8216906040902063ffffffff6000198701166000908152602091909152604090206000906119a7611c9a565b906101000a900463ffffffff1663ffffffff16145b15611a2d576001600160a01b0385166000908152600660205282906040902063ffffffff600019870116600090815260209190915260409020600160201b81611a03611c9a565b816001600160601b0302191690836001600160601b0316021790611a25611ce6565b505050611b2e565b6040516040808201815263ffffffff831682526001600160601b0384166020808401919091526001600160a01b038816600090815260069091522063ffffffff8616600090815260209190915260409020815181600181611a8c611c9a565b8163ffffffff021916908363ffffffff16021790611aa8611ce6565b505050602082015181600160201b81611abf611c9a565b816001600160601b0302191690836001600160601b0316021790611ae1611ce6565b5050506001600160a01b038716600090815260076020526001870192506040915020600181611b0e611c9a565b8163ffffffff021916908363ffffffff16021790611b2a611ce6565b5050505b846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72484846040516001600160601b039283168152911660208201526040908101905180910390a25050505050565b600081600160201b841061121a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051602090910190808383600083156111d65780820151838201526020016111be565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015611c12578086015182820160400152602001611bf7565b506020828760640184336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52505050565b6373509064598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c528051935060005b604081101561156757600082820152602001611c83565b6303daa959598160e01b8152836004820152602081602483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020611c83565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52600081526020611c83565b635a98c361598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020611c83565b604051604080820190526000808252602082015290565b638540661f598160e01b8152611dc2565b80808311156106c3575090919050565b80808310156106c3575090919050565b836004820152846024820152606060448201528660648201526084810160005b88811015611dfa578088015182820152602001611de2565b506060828960a40184336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c52815160408301513d6000853e8b8b82606087013350600060045af15059611e4f8d3d611db2565b8c01611e5b8187611da2565b5b82811015611e705760008152602001611e5c565b50929c50505050505050565b63bdbf8c36598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020611c83565b6390580256598160e01b8152602081600483336000905af158601d01573d60011458600c01573d6000803e3d621234565260ea61109c5280516000825293506020611c8356fe5242434e3a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77735242434e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e63655242434e3a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63655242434e3a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63655242434e3a3a7472616e736665723a20616d6f756e74206578636565647320393620626974735242434e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e65645242434e3a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374295242434e3a3a64656c656761746542795369673a20696e76616c6964207369676e61747572655242434e3a3a64656c656761746542795369673a207369676e617475726520657870697265648c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255242434e3a3a617070726f76653a20616d6f756e74206578636565647320393620626974735242434e3a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e7432353620657870697279295242434e3a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77735242434e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974735242434e3a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x147 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2FCD7E43 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x44D5437D EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x6F9DD595 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xB8DF67C8 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0xC0198AC4 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xCB4774F3 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xDECB7EE9 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x542 JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x152 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x15D PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x199 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1F0 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 PUSH2 0x25B PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x886 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 PUSH2 0x2C8 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 PUSH2 0x34C PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 PUSH2 0x394 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91A JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3C3 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 PUSH2 0x414 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x15D PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 PUSH2 0x44B PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC68 JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 PUSH2 0x480 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x225 PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4BF PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 PUSH2 0x517 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x10AA JUMP JUMPDEST PUSH2 0x225 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x225 PUSH2 0x110B JUMP JUMPDEST PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 PUSH2 0x55E PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x293AB134B1B7B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x5DC JUMPI POP PUSH1 0x0 NOT PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x5FC DUP4 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x25 DUP1 DUP3 MSTORE PUSH2 0x20F1 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x117F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 GAS PUSH2 0x60D PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x651 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x673 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x689 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2042 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH2 0x6FF PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE SWAP1 SWAP2 POP PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x73E PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH2 0x772 DUP6 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x25 DUP1 DUP3 MSTORE PUSH2 0x20F1 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x117F JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x86E JUMPI PUSH1 0x0 PUSH2 0x7C7 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x3D DUP1 DUP3 MSTORE PUSH2 0x1F5B PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x808 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x82A PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x879 DUP8 DUP8 DUP4 PUSH2 0x12D5 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x890 PUSH2 0x1C9A JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH8 0x3820A0BD0399B822 SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP PUSH2 0x8BE PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x8E3 GAS PUSH2 0x8DD PUSH2 0x1C45 JUMP JUMPDEST DUP3 PUSH2 0x156C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP PUSH2 0x90A PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x93D PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 GAS PUSH2 0x960 PUSH2 0x1D34 JUMP JUMPDEST DUP3 LT PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FF4 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x9A3 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x9C9 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 POP DUP1 PUSH2 0x9E9 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP4 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP5 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xA28 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0xA95 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP4 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0xA7D PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP POP PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP4 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xAC9 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xBDE JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xB1E PUSH2 0x1D7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 PUSH2 0xB63 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 PUSH2 0xB82 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 MSTORE POP SWAP1 POP DUP7 DUP2 MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xBB9 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x6C3 JUMP JUMPDEST DUP7 DUP2 MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xBD0 JUMPI DUP2 SWAP4 POP PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0xC17 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x890 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x292121A7 PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC8B DUP4 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x26 DUP1 DUP3 MSTORE PUSH2 0x1FCE PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x117F JUMP JUMPDEST SWAP1 POP PUSH2 0xCA0 GAS PUSH2 0xC99 PUSH2 0x1C45 JUMP JUMPDEST DUP6 DUP4 PUSH2 0x12D5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0xCCE PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xCF2 JUMPI PUSH1 0x0 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP4 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0xD2F PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x8BE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xD5F PUSH2 0x1C9A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2042 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x293AB134B1B7B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDAB PUSH2 0x1683 JUMP JUMPDEST GAS PUSH4 0x996D79A5 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD SWAP3 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDEA JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP1 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x2152 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS PUSH2 0xF45 PUSH2 0x1D91 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xF61 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2085 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xFBB PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 DUP2 PUSH2 0xFE1 PUSH2 0x1C9A JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP4 ADD SWAP2 POP PUSH2 0xFF0 PUSH2 0x1CE6 JUMP JUMPDEST POP POP DUP10 EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F39 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1035 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST DUP8 GAS PUSH2 0x1042 PUSH2 0x1E7C JUMP JUMPDEST GT ISZERO PUSH2 0x1088 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20AB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1085 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1092 DUP2 DUP12 PUSH2 0x156C JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5F PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x10E6 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH8 0x3820A0BD0399B822 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x2152 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 POP DUP2 PUSH2 0x114F PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 PUSH1 0x4 DUP2 PUSH2 0x116A PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11D6 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1203 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1217 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1289 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1271 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x12CA PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2116 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1320 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21E8 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x136E PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x13C5 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1398 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x36 DUP1 DUP3 MSTORE PUSH2 0x1F98 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x13E8 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x140A PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1461 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1434 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x30 DUP1 DUP3 MSTORE PUSH2 0x1F09 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x1484 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x14A6 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1567 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1521 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP1 SWAP2 DIV AND SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1551 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1745 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x158F PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP1 SWAP2 DIV AND SWAP2 POP PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x15C0 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x1603 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x1625 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x167D DUP3 DUP5 DUP4 PUSH2 0x1745 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH2 0x168F PUSH2 0x1EC2 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP8 AND SWAP1 DUP4 AND LT ISZERO PUSH2 0x173C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1725 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1739 PUSH2 0x1BDA JUMP JUMPDEST POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1770 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1851 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x17A7 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x17CC JUMPI PUSH1 0x0 PUSH2 0x181A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP5 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0x1809 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x183F DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x28 DUP1 DUP3 MSTORE PUSH2 0x218C PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1222 JUMP JUMPDEST SWAP1 POP PUSH2 0x184D DUP7 DUP5 DUP5 DUP5 PUSH2 0x1925 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1567 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x1883 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x18A8 JUMPI PUSH1 0x0 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP5 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 PUSH2 0x18E5 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x191B DUP3 DUP6 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x27 DUP1 DUP3 MSTORE PUSH2 0x201B PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1695 JUMP JUMPDEST SWAP1 POP PUSH2 0x1097 DUP6 DUP5 DUP5 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x194F GAS PUSH2 0x1933 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x34 DUP1 DUP3 MSTORE PUSH2 0x21B4 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x1B85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x19BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH4 0xFFFFFFFF DUP3 AND SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x19A7 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP3 SWAP1 PUSH1 0x40 SWAP1 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL DUP2 PUSH2 0x1A03 PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x1A25 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 PUSH1 0x1 DUP2 PUSH2 0x1A8C PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 PUSH2 0x1AA8 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP2 PUSH2 0x1ABF PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x1AE1 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 DUP8 ADD SWAP3 POP PUSH1 0x40 SWAP2 POP KECCAK256 PUSH1 0x1 DUP2 PUSH2 0x1B0E PUSH2 0x1C9A JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 PUSH2 0x1B2A PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x11D6 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11BE JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1C12 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF7 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE POP POP POP JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x5A98C361 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x1DC2 JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0x6C3 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0x6C3 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x1DFA JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DE2 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x1E4F DUP14 RETURNDATASIZE PUSH2 0x1DB2 JUMP JUMPDEST DUP13 ADD PUSH2 0x1E5B DUP2 DUP8 PUSH2 0x1DA2 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5C JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP JUMPDEST PUSH4 0x90580256 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x1C83 JUMP INVALID MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x74206F766572666C6F77735242434E GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E63655242434E3A3A5F7472616E PUSH20 0x666572546F6B656E733A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63655242434E GASPRICE GASPRICE PUSH21 0x72616E736665723A20616D6F756E74206578636565 PUSH5 0x7320393620 PUSH3 0x697473 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206F766572666C6F7773454950373132446F6D61 PUSH10 0x6E28737472696E67206E PUSH2 0x6D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374295242434E3A3A PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964207369676E61 PUSH21 0x7572655242434E3A3A64656C656761746542795369 PUSH8 0x3A207369676E6174 PUSH22 0x726520657870697265648C5BE1E5EBEC7D5BD14F7142 PUSH30 0x1E84F3DD0314C0F7B2291E5B200AC8C7C3B9255242434E3A3A617070726F PUSH23 0x653A20616D6F756E742065786365656473203936206269 PUSH21 0x735242434E3A3A5F7472616E73666572546F6B656E PUSH20 0x3A2063616E6E6F74207472616E73666572206672 PUSH16 0x6D20746865207A65726F206164647265 PUSH20 0x7344656C65676174696F6E286164647265737320 PUSH5 0x656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420756E646572666C6F77735242434E3A3A5F7772 PUSH10 0x7465436865636B706F69 PUSH15 0x743A20626C6F636B206E756D626572 KECCAK256 PUSH6 0x786365656473 KECCAK256 CALLER ORIGIN KECCAK256 PUSH3 0x697473 MSTORE TIMESTAMP NUMBER 0x4E GASPRICE GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A2063616E6E6F74 KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 ",
              "sourceMap": "132:15867:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;132:15867:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;201:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;201:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5167:433;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;5167:433:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;492:51;;;:::i;:::-;;;;;;;;;;;;;;;2299:152;;;:::i;6711:797::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;6711:797:1;;;;;;;;;;;;;;;;;:::i;741:26::-;;;:::i;396:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;11611:87;;;:::i;1768:44::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;1768:44:1;-1:-1:-1;;;;;1768:44:1;;:::i;:::-;;;-1:-1:-1;;;;;1768:44:1;;;;;;;;;;;;;;7650:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;7650:100:1;-1:-1:-1;;;;;7650:100:1;;:::i;:::-;;637:28;;;:::i;2181:48::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;2181:48:1;-1:-1:-1;;;;;2181:48:1;;:::i;:::-;;;;;;;;;;;;;;;;;;5796:109;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;5796:109:1;-1:-1:-1;;;;;5796:109:1;;:::i;10152:1251::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;10152:1251:1;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;10152:1251:1;;;;;;;;;;;;;;2745:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;2745:41:1;-1:-1:-1;;;;;2745:41:1;;:::i;298:38::-;;;:::i;6161:249::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;6161:249:1;;;;;;;;:::i;9499:231::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;9499:231:1;-1:-1:-1;;;;;9499:231:1;;:::i;843:30::-;;;:::i;11512:93::-;;;:::i;8173:1132::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;;:::i;:::-;;;2:2;-1:-1;;;;;;8173:1132:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11409:97::-;;;:::i;4534:165::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;;;;;;4534:165:1;;;;;;;;;;:::i;1320:54::-;;;:::i;2542:125::-;;;:::i;2047:68::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;;:::i;:::-;;;2:2;-1:-1;2047:68:1;;-1:-1:-1;;;;;2047:68:1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2047:68:1;;;;;;;;;;;;;;;;201:39;;;;;;;;;;;;-1:-1:-1;;;201:39:1;;;;;:::o;5167:433::-;5254:4;5274:13;-1:-1:-1;;5301:9:1;:24;5297:172;;;-1:-1:-1;;;5297:172:1;;;5400:58;5407:9;5400:58;;;;;;;;;;;;;;;;:6;:58::i;:::-;5391:67;;5297:172;5513:6;5479:10;:22;5490:10;;;:::i;:::-;-1:-1:-1;;;;;5479:22:1;-1:-1:-1;;;;;5479:22:1;;;;;;;;;;;;-1:-1:-1;;;;;5479:31:1;;;;;;;;;;;;;;:40;;;;:::i;:::-;;-1:-1:-1;;;;;5479:40:1;;;;;-1:-1:-1;;;;;5479:40:1;;;;;;:::i;:::-;;;;5556:7;-1:-1:-1;;;;;5535:37:1;5544:10;;;:::i;:::-;-1:-1:-1;;;;;5535:37:1;-1:-1:-1;;;;;;;;;;;5565:6:1;5535:37;;-1:-1:-1;;;;;5535:37:1;;;;;;;;;;;;;;5589:4;5582:11;;;5167:433;;;;;:::o;492:51::-;-1:-1:-1;;;492:51:1;:::o;2299:152::-;2349:102;;;;;;;;;;;;;;;;;;2299:152;:::o;6711:797::-;6826:4;6842:15;6860:10;;;:::i;:::-;-1:-1:-1;;;;;6906:15:1;;6880:23;6906:15;;;:10;:15;;6842:28;;-1:-1:-1;6906:15:1;6880:23;6906:15;-1:-1:-1;;;;;6906:24:1;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;6906:24:1;6880:50;;6940:13;6968:58;6975:9;6968:58;;;;;;;;;;;;;;;;:6;:58::i;:::-;6940:86;;7052:3;-1:-1:-1;;;;;7041:14:1;:7;-1:-1:-1;;;;;7041:14:1;;;:48;;;;-1:-1:-1;;;;;;7059:30:1;;;;;7041:48;7037:400;;;7105:19;7143:174;7170:16;7208:6;7143:174;;;;;;;;;;;;;;;;:5;:174::i;:::-;-1:-1:-1;;;;;7331:15:1;;;;;;:10;:15;;7105:212;;-1:-1:-1;7105:212:1;;7331:15;;;-1:-1:-1;;;;;7331:24:1;;;;;;;;;;;;;;:39;;;;:::i;:::-;;-1:-1:-1;;;;;7331:39:1;;;;;-1:-1:-1;;;;;7331:39:1;;;;;;:::i;:::-;;;;7404:7;-1:-1:-1;;;;;7390:36:1;7399:3;-1:-1:-1;;;;;7390:36:1;-1:-1:-1;;;;;;;;;;;7413:12:1;7390:36;;-1:-1:-1;;;;;7390:36:1;;;;;;;;;;;;;;7037:400;;7447:33;7463:3;7468;7473:6;7447:15;:33::i;:::-;-1:-1:-1;7497:4:1;;6711:797;-1:-1:-1;;;;;;6711:797:1:o;741:26::-;;;;:::i;:::-;;:::o;396:35::-;429:2;396:35;:::o;11611:87::-;1355:19;11611:87;:::o;1768:44::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1768:44:1;;:::o;7650:100::-;7711:32;7721:10;;;:::i;:::-;7733:9;7711;:32::i;:::-;7650:100;:::o;637:28::-;;;;:::i;2181:48::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;5796:109::-;-1:-1:-1;;;;;5881:17:1;;5855:7;5881:17;;;:8;:17;;;5855:7;5881:17;;;;;:::i;:::-;-1:-1:-1;;;;;5881:17:1;;;;;;;;;5796:109;-1:-1:-1;;5796:109:1:o;10152:1251::-;10258:6;10315:12;;;:::i;:::-;10301:11;:26;10280:112;;;;-1:-1:-1;;;10280:112:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;10425:23:1;;10403:19;10425:23;;;:14;:23;;;10403:19;10425:23;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;10462:17:1;10458:56;;10502:1;10495:8;;;;;10458:56;-1:-1:-1;;;;;10571:20:1;;;;;;:11;:20;;10623:11;;10571:20;;;:38;-1:-1:-1;;10592:16:1;;10571:38;;;;;;;;;;;;;:48;;;;:::i;:::-;;;;;;;;:63;;;10567:145;;-1:-1:-1;;;;;10657:20:1;;;;;;:11;:20;;;;;:38;-1:-1:-1;;10678:16:1;;10657:38;;;;;;;;;;;;;:44;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;10657:44:1;10650:51;;;;;10567:145;-1:-1:-1;;;;;10770:20:1;;;;;;:11;:20;;10806:11;;10770:20;;;:23;;;;;;;;;;;;:33;;;;:::i;:::-;;;;;;;;:47;;;10766:86;;;10840:1;10833:8;;;;;10766:86;10862:12;-1:-1:-1;;10903:16:1;;10929:418;10944:5;10936:13;;:5;:13;;;10929:418;;;11007:1;10990:13;;;10989:19;;;10981:27;;11049:20;;:::i;:::-;-1:-1:-1;;;;;11072:20:1;;;;;;:11;:20;;;;;:28;;;;;;;;;;;;;;;11049:51;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11049:51:1;;;;;;;;;;-1:-1:-1;11049:51:1;-1:-1:-1;11134:11:1;11049:51;11118:12;:27;;;11114:223;;;11172:2;:8;;;11165:15;;;;;;;;;11114:223;11220:11;11205:2;:12;:26;;;11201:136;;;11259:6;11251:14;;11201:136;;;11321:1;11312:6;:10;11304:18;;11201:136;10929:418;;;;;-1:-1:-1;;;;;11363:20:1;;;;;;:11;:20;;;;;:27;;;;;;;;;;;;;;;:33;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;11363:33:1;11356:40;;;;;10152:1251;;;;:::o;2745:41::-;;;;;;;;;;;-1:-1:-1;2745:41:1;;:::i;298:38::-;;;;;;;;;;;;-1:-1:-1;;;298:38:1;;;;;:::o;6161:249::-;6229:4;6245:13;6273:59;6280:9;6273:59;;;;;;;;;;;;;;;;:6;:59::i;:::-;6245:87;;6342:40;6358:10;;;:::i;:::-;6370:3;6375:6;6342:15;:40::i;:::-;-1:-1:-1;6399:4:1;;6161:249;-1:-1:-1;;;6161:249:1:o;9499:231::-;-1:-1:-1;;;;;9604:23:1;;9564:6;9604:23;;;:14;:23;;9564:6;9604:23;9564:6;9604:23;;;;;:::i;:::-;;;;;;;;9582:45;;9671:1;9656:12;:16;;;:67;;9722:1;9656:67;;;-1:-1:-1;;;;;9675:20:1;;;;;;:11;:20;;;;;:38;-1:-1:-1;;9696:16:1;;9675:38;;;;;;;;;;;;;:44;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;9675:44:1;9656:67;9637:86;9499:231;-1:-1:-1;;;9499:231:1:o;843:30::-;;;;;:::i;11512:93::-;11561:7;11587:11;;;:::i;:::-;11580:18;;11512:93;:::o;8173:1132::-;8348:23;2349:102;;;;;;;;;;;;;;;;;;8498:4;;;;;;;;;;;-1:-1:-1;;;8498:4:1;;;;;8482:22;;;;;8526:12;:10;:12::i;:::-;8568:4;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;229:22;;491:1;474:100;503:4;498:3;495:13;474:100;;;568:1;547:19;;;540:30;527:4;518:14;474:100;;;478:16;0:577;;8413:178:1;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8413:178:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8413:178:1;;;8386:219;;;;;;8348:257;;8615:18;2596:71;;;;;;;;;;;;;;;;;;8707:9;8718:5;8725:6;8675:57;;;;;;;;;;;-1:-1:-1;;;;;8675:57:1;-1:-1:-1;;;;;8675:57:1;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8675:57:1;;;8648:98;;;;;;8615:131;;8756:14;8841:15;8858:10;8812:57;;-1:-1:-1;;;8812:57:1;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8812:57:1;;;8785:98;;;;;;8756:127;;8893:17;8913:26;8923:6;8931:1;8934;8937;8913:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;8913:26:1;;;;;;;;8893:46;-1:-1:-1;;;;;;8970:23:1;;8949:108;;;;-1:-1:-1;;;8949:108:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;9097:17:1;;;;;;:6;:17;;;;;;:19;;;:::i;:::-;;;;;;-1:-1:-1;9097:19:1;;:::i;:::-;;;9088:5;:28;9067:109;;;;-1:-1:-1;;;9067:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;9201:6;9194:3;;;:::i;:::-;:13;;9186:64;;;;-1:-1:-1;;;9186:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;9267:31;9277:9;9288;9267;:31::i;:::-;9260:38;;;;8173:1132;;;;;;;:::o;11409:97::-;11460:7;11486:13;;;:::i;4534:165::-;-1:-1:-1;;;;;4664:19:1;;4634:7;4664:19;;;:10;:19;;;4634:7;4664:19;-1:-1:-1;;;;;4664:28:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4664:28:1;;;;;;;;;4534:165;-1:-1:-1;;;4534:165:1:o;1320:54::-;1355:19;1320:54;:::o;2542:125::-;2596:71;;;;;;;;;;;;;;;;;;2542:125;:::o;2047:68::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;2047:68:1;;-1:-1:-1;2047:68:1;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;2047:68:1;;;;:::o;15212:189::-;15314:6;15355:12;-1:-1:-1;;;15344:9:1;;15336:32;;;;-1:-1:-1;;;15336:32:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15336:32:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;15392:1:1;;15212:189;-1:-1:-1;;15212:189:1:o;15627:192::-;15743:6;15774:1;-1:-1:-1;;;;;15769:6:1;:1;-1:-1:-1;;;;;15769:6:1;;;15777:12;15761:29;;;;;-1:-1:-1;;;15761:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15761:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;15807:5:1;;;15627:192::o;12077:795::-;-1:-1:-1;;;;;12213:17:1;;12192:124;;;;-1:-1:-1;;;12192:124:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;12347:17:1;;12326:122;;;;-1:-1:-1;;;12326:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;12494:13:1;;;;;;:8;:13;;12475:132;;12494:13;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;12494:13:1;12521:6;12475:132;;;;;;;;;;;;;;;;:5;:132::i;:::-;-1:-1:-1;;;;;12459:13:1;;;;;;:8;:13;;;;;:148;;;;:::i;:::-;;-1:-1:-1;;;;;12459:148:1;;;;;-1:-1:-1;;;;;12459:148:1;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;12652:13:1;;;;;;:8;:13;;12633:126;;12652:13;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;12652:13:1;12679:6;12633:126;;;;;;;;;;;;;;;;:5;:126::i;:::-;-1:-1:-1;;;;;12617:13:1;;;;;;:8;:13;;;;;:142;;;;:::i;:::-;;-1:-1:-1;;;;;12617:142:1;;;;;-1:-1:-1;;;;;12617:142:1;;;;;;:::i;:::-;;;;12788:3;-1:-1:-1;;;;;12774:26:1;12783:3;-1:-1:-1;;;;;12774:26:1;;12793:6;12774:26;;-1:-1:-1;;;;;12774:26:1;;;;;;;;;;;;;;-1:-1:-1;;;;;12826:14:1;;;;;;:9;:14;;12811:54;;12826:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;12842:14:1;;;;;;;:9;:14;;12826;;;;;;;;;;12842;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;12842:14:1;12858:6;12811:14;:54::i;:::-;12077:795;;;:::o;11704:367::-;-1:-1:-1;;;;;11806:20:1;;11780:23;11806:20;;;:9;:20;;;11780:23;11806:20;;;;;:::i;:::-;-1:-1:-1;;;;;11862:19:1;;;11836:23;11862:19;;;:8;:19;;11806:20;;;;;;;;;;-1:-1:-1;11862:19:1;11836:23;11862:19;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;11862:19:1;11836:45;;11914:9;11891;:20;11901:9;-1:-1:-1;;;;;11891:20:1;-1:-1:-1;;;;;11891:20:1;;;;;;;;;;;;:32;;;;:::i;:::-;;-1:-1:-1;;;;;11891:32:1;;;;;-1:-1:-1;;;;;11891:32:1;;;;;;:::i;:::-;;;;11983:9;-1:-1:-1;;;;;11939:54:1;11966:15;-1:-1:-1;;;;;11939:54:1;11955:9;-1:-1:-1;;;;;11939:54:1;;;;;;;;;;;12004:60;12019:15;12036:9;12047:16;12004:14;:60::i;:::-;11704:367;;;;:::o;15825:172::-;15870:7;15889:15;15948:9;;;:::i;:::-;15937:20;-1:-1:-1;;15825:172:1;:::o;15407:214::-;15523:6;15552:5;;;15583:12;-1:-1:-1;;;;;15575:6:1;;;;;;;;15567:29;;;;-1:-1:-1;;;15567:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15567:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;15613:1:1;15407:214;-1:-1:-1;;;;15407:214:1:o;12878:1317::-;13012:6;-1:-1:-1;;;;;13002:16:1;:6;-1:-1:-1;;;;;13002:16:1;;;:30;;;;;13031:1;13022:6;-1:-1:-1;;;;;13022:10:1;;13002:30;12998:1191;;;-1:-1:-1;;;;;13052:20:1;;;13048:559;;-1:-1:-1;;;;;13111:22:1;;13092:16;13111:22;;;:14;:22;;;13092:16;13111:22;;;;;:::i;:::-;;;;;;;;13092:41;;13151:16;13202:1;13190:9;:13;;;:108;;13297:1;13190:108;;;-1:-1:-1;;;;;13230:19:1;;;;;;:11;:19;;;;;:34;-1:-1:-1;;13250:13:1;;13230:34;;;;;;;;;;;;;:40;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;13230:40:1;13190:108;13151:147;;13316:16;13355:162;13386:9;13421:6;13355:162;;;;;;;;;;;;;;;;:5;:162::i;:::-;13316:201;;13535:57;13552:6;13560:9;13571;13582;13535:16;:57::i;:::-;13048:559;;;;-1:-1:-1;;;;;13625:20:1;;;13621:558;;-1:-1:-1;;;;;13684:22:1;;13665:16;13684:22;;;:14;:22;;;13665:16;13684:22;;;;;:::i;:::-;;;;;;;;13665:41;;13724:16;13775:1;13763:9;:13;;;:108;;13870:1;13763:108;;;-1:-1:-1;;;;;13803:19:1;;;;;;:11;:19;;;;;:34;-1:-1:-1;;13823:13:1;;13803:34;;;;;;;;;;;;;:40;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;13803:40:1;13763:108;13724:147;;13889:16;13928:161;13959:9;13994:6;13928:161;;;;;;;;;;;;;;;;:5;:161::i;:::-;13889:200;;14107:57;14124:6;14132:9;14143;14154;14201:810;14358:18;14391:122;14415:12;;;:::i;:::-;14391:122;;;;;;;;;;;;;;;;:6;:122::i;:::-;14358:155;;14556:1;14541:12;:16;;;:97;;;;-1:-1:-1;;;;;;14573:22:1;;;;;;:11;:22;;:65;;;;:22;;;:40;-1:-1:-1;;14596:16:1;;14573:40;;;;;;;;;;;;;:50;;;;:::i;:::-;;;;;;;;:65;;;14541:97;14524:414;;;-1:-1:-1;;;;;14663:22:1;;;;;;:11;:22;;14712:8;;14663:22;;;:40;-1:-1:-1;;14686:16:1;;14663:40;;;;;;;;;;;;;-1:-1:-1;;;14663:46:1;:57;;:::i;:::-;;-1:-1:-1;;;;;14663:57:1;;;;;-1:-1:-1;;;;;14663:57:1;;;;;;:::i;:::-;;;;14524:414;;;14790:79;;;;;;;;;;;;;-1:-1:-1;;;;;14790:79:1;;;;;;;;;;-1:-1:-1;;;;;14751:22:1;;-1:-1:-1;14751:22:1;;;:11;:22;;;;:36;;;;;;;;;;;;;;;:118;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;14751:118:1;;;:::i;:::-;;-1:-1:-1;;;;;14751:118:1;;;;;-1:-1:-1;;;;;14751:118:1;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;14883:25:1;;;;;;:14;:25;;14926:1;14911:16;;;-1:-1:-1;14883:25:1;;-1:-1:-1;14883:25:1;:44;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;14524:414;14974:9;-1:-1:-1;;;;;14953:51:1;;14985:8;14995;14953:51;;-1:-1:-1;;;;;14953:51:1;;;;;;;;;;;;;;;;;;;;;;14201:810;;;;;:::o;15017:189::-;15119:6;15160:12;-1:-1:-1;;;15149:9:1;;15141:32;;;;-1:-1:-1;;;15141:32:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;27:10;;8:100;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;132:15867:1;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;242:1;231:9;227:17;295:4;284:9;277:23;362:6;355:4;344:9;340:20;333:36;424:1;407:143;436:6;431:3;428:15;407:143;;;536:3;528:6;524:16;518:23;486:30;;;505:4;486:30;479:63;462:4;453:14;407:143;;;411:16;720:4;709:9;700:6;694:4;690:17;679:9;674:51;;;;;;;;;;;;;;;;;;;;;;;;;;0:821;;;132:15867:1:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;229:22;;491:1;474:100;503:4;498:3;495:13;474:100;;;568:1;547:19;;;540:30;527:4;518:14;474:100;;132:15867:1;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;521:1;570:30;;259:22;-1:-1;557:4;504:100;;132:15867:1;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;219:2;212:4;201:9;197:20;190:32;284:1;273:9;269:2;258:9;253:33;;;;;;;;;;;;;;;;;;;;;;;;;;530:1;579:30;;566:4;513:100;;132:15867:1;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;132:15867:1;;;;;;;;;;;;;;;;;;:::o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;188:107;;;241:5;253:17;;;250:2;;;-1:-1;283:6;;226:69;-1:-1;226:69;298:110;353:5;365:17;;;362:2;;;-1:-1;396:6;;337:71;-1:-1;337:71;;462:6;455:4;444:9;440:20;433:36;521:4;514;503:9;499:20;492:34;592:4;585;574:9;570:20;563:34;670:10;663:4;652:9;648:20;641:40;762:4;751:9;747:20;787:1;770:135;799:10;794:3;791:19;770:135;;;895:3;883:10;879:20;873:27;849:22;;;842:59;829:4;820:14;770:135;;;774:16;1304:4;1293:9;1280:10;1274:4;1270:21;1259:9;1254:55;;;;;;;;;;;;;;;;;;;;;;;;;;1354:9;1348:16;1463:4;1452:9;1448:20;1442:27;1707:16;1704:1;1693:9;1678:46;1792:9;1781;1754:25;1747:4;1736:9;1732:20;1727:75;;;;;;;1870:7;2034:32;2056:9;2038:16;2034:32;;;2024:9;2020:47;2087:31;2102:15;2091:9;2087:31;;;2070:123;2129:10;2124:3;2121:19;2070:123;;;2184:4;2172:17;;2159:4;2150:14;2070:123;;;-1:-1;2351:10;;-1:-1;;;;;;;132:15867:1:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;132:15867:1;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1747600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "DELEGATION_TYPEHASH()": "infinite",
                "DOMAIN_TYPEHASH()": "infinite",
                "allowance(address,address)": "infinite",
                "approve(address,uint256)": "infinite",
                "aqueductAddress()": "infinite",
                "balanceOf(address)": "infinite",
                "checkpoints(address,uint32)": "infinite",
                "decimals()": "infinite",
                "delegate(address)": "infinite",
                "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
                "delegates(address)": "infinite",
                "distEndTime()": "infinite",
                "distRate()": "infinite",
                "distStartTime()": "infinite",
                "getCurrentVotes(address)": "infinite",
                "getDistEndTime()": "infinite",
                "getDistRate()": "infinite",
                "getDistStartTime()": "infinite",
                "getPriorVotes(address,uint256)": "infinite",
                "name()": "infinite",
                "nonces(address)": "infinite",
                "numCheckpoints(address)": "infinite",
                "symbol()": "infinite",
                "totalSupply()": "infinite",
                "transfer(address,uint256)": "infinite",
                "transferFrom(address,address,uint256)": "infinite"
              },
              "internal": {
                "_delegate(address,address)": "infinite",
                "_moveDelegates(address,address,uint96)": "infinite",
                "_transferTokens(address,address,uint96)": "infinite",
                "_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
                "add96(uint96,uint96,string memory)": "infinite",
                "getChainId()": "infinite",
                "safe32(uint256,string memory)": "infinite",
                "safe96(uint256,string memory)": "infinite",
                "sub96(uint96,uint96,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {
              "DELEGATION_TYPEHASH()": "e7a324dc",
              "DOMAIN_TYPEHASH()": "20606b70",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "aqueductAddress()": "b8df67c8",
              "balanceOf(address)": "70a08231",
              "checkpoints(address,uint32)": "f1127ed8",
              "decimals()": "313ce567",
              "delegate(address)": "5c19a95c",
              "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
              "delegates(address)": "587cde1e",
              "distEndTime()": "2fcd7e43",
              "distRate()": "decb7ee9",
              "distStartTime()": "6f9dd595",
              "getCurrentVotes(address)": "b4b5ea57",
              "getDistEndTime()": "c0198ac4",
              "getDistRate()": "44d5437d",
              "getDistStartTime()": "cb4774f3",
              "getPriorVotes(address,uint256)": "782d6fe1",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "numCheckpoints(address)": "6fcfff45",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16-develop.2020.12.10+ovm+commit.25adf37d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aqueduct\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aqueductAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDistEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDistRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDistStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"constructor\":{\"params\":{\"admin\":\"The recipient of non-community tokens\",\"aqueduct\":\"The holder of all community tokens\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"constructor\":\"Construct a new RBCN token\",\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/RBCN.sol\":\"RBCN\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/RBCN.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2020-03-04\\n */\\n\\npragma solidity ^0.5.16;\\n\\n// pragma experimental ABIEncoderV2;\\n\\ncontract RBCN {\\n    /// @notice EIP-20 token name for this token\\n    string public constant name = \\\"Rubicon\\\";\\n\\n    /// @notice EIP-20 token symbol for this token\\n    string public constant symbol = \\\"RBCN\\\";\\n\\n    /// @notice EIP-20 token decimals for this token\\n    uint8 public constant decimals = 18;\\n\\n    /// @notice Total number of tokens in circulation\\n    uint256 public constant totalSupply = 1000000000e18; // 1 billion RBCN\\n\\n    /// @notice The Unix Timestamp to begin RBCN public distribution\\n    uint256 public distStartTime;\\n\\n    /// @notice The Unix Timestamp to begin RBCN public distribution\\n    uint256 public distEndTime;\\n\\n    /// @notice The contract that holds the RBCN public distribution\\n    address public aqueductAddress;\\n\\n    /// @ notice The rate of RBCN per unit of Unix time (millisecond) distributed\\n    ///          to the community\\n    /// Selected Number: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*%28.51%29%29%2F%28365*x*24*60*60%29+%3D+%284044409199048374306+%2F+1e18%29\\n    /// Rate calculation: https://www.wolframalpha.com/input/?i=%281%2C000%2C000%2C000*.51%29%2F1.261e%2B8\\n    /// Rate = 4044409199048374 / 1e18 = 4.044409199...\\n    uint256 public constant distRate = 4044409199048374306; //Distribution rate Wad in SECONDS\\n    /// True rate of RBCN per second is distRate / 1e18\\n\\n    /// @notice Allowance amounts on behalf of others\\n    mapping(address => mapping(address => uint96)) internal allowances;\\n\\n    /// @notice Official record of token balances for each account\\n    mapping(address => uint96) internal balances;\\n\\n    /// @notice A record of each accounts delegate\\n    mapping(address => address) public delegates;\\n\\n    /// @notice A checkpoint for marking number of votes from a given block\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint96 votes;\\n    }\\n\\n    /// @notice A record of votes checkpoints for each account, by index\\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\\n\\n    /// @notice The number of checkpoints for each account\\n    mapping(address => uint32) public numCheckpoints;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\\\");\\n\\n    /// @notice A record of states for signing / validating signatures\\n    mapping(address => uint256) public nonces;\\n\\n    /// @notice An event thats emitted when an account changes its delegate\\n    event DelegateChanged(\\n        address indexed delegator,\\n        address indexed fromDelegate,\\n        address indexed toDelegate\\n    );\\n\\n    /// @notice An event thats emitted when a delegate account's vote balance changes\\n    event DelegateVotesChanged(\\n        address indexed delegate,\\n        uint256 previousBalance,\\n        uint256 newBalance\\n    );\\n\\n    /// @notice The standard EIP-20 transfer event\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    /// @notice The standard EIP-20 approval event\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @notice Construct a new RBCN token\\n     * @param aqueduct The holder of all community tokens\\n     * @param admin The recipient of non-community tokens\\n     */\\n    constructor(address aqueduct, address admin) public {\\n        // 51% to community\\n        balances[aqueduct] = uint96(510000000e18);\\n        emit Transfer(address(0), aqueduct, uint256(1000000000e18));\\n        aqueductAddress = aqueduct;\\n\\n        // 49% to admin. See distribution here:\\n        balances[admin] = uint96(490000000e18);\\n        emit Transfer(address(0), admin, uint96(490000000e18));\\n\\n        // Start distributing RBCN to community at launch\\n        distStartTime = now;\\n        distEndTime = now + (4 * 365 days);\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\\n     * @param account The address of the account holding the funds\\n     * @param spender The address of the account spending the funds\\n     * @return The number of tokens approved\\n     */\\n    function allowance(address account, address spender)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return allowances[account][spender];\\n    }\\n\\n    /**\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\n     * @dev This will overwrite the approval amount for `spender`\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\n     * @param spender The address of the account which may transfer tokens\\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\\n     * @return Whether or not the approval succeeded\\n     */\\n    function approve(address spender, uint256 rawAmount)\\n        external\\n        returns (bool)\\n    {\\n        uint96 amount;\\n        if (rawAmount == uint256(-1)) {\\n            amount = uint96(-1);\\n        } else {\\n            amount = safe96(rawAmount, \\\"RBCN::approve: amount exceeds 96 bits\\\");\\n        }\\n\\n        allowances[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens held by the `account`\\n     * @param account The address of the account to get the balance of\\n     * @return The number of tokens held\\n     */\\n    function balanceOf(address account) external view returns (uint256) {\\n        return balances[account];\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\n     * @param dst The address of the destination account\\n     * @param rawAmount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transfer(address dst, uint256 rawAmount) external returns (bool) {\\n        uint96 amount =\\n            safe96(rawAmount, \\\"RBCN::transfer: amount exceeds 96 bits\\\");\\n        _transferTokens(msg.sender, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\n     * @param src The address of the source account\\n     * @param dst The address of the destination account\\n     * @param rawAmount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 rawAmount\\n    ) external returns (bool) {\\n        address spender = msg.sender;\\n        uint96 spenderAllowance = allowances[src][spender];\\n        uint96 amount =\\n            safe96(rawAmount, \\\"RBCN::approve: amount exceeds 96 bits\\\");\\n\\n        if (spender != src && spenderAllowance != uint96(-1)) {\\n            uint96 newAllowance =\\n                sub96(\\n                    spenderAllowance,\\n                    amount,\\n                    \\\"RBCN::transferFrom: transfer amount exceeds spender allowance\\\"\\n                );\\n            allowances[src][spender] = newAllowance;\\n\\n            emit Approval(src, spender, newAllowance);\\n        }\\n\\n        _transferTokens(src, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Delegate votes from `msg.sender` to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     */\\n    function delegate(address delegatee) public {\\n        return _delegate(msg.sender, delegatee);\\n    }\\n\\n    /**\\n     * @notice Delegates votes from signatory to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     * @param nonce The contract state required to match the signature\\n     * @param expiry The time at which to expire the signature\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function delegateBySig(\\n        address delegatee,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name)),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n        bytes32 structHash =\\n            keccak256(\\n                abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\\n            );\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"RBCN::delegateBySig: invalid signature\\\"\\n        );\\n        require(\\n            nonce == nonces[signatory]++,\\n            \\\"RBCN::delegateBySig: invalid nonce\\\"\\n        );\\n        require(now <= expiry, \\\"RBCN::delegateBySig: signature expired\\\");\\n        return _delegate(signatory, delegatee);\\n    }\\n\\n    /**\\n     * @notice Gets the current votes balance for `account`\\n     * @param account The address to get votes balance\\n     * @return The number of current votes for `account`\\n     */\\n    function getCurrentVotes(address account) external view returns (uint96) {\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        return\\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\\n    }\\n\\n    /**\\n     * @notice Determine the prior number of votes for an account as of a block number\\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\\n     * @param account The address of the account to check\\n     * @param blockNumber The block number to get the vote balance at\\n     * @return The number of votes the account had as of the given block\\n     */\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        require(\\n            blockNumber < block.number,\\n            \\\"RBCN::getPriorVotes: not yet determined\\\"\\n        );\\n\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        if (nCheckpoints == 0) {\\n            return 0;\\n        }\\n\\n        // First check most recent balance\\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\\n            return checkpoints[account][nCheckpoints - 1].votes;\\n        }\\n\\n        // Next check implicit zero balance\\n        if (checkpoints[account][0].fromBlock > blockNumber) {\\n            return 0;\\n        }\\n\\n        uint32 lower = 0;\\n        uint32 upper = nCheckpoints - 1;\\n        while (upper > lower) {\\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n            Checkpoint memory cp = checkpoints[account][center];\\n            if (cp.fromBlock == blockNumber) {\\n                return cp.votes;\\n            } else if (cp.fromBlock < blockNumber) {\\n                lower = center;\\n            } else {\\n                upper = center - 1;\\n            }\\n        }\\n        return checkpoints[account][lower].votes;\\n    }\\n\\n    function getDistStartTime() external view returns (uint256) {\\n        return distStartTime;\\n    }\\n\\n    function getDistEndTime() external view returns (uint256) {\\n        return distEndTime;\\n    }\\n\\n    function getDistRate() external pure returns (uint256) {\\n        return distRate;\\n    }\\n\\n    function _delegate(address delegator, address delegatee) internal {\\n        address currentDelegate = delegates[delegator];\\n        uint96 delegatorBalance = balances[delegator];\\n        delegates[delegator] = delegatee;\\n\\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\\n\\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\\n    }\\n\\n    function _transferTokens(\\n        address src,\\n        address dst,\\n        uint96 amount\\n    ) internal {\\n        require(\\n            src != address(0),\\n            \\\"RBCN::_transferTokens: cannot transfer from the zero address\\\"\\n        );\\n        require(\\n            dst != address(0),\\n            \\\"RBCN::_transferTokens: cannot transfer to the zero address\\\"\\n        );\\n\\n        balances[src] = sub96(\\n            balances[src],\\n            amount,\\n            \\\"RBCN::_transferTokens: transfer amount exceeds balance\\\"\\n        );\\n        balances[dst] = add96(\\n            balances[dst],\\n            amount,\\n            \\\"RBCN::_transferTokens: transfer amount overflows\\\"\\n        );\\n        emit Transfer(src, dst, amount);\\n\\n        _moveDelegates(delegates[src], delegates[dst], amount);\\n    }\\n\\n    function _moveDelegates(\\n        address srcRep,\\n        address dstRep,\\n        uint96 amount\\n    ) internal {\\n        if (srcRep != dstRep && amount > 0) {\\n            if (srcRep != address(0)) {\\n                uint32 srcRepNum = numCheckpoints[srcRep];\\n                uint96 srcRepOld =\\n                    srcRepNum > 0\\n                        ? checkpoints[srcRep][srcRepNum - 1].votes\\n                        : 0;\\n                uint96 srcRepNew =\\n                    sub96(\\n                        srcRepOld,\\n                        amount,\\n                        \\\"RBCN::_moveVotes: vote amount underflows\\\"\\n                    );\\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\\n            }\\n\\n            if (dstRep != address(0)) {\\n                uint32 dstRepNum = numCheckpoints[dstRep];\\n                uint96 dstRepOld =\\n                    dstRepNum > 0\\n                        ? checkpoints[dstRep][dstRepNum - 1].votes\\n                        : 0;\\n                uint96 dstRepNew =\\n                    add96(\\n                        dstRepOld,\\n                        amount,\\n                        \\\"RBCN::_moveVotes: vote amount overflows\\\"\\n                    );\\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\\n            }\\n        }\\n    }\\n\\n    function _writeCheckpoint(\\n        address delegatee,\\n        uint32 nCheckpoints,\\n        uint96 oldVotes,\\n        uint96 newVotes\\n    ) internal {\\n        uint32 blockNumber =\\n            safe32(\\n                block.number,\\n                \\\"RBCN::_writeCheckpoint: block number exceeds 32 bits\\\"\\n            );\\n\\n        if (\\n            nCheckpoints > 0 &&\\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\\n        ) {\\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\\n        } else {\\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\\n                blockNumber,\\n                newVotes\\n            );\\n            numCheckpoints[delegatee] = nCheckpoints + 1;\\n        }\\n\\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\\n    }\\n\\n    function safe32(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint32)\\n    {\\n        require(n < 2**32, errorMessage);\\n        return uint32(n);\\n    }\\n\\n    function safe96(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint96)\\n    {\\n        require(n < 2**96, errorMessage);\\n        return uint96(n);\\n    }\\n\\n    function add96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        uint96 c = a + b;\\n        require(c >= a, errorMessage);\\n        return c;\\n    }\\n\\n    function sub96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\",\"keccak256\":\"0x521c3b92ca2fd7dde75cec2da33579576c55a6c59c18ca155c791141abc380d4\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 406,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "distStartTime",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              },
              {
                "astId": 408,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "distEndTime",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 410,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "aqueductAddress",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 419,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "allowances",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
              },
              {
                "astId": 423,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "balances",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_uint96)"
              },
              {
                "astId": 427,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "delegates",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 438,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "checkpoints",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)432_storage))"
              },
              {
                "astId": 442,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "numCheckpoints",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_address,t_uint32)"
              },
              {
                "astId": 456,
                "contract": "contracts/RBCN.sol:RBCN",
                "label": "nonces",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint96))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint96))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint96)"
              },
              "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)432_storage))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint32,t_struct(Checkpoint)432_storage)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_address,t_uint32)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint32)",
                "numberOfBytes": "32",
                "value": "t_uint32"
              },
              "t_mapping(t_address,t_uint96)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint96)",
                "numberOfBytes": "32",
                "value": "t_uint96"
              },
              "t_mapping(t_uint32,t_struct(Checkpoint)432_storage)": {
                "encoding": "mapping",
                "key": "t_uint32",
                "label": "mapping(uint32 => struct RBCN.Checkpoint)",
                "numberOfBytes": "32",
                "value": "t_struct(Checkpoint)432_storage"
              },
              "t_struct(Checkpoint)432_storage": {
                "encoding": "inplace",
                "label": "struct RBCN.Checkpoint",
                "members": [
                  {
                    "astId": 429,
                    "contract": "contracts/RBCN.sol:RBCN",
                    "label": "fromBlock",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 431,
                    "contract": "contracts/RBCN.sol:RBCN",
                    "label": "votes",
                    "offset": 4,
                    "slot": "0",
                    "type": "t_uint96"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint32": {
                "encoding": "inplace",
                "label": "uint32",
                "numberOfBytes": "4"
              },
              "t_uint96": {
                "encoding": "inplace",
                "label": "uint96",
                "numberOfBytes": "12"
              }
            }
          },
          "userdoc": {
            "methods": {
              "allowance(address,address)": {
                "notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
              },
              "approve(address,uint256)": {
                "notice": "Approve `spender` to transfer up to `amount` from `src`"
              },
              "balanceOf(address)": {
                "notice": "Get the number of tokens held by the `account`"
              },
              "constructor": "Construct a new RBCN token",
              "delegate(address)": {
                "notice": "Delegate votes from `msg.sender` to `delegatee`"
              },
              "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
                "notice": "Delegates votes from signatory to `delegatee`"
              },
              "getCurrentVotes(address)": {
                "notice": "Gets the current votes balance for `account`"
              },
              "getPriorVotes(address,uint256)": {
                "notice": "Determine the prior number of votes for an account as of a block number"
              },
              "transfer(address,uint256)": {
                "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
              },
              "transferFrom(address,address,uint256)": {
                "notice": "Transfer `amount` tokens from `src` to `dst`"
              }
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/Aqueduct.sol:24:67: Warning: OVM: Taking arguments in constructor may result in unsafe code.\n    constructor(uint256 communityDuration, address _owner) public {\n                                                                  ^\n",
        "message": "OVM: Taking arguments in constructor may result in unsafe code.",
        "severity": "warning",
        "sourceLocation": {
          "end": 698,
          "file": "contracts/Aqueduct.sol",
          "start": 697
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "formattedMessage": "contracts/RBCN.sol:102:57: Warning: OVM: Taking arguments in constructor may result in unsafe code.\n    constructor(address aqueduct, address admin) public {\n                                                        ^\n",
        "message": "OVM: Taking arguments in constructor may result in unsafe code.",
        "severity": "warning",
        "sourceLocation": {
          "end": 3755,
          "file": "contracts/RBCN.sol",
          "start": 3754
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/Aqueduct.sol": {
        "ast": {
          "absolutePath": "contracts/Aqueduct.sol",
          "exportedSymbols": {
            "Aqueduct": [
              356
            ],
            "RBCNInterface": [
              390
            ]
          },
          "id": 391,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:0"
            },
            {
              "absolutePath": "contracts/RBCN.sol",
              "file": "./RBCN.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 391,
              "sourceUnit": 1420,
              "src": "26:20:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 356,
              "linearizedBaseContracts": [
                356
              ],
              "name": "Aqueduct",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 4,
                  "name": "RBCNAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "139:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 6,
                  "name": "RubiconMarketAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "172:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "distributionDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "214:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "256:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "RBCN",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "343:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RBCNInterface_$390",
                    "typeString": "contract RBCNInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11,
                    "name": "RBCNInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 390,
                    "src": "343:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RBCNInterface_$390",
                      "typeString": "contract RBCNInterface"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "timeOfLastRBCNDist",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "375:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "375:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "propToMakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "415:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 24,
                  "name": "Distribution",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "575:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "575:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": false,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "594:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "594:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": false,
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "610:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "610:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "574:54:0"
                  },
                  "src": "556:73:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "697:221:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 32,
                                "name": "communityDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "715:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "736:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "715:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1437,
                            "src": "707:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "707:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36,
                        "nodeType": "ExpressionStatement",
                        "src": "707:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 37,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "748:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "756:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "748:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40,
                        "nodeType": "ExpressionStatement",
                        "src": "748:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 41,
                            "name": "distributionDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "772:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 42,
                            "name": "communityDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "795:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "772:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44,
                        "nodeType": "ExpressionStatement",
                        "src": "772:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "propToMakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "894:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3630",
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "909:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "894:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "894:17:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 26,
                        "name": "communityDuration",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "647:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "674:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "646:43:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "697:0:0"
                  },
                  "scope": 356,
                  "src": "635:283:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1062:186:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "RBCNAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "1072:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "_RBCNAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1086:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1072:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 64,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:26:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 65,
                            "name": "RubiconMarketAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1108:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "RubiconMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1131:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1108:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "RBCN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1154:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RBCNInterface_$390",
                              "typeString": "contract RBCNInterface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 71,
                                "name": "RBCNAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4,
                                "src": "1175:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 70,
                              "name": "RBCNInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "1161:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RBCNInterface_$390_$",
                                "typeString": "type(contract RBCNInterface)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1161:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RBCNInterface_$390",
                              "typeString": "contract RBCNInterface"
                            }
                          },
                          "src": "1154:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RBCNInterface_$390",
                            "typeString": "contract RBCNInterface"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1154:33:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "timeOfLastRBCNDist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1197:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 76,
                                "name": "RBCN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "1218:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RBCNInterface_$390",
                                  "typeString": "contract RBCNInterface"
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getDistStartTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 375,
                              "src": "1218:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1218:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1197:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:44:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 82,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 57,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1025:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1025:9:0"
                    }
                  ],
                  "name": "setDistributionParams",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "name": "_RBCNAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "955:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "955:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 54,
                        "name": "RubiconMarket",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "977:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "954:45:0"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "1052:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1052:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1051:6:0"
                  },
                  "scope": 356,
                  "src": "924:324:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 91,
                    "nodeType": "Block",
                    "src": "1357:82:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 85,
                                "name": "isOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "1375:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1375:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1386:34:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 84,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "1367:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1367:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1367:54:0"
                      },
                      {
                        "id": 90,
                        "nodeType": "PlaceholderStatement",
                        "src": "1431:1:0"
                      }
                    ]
                  },
                  "documentation": "@dev Throws if called by any account other than the owner.",
                  "id": 92,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1354:2:0"
                  },
                  "src": "1336:103:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 101,
                    "nodeType": "Block",
                    "src": "1570:85:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 95,
                                "name": "isExchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "1588:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1588:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "43616c6c6572206973206e6f74207468652052756269636f6e204d61726b6574",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1602:34:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab309f7ed47416a38a54542759cb62ba5569db7850bdaca3ca141164d0a52672",
                                "typeString": "literal_string \"Caller is not the Rubicon Market\""
                              },
                              "value": "Caller is not the Rubicon Market"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab309f7ed47416a38a54542759cb62ba5569db7850bdaca3ca141164d0a52672",
                                "typeString": "literal_string \"Caller is not the Rubicon Market\""
                              }
                            ],
                            "id": 94,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "1580:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1580:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1580:57:0"
                      },
                      {
                        "id": 100,
                        "nodeType": "PlaceholderStatement",
                        "src": "1647:1:0"
                      }
                    ]
                  },
                  "documentation": "@dev Throws if called by any account other than the current Rubicon Exchange.",
                  "id": 102,
                  "name": "onlyExchange",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1567:2:0"
                  },
                  "src": "1546:109:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "1784:43:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 107,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1434,
                              "src": "1801:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1801:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1815:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1801:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 106,
                        "id": 111,
                        "nodeType": "Return",
                        "src": "1794:26:0"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if the caller is the current owner.",
                  "id": 113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1754:2:0"
                  },
                  "returnParameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "1778:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1778:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1777:6:0"
                  },
                  "scope": 356,
                  "src": "1738:89:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 134,
                    "nodeType": "Block",
                    "src": "1956:67:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 123,
                                      "name": "z",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 120,
                                      "src": "1975:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 126,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 124,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 115,
                                        "src": "1979:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 125,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 117,
                                        "src": "1983:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1979:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1975:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 128,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1974:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1989:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1974:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1992:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
                                "typeString": "literal_string \"ds-math-sub-underflow\""
                              },
                              "value": "ds-math-sub-underflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
                                "typeString": "literal_string \"ds-math-sub-underflow\""
                              }
                            ],
                            "id": 122,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "1966:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1966:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "1966:50:0"
                      }
                    ]
                  },
                  "documentation": "@dev Safe subtraction function",
                  "id": 135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "name": "x",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1900:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 117,
                        "name": "y",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1911:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1911:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1899:22:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "name": "z",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1945:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:11:0"
                  },
                  "scope": 356,
                  "src": "1887:136:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2166:58:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 140,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1434,
                              "src": "2183:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2183:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 142,
                            "name": "RubiconMarketAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "2197:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2183:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 139,
                        "id": 144,
                        "nodeType": "Return",
                        "src": "2176:41:0"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if the caller is the current Rubicon Exchange.",
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isExchange",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2136:2:0"
                  },
                  "returnParameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2160:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2160:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2159:6:0"
                  },
                  "scope": 356,
                  "src": "2117:107:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "2419:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 155,
                            "name": "RubiconMarketAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "2429:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "2452:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2429:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 158,
                        "nodeType": "ExpressionStatement",
                        "src": "2429:40:0"
                      }
                    ]
                  },
                  "documentation": "@dev Admin has the ability to choose a new exchange.",
                  "id": 160,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 151,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2382:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2382:9:0"
                    }
                  ],
                  "name": "setNewExchange",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "name": "newImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "2330:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2329:27:0"
                  },
                  "returnParameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "2409:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2408:6:0"
                  },
                  "scope": 356,
                  "src": "2306:170:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2643:33:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 169,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2653:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "2661:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2653:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "2653:16:0"
                      }
                    ]
                  },
                  "documentation": "@dev Only the owner can set a new owner. Timelock can be set as owner",
                  "id": 174,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 165,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2618:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2618:9:0"
                    }
                  ],
                  "name": "setOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "2593:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2593:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2592:18:0"
                  },
                  "returnParameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "2637:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2637:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2636:6:0"
                  },
                  "scope": 356,
                  "src": "2575:101:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "2738:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "RBCNAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2755:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 178,
                        "id": 180,
                        "nodeType": "Return",
                        "src": "2748:18:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRBCNAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:0"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "2729:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2729:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2728:9:0"
                  },
                  "scope": 356,
                  "src": "2682:91:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "3013:36:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "propToMakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3030:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 186,
                        "id": 188,
                        "nodeType": "Return",
                        "src": "3023:19:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPropToMakers",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2980:2:0"
                  },
                  "returnParameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "3004:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:9:0"
                  },
                  "scope": 356,
                  "src": "2956:93:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "3159:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "propToMakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3169:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 200,
                            "name": "newProp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "3184:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3169:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3169:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3208:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 198,
                        "id": 204,
                        "nodeType": "Return",
                        "src": "3201:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 195,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "3122:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3122:9:0"
                    }
                  ],
                  "name": "setPropToMakers",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "name": "newProp",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3080:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3080:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3079:17:0"
                  },
                  "returnParameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 197,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3149:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3149:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3148:6:0"
                  },
                  "scope": 356,
                  "src": "3055:164:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "3339:288:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 216,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "3370:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3370:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 218,
                                "name": "RubiconMarketAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "3384:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3370:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "63616c6c6572206973206e6f742052756269636f6e204d61726b6574",
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3418:30:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd0c58ceb0fa6333a0f4918fe3a2d6fa7895883baf6d98d7418f9e8dffcd3586",
                                "typeString": "literal_string \"caller is not Rubicon Market\""
                              },
                              "value": "caller is not Rubicon Market"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd0c58ceb0fa6333a0f4918fe3a2d6fa7895883baf6d98d7418f9e8dffcd3586",
                                "typeString": "literal_string \"caller is not Rubicon Market\""
                              }
                            ],
                            "id": 215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "3349:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3349:109:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 222,
                        "nodeType": "ExpressionStatement",
                        "src": "3349:109:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 226,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "3490:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 227,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "3501:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 224,
                                  "name": "RBCN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12,
                                  "src": "3476:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RBCNInterface_$390",
                                    "typeString": "contract RBCNInterface"
                                  }
                                },
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 389,
                                "src": "3476:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3476:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7472616e73666572206f66205242434e206661696c6564",
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3510:25:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab42ef61c1ec0be388cebef601d45b2ec0abac013f07370949845ebf90bc2632",
                                "typeString": "literal_string \"transfer of RBCN failed\""
                              },
                              "value": "transfer of RBCN failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab42ef61c1ec0be388cebef601d45b2ec0abac013f07370949845ebf90bc2632",
                                "typeString": "literal_string \"transfer of RBCN failed\""
                              }
                            ],
                            "id": 223,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "3468:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3468:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "3468:68:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 233,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "3564:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "3575:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 235,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1424,
                                "src": "3583:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3583:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 232,
                            "name": "Distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3551:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3551:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 238,
                        "nodeType": "EmitStatement",
                        "src": "3546:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3616:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 214,
                        "id": 240,
                        "nodeType": "Return",
                        "src": "3609:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 242,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "distributeGovernanceToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 208,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "3260:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3260:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 210,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "3279:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3279:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3259:35:0"
                  },
                  "returnParameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "3329:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3329:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3328:6:0"
                  },
                  "scope": 356,
                  "src": "3225:402:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 354,
                    "nodeType": "Block",
                    "src": "3833:1350:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 254,
                                "name": "timeOfLastRBCNDist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "3864:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 255,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "3885:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3885:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3864:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74696d654f664c6173745242434e44697374203c20626c6f636b2e74696d657374616d70",
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3914:38:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f8642215c9ef965da401387babd9c2216035958a78014329c0e463842dbfd2ac",
                                "typeString": "literal_string \"timeOfLastRBCNDist < block.timestamp\""
                              },
                              "value": "timeOfLastRBCNDist < block.timestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f8642215c9ef965da401387babd9c2216035958a78014329c0e463842dbfd2ac",
                                "typeString": "literal_string \"timeOfLastRBCNDist < block.timestamp\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "3843:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3843:119:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "3843:119:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 262,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 246,
                                "src": "3980:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3997:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3989:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3989:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3980:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74616b6572206973207a65726f2061646472657373",
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4001:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bc66002bb52398f22f53e9cf36d71272962118a86d84022a24efefb69296a71e",
                                "typeString": "literal_string \"taker is zero address\""
                              },
                              "value": "taker is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bc66002bb52398f22f53e9cf36d71272962118a86d84022a24efefb69296a71e",
                                "typeString": "literal_string \"taker is zero address\""
                              }
                            ],
                            "id": 261,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "3972:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3972:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 269,
                        "nodeType": "ExpressionStatement",
                        "src": "3972:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 271,
                                "name": "maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "4043:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4060:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4052:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4052:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4043:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b6572206973207a65726f2061646472657373",
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4064:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a91a889d468f8a495ead7e40de328df68847a29be9852db3c0ec3deac654f25",
                                "typeString": "literal_string \"maker is zero address\""
                              },
                              "value": "maker is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a91a889d468f8a495ead7e40de328df68847a29be9852db3c0ec3deac654f25",
                                "typeString": "literal_string \"maker is zero address\""
                              }
                            ],
                            "id": 270,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "4035:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4035:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "4035:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 280,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "4119:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4119:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 282,
                                    "name": "RBCN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "4138:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RBCNInterface_$390",
                                      "typeString": "contract RBCNInterface"
                                    }
                                  },
                                  "id": 283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getDistEndTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 380,
                                  "src": "4138:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4138:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4119:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e20446973747269627574696f6e206973206f766572",
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4173:27:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e134c7c708ee780d899187deaf2e00ceacd0684c9d80727f9aae621c4d70131",
                                "typeString": "literal_string \"RBCN Distribution is over\""
                              },
                              "value": "RBCN Distribution is over"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e134c7c708ee780d899187deaf2e00ceacd0684c9d80727f9aae621c4d70131",
                                "typeString": "literal_string \"RBCN Distribution is over\""
                              }
                            ],
                            "id": 279,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "4098:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4098:112:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "4098:112:0"
                      },
                      {
                        "assignments": [
                          290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 290,
                            "name": "delta",
                            "nodeType": "VariableDeclaration",
                            "scope": 354,
                            "src": "4286:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4286:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 296,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 292,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1424,
                                "src": "4306:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4306:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 294,
                              "name": "timeOfLastRBCNDist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "4323:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 291,
                            "name": "sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4302:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4302:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4286:56:0"
                      },
                      {
                        "assignments": [
                          298
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 298,
                            "name": "distQuanityMaker",
                            "nodeType": "VariableDeclaration",
                            "scope": 354,
                            "src": "4406:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 297,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4406:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 311,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 299,
                                      "name": "getPropToMakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 190,
                                      "src": "4446:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4446:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "id": 301,
                                        "name": "delta",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 290,
                                        "src": "4467:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 302,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4466:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4446:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 304,
                                      "name": "RBCN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12,
                                      "src": "4476:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RBCNInterface_$390",
                                        "typeString": "contract RBCNInterface"
                                      }
                                    },
                                    "id": 305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getDistRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 370,
                                    "src": "4476:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                                      "typeString": "function () pure external returns (uint256)"
                                    }
                                  },
                                  "id": 306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4476:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4446:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 308,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4445:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4498:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4445:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4406:95:0"
                      },
                      {
                        "assignments": [
                          313
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 313,
                            "name": "distQuanityTaker",
                            "nodeType": "VariableDeclaration",
                            "scope": 354,
                            "src": "4511:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 312,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4511:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 330,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 317,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 314,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4553:3:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 315,
                                                "name": "getPropToMakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 190,
                                                "src": "4559:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                  "typeString": "function () view returns (uint256)"
                                                }
                                              },
                                              "id": 316,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4559:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4553:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 318,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4552:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 319,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4551:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "id": 320,
                                        "name": "delta",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 290,
                                        "src": "4582:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 321,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4581:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4551:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 323,
                                      "name": "RBCN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12,
                                      "src": "4591:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RBCNInterface_$390",
                                        "typeString": "contract RBCNInterface"
                                      }
                                    },
                                    "id": 324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getDistRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 370,
                                    "src": "4591:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                                      "typeString": "function () pure external returns (uint256)"
                                    }
                                  },
                                  "id": 325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4591:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4551:58:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 327,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4550:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4613:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4550:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4511:105:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 333,
                                  "name": "maker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "4769:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 334,
                                  "name": "distQuanityMaker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "4776:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 332,
                                "name": "distributeGovernanceToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "4743:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) returns (bool)"
                                }
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4743:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "646973747269627574696f6e20746f206d616b6572206661696c6564",
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4807:30:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c26e1408e574d9b6aff65e99f69778131308f6bcceb0ad60380dc94cb6f007b",
                                "typeString": "literal_string \"distribution to maker failed\""
                              },
                              "value": "distribution to maker failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9c26e1408e574d9b6aff65e99f69778131308f6bcceb0ad60380dc94cb6f007b",
                                "typeString": "literal_string \"distribution to maker failed\""
                              }
                            ],
                            "id": 331,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "4722:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4722:125:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "4722:125:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 341,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 246,
                                  "src": "4946:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 342,
                                  "name": "distQuanityTaker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 313,
                                  "src": "4953:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 340,
                                "name": "distributeGovernanceToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "4920:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) returns (bool)"
                                }
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4920:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "646973747269627574696f6e20746f2074616b6572206661696c6564",
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4984:30:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_314989cd5c873e2e655c0b0d5666ae7b1d5dcfaf08c9dfec35b52fa5677d8583",
                                "typeString": "literal_string \"distribution to taker failed\""
                              },
                              "value": "distribution to taker failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_314989cd5c873e2e655c0b0d5666ae7b1d5dcfaf08c9dfec35b52fa5677d8583",
                                "typeString": "literal_string \"distribution to taker failed\""
                              }
                            ],
                            "id": 339,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "4899:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4899:125:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "4899:125:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 347,
                            "name": "timeOfLastRBCNDist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "5118:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 348,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1424,
                              "src": "5139:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5139:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5118:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 351,
                        "nodeType": "ExpressionStatement",
                        "src": "5118:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5172:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 252,
                        "id": 353,
                        "nodeType": "Return",
                        "src": "5165:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 249,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "onlyExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "3793:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3793:12:0"
                    }
                  ],
                  "name": "distributeToMakerAndTaker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 244,
                        "name": "maker",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "3738:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 246,
                        "name": "taker",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "3753:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3753:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3737:30:0"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "3823:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3823:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3822:6:0"
                  },
                  "scope": 356,
                  "src": "3703:1480:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 391,
              "src": "115:5070:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 390,
              "linearizedBaseContracts": [
                390
              ],
              "name": "RBCNInterface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "id": 365,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriorVotes",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "5240:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5240:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 360,
                        "name": "blockNumber",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "5257:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5257:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5239:38:0"
                  },
                  "returnParameters": {
                    "id": 364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 363,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "5325:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5325:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5324:8:0"
                  },
                  "scope": 390,
                  "src": "5217:116:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 370,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDistRate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 366,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5359:2:0"
                  },
                  "returnParameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 368,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "5385:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5385:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5384:9:0"
                  },
                  "scope": 390,
                  "src": "5339:55:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDistStartTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5425:2:0"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "5451:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5451:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5450:9:0"
                  },
                  "scope": 390,
                  "src": "5400:60:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 380,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDistEndTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5489:2:0"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "5515:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5515:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5514:9:0"
                  },
                  "scope": 390,
                  "src": "5466:58:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 389,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "5548:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5548:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "5557:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5557:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5547:18:0"
                  },
                  "returnParameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 387,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "5584:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5584:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5583:6:0"
                  },
                  "scope": 390,
                  "src": "5530:60:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 391,
              "src": "5187:405:0"
            }
          ],
          "src": "0:5593:0"
        },
        "id": 0
      },
      "contracts/RBCN.sol": {
        "ast": {
          "absolutePath": "contracts/RBCN.sol",
          "exportedSymbols": {
            "RBCN": [
              1419
            ]
          },
          "id": 1420,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 392,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "68:24:1"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1419,
              "linearizedBaseContracts": [
                1419
              ],
              "name": "RBCN",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 395,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "201:39:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "52756269636f6e",
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "231:9:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2b51cdc735b84c612b989d37014cd42ea4cba9f796dbbca0f5a3e281043f70eb",
                      "typeString": "literal_string \"Rubicon\""
                    },
                    "value": "Rubicon"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 398,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "298:38:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "5242434e",
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "330:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_18a71587780810957881bf03a2919fe642a4354adc6359f163bdeb8f010c6359",
                      "typeString": "literal_string \"RBCN\""
                    },
                    "value": "RBCN"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 401,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "396:35:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "429:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 404,
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "492:51:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "31303030303030303030653138",
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:13:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    },
                    "value": "1000000000e18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 406,
                  "name": "distStartTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "637:28:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 408,
                  "name": "distEndTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "741:26:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 410,
                  "name": "aqueductAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "843:30:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 413,
                  "name": "distRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "1320:54:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "34303434343039313939303438333734333036",
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1355:19:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4044409199048374306_by_1",
                      "typeString": "int_const 4044409199048374306"
                    },
                    "value": "4044409199048374306"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 419,
                  "name": "allowances",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "1526:66:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
                    "typeString": "mapping(address => mapping(address => uint96))"
                  },
                  "typeName": {
                    "id": 418,
                    "keyType": {
                      "id": 414,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1534:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1526:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
                      "typeString": "mapping(address => mapping(address => uint96))"
                    },
                    "valueType": {
                      "id": 417,
                      "keyType": {
                        "id": 415,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1553:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1545:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                        "typeString": "mapping(address => uint96)"
                      },
                      "valueType": {
                        "id": 416,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "1666:44:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                    "typeString": "mapping(address => uint96)"
                  },
                  "typeName": {
                    "id": 422,
                    "keyType": {
                      "id": 420,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1674:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1666:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                      "typeString": "mapping(address => uint96)"
                    },
                    "valueType": {
                      "id": 421,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "1685:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "name": "delegates",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "1768:44:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 426,
                    "keyType": {
                      "id": 424,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1776:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1768:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 425,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1787:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "canonicalName": "RBCN.Checkpoint",
                  "id": 432,
                  "members": [
                    {
                      "constant": false,
                      "id": 429,
                      "name": "fromBlock",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "1923:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1923:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 431,
                      "name": "votes",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "1949:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "1949:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Checkpoint",
                  "nodeType": "StructDefinition",
                  "scope": 1419,
                  "src": "1895:73:1",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "checkpoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "2047:68:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                    "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint))"
                  },
                  "typeName": {
                    "id": 437,
                    "keyType": {
                      "id": 433,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2055:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2047:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                      "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint))"
                    },
                    "valueType": {
                      "id": 436,
                      "keyType": {
                        "id": 434,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2074:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "2066:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                        "typeString": "mapping(uint32 => struct RBCN.Checkpoint)"
                      },
                      "valueType": {
                        "contractScope": null,
                        "id": 435,
                        "name": "Checkpoint",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 432,
                        "src": "2084:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$432_storage_ptr",
                          "typeString": "struct RBCN.Checkpoint"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 442,
                  "name": "numCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "2181:48:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                    "typeString": "mapping(address => uint32)"
                  },
                  "typeName": {
                    "id": 441,
                    "keyType": {
                      "id": 439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2189:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2181:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                      "typeString": "mapping(address => uint32)"
                    },
                    "valueType": {
                      "id": 440,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2200:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 447,
                  "name": "DOMAIN_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "2299:152:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2372:69:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                          "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                        },
                        "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                          "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                        }
                      ],
                      "id": 444,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "2349:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:102:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 452,
                  "name": "DELEGATION_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "2542:125:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2606:60:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                          "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                        },
                        "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                          "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                        }
                      ],
                      "id": 449,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "2596:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2596:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 456,
                  "name": "nonces",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "2745:41:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 455,
                    "keyType": {
                      "id": 453,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2753:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2745:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 454,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2764:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event thats emitted when an account changes its delegate",
                  "id": 464,
                  "name": "DelegateChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 458,
                        "indexed": true,
                        "name": "delegator",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2900:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2900:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "indexed": true,
                        "name": "fromDelegate",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2935:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 462,
                        "indexed": true,
                        "name": "toDelegate",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2973:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2973:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2890:115:1"
                  },
                  "src": "2869:137:1"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
                  "id": 472,
                  "name": "DelegateVotesChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 466,
                        "indexed": true,
                        "name": "delegate",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "3134:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3134:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 468,
                        "indexed": false,
                        "name": "previousBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "3168:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3168:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 470,
                        "indexed": false,
                        "name": "newBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "3201:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3201:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3124:101:1"
                  },
                  "src": "3098:128:1"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice The standard EIP-20 transfer event",
                  "id": 480,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 474,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "3298:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3298:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "indexed": true,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "3320:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "indexed": false,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "3340:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3297:58:1"
                  },
                  "src": "3283:73:1"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice The standard EIP-20 approval event",
                  "id": 488,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "indexed": true,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3437:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3437:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 484,
                        "indexed": true,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3468:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3468:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 486,
                        "indexed": false,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3501:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3501:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3427:94:1"
                  },
                  "src": "3413:109:1"
                },
                {
                  "body": {
                    "id": 548,
                    "nodeType": "Block",
                    "src": "3754:484:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 495,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "3792:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 497,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 496,
                              "name": "aqueduct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "3801:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3792:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "353130303030303030653138",
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3820:12:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_510000000000000000000000000_by_1",
                                  "typeString": "int_const 510000000000000000000000000"
                                },
                                "value": "510000000e18"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_510000000000000000000000000_by_1",
                                  "typeString": "int_const 510000000000000000000000000"
                                }
                              ],
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3813:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": "uint96"
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3813:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "3792:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "3792:41:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3865:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3857:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3857:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 507,
                              "name": "aqueduct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "3869:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030303030303030653138",
                                  "id": 509,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3887:13:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000000000000"
                                  },
                                  "value": "1000000000e18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000000000000"
                                  }
                                ],
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3879:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3879:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 503,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "3848:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3848:54:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 512,
                        "nodeType": "EmitStatement",
                        "src": "3843:59:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "aqueductAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "3912:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 514,
                            "name": "aqueduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "3930:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3912:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 516,
                        "nodeType": "ExpressionStatement",
                        "src": "3912:26:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 517,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "3997:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 519,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 518,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "4006:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3997:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "343930303030303030653138",
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4022:12:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_490000000000000000000000000_by_1",
                                  "typeString": "int_const 490000000000000000000000000"
                                },
                                "value": "490000000e18"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_490000000000000000000000000_by_1",
                                  "typeString": "int_const 490000000000000000000000000"
                                }
                              ],
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4015:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": "uint96"
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4015:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "3997:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "3997:38:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4067:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4059:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4059:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 529,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "4071:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "343930303030303030653138",
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4085:12:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_490000000000000000000000000_by_1",
                                    "typeString": "int_const 490000000000000000000000000"
                                  },
                                  "value": "490000000e18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_490000000000000000000000000_by_1",
                                    "typeString": "int_const 490000000000000000000000000"
                                  }
                                ],
                                "id": 530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4078:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": "uint96"
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4078:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 525,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "4050:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4050:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 534,
                        "nodeType": "EmitStatement",
                        "src": "4045:54:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 535,
                            "name": "distStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "4168:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 536,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "4184:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4168:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 538,
                        "nodeType": "ExpressionStatement",
                        "src": "4168:19:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "distEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "4197:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 540,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1436,
                              "src": "4211:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_126144000_by_1",
                                    "typeString": "int_const 126144000"
                                  },
                                  "id": 543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "34",
                                    "id": 541,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4218:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "333635",
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4222:8:1",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_31536000_by_1",
                                      "typeString": "int_const 31536000"
                                    },
                                    "value": "365"
                                  },
                                  "src": "4218:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_126144000_by_1",
                                    "typeString": "int_const 126144000"
                                  }
                                }
                              ],
                              "id": 544,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4217:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_126144000_by_1",
                                "typeString": "int_const 126144000"
                              }
                            },
                            "src": "4211:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4197:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 547,
                        "nodeType": "ExpressionStatement",
                        "src": "4197:34:1"
                      }
                    ]
                  },
                  "documentation": "@notice Construct a new RBCN token\n@param aqueduct The holder of all community tokens\n@param admin The recipient of non-community tokens",
                  "id": 549,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "name": "aqueduct",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "3714:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3714:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "name": "admin",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "3732:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3732:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3713:33:1"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3754:0:1"
                  },
                  "scope": 1419,
                  "src": "3702:536:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 564,
                    "nodeType": "Block",
                    "src": "4647:52:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 558,
                              "name": "allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "4664:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
                                "typeString": "mapping(address => mapping(address => uint96))"
                              }
                            },
                            "id": 560,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "4675:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4664:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                              "typeString": "mapping(address => uint96)"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 561,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "4684:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4664:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 557,
                        "id": 563,
                        "nodeType": "Return",
                        "src": "4657:35:1"
                      }
                    ]
                  },
                  "documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param account The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
                  "id": 565,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 551,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "4553:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4553:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "4570:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4570:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4552:34:1"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 556,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "4634:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4634:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4633:9:1"
                  },
                  "scope": 1419,
                  "src": "4534:165:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "5264:336:1",
                    "statements": [
                      {
                        "assignments": [
                          575
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 575,
                            "name": "amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 618,
                            "src": "5274:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 574,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "5274:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 576,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5274:13:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 577,
                            "name": "rawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 569,
                            "src": "5301:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "5322:2:1",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5323:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              ],
                              "id": 578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5314:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5314:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5301:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 598,
                          "nodeType": "Block",
                          "src": "5377:92:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 591,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 575,
                                  "src": "5391:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 593,
                                      "name": "rawAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 569,
                                      "src": "5407:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "5242434e3a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
                                      "id": 594,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5418:39:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_bf9c71b2d7d0bdeef0fd07ef28689ed431b24d71a424a7efa7bbaeca2e4ade72",
                                        "typeString": "literal_string \"RBCN::approve: amount exceeds 96 bits\""
                                      },
                                      "value": "RBCN::approve: amount exceeds 96 bits"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_bf9c71b2d7d0bdeef0fd07ef28689ed431b24d71a424a7efa7bbaeca2e4ade72",
                                        "typeString": "literal_string \"RBCN::approve: amount exceeds 96 bits\""
                                      }
                                    ],
                                    "id": 592,
                                    "name": "safe96",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1356,
                                    "src": "5400:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
                                      "typeString": "function (uint256,string memory) pure returns (uint96)"
                                    }
                                  },
                                  "id": 595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5400:58:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "5391:67:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 597,
                              "nodeType": "ExpressionStatement",
                              "src": "5391:67:1"
                            }
                          ]
                        },
                        "id": 599,
                        "nodeType": "IfStatement",
                        "src": "5297:172:1",
                        "trueBody": {
                          "id": 590,
                          "nodeType": "Block",
                          "src": "5327:44:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 583,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 575,
                                  "src": "5341:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "-",
                                      "prefix": true,
                                      "src": "5357:2:1",
                                      "subExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 585,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5358:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_minus_1_by_1",
                                        "typeString": "int_const -1"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_minus_1_by_1",
                                        "typeString": "int_const -1"
                                      }
                                    ],
                                    "id": 584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5350:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint96_$",
                                      "typeString": "type(uint96)"
                                    },
                                    "typeName": "uint96"
                                  },
                                  "id": 587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5350:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "5341:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 589,
                              "nodeType": "ExpressionStatement",
                              "src": "5341:19:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 600,
                                "name": "allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "5479:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
                                  "typeString": "mapping(address => mapping(address => uint96))"
                                }
                              },
                              "id": 604,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 601,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "5490:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5490:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5479:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 605,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 603,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "5502:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5479:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "5513:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "5479:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "5479:40:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 610,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1434,
                                "src": "5544:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5544:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 612,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "5556:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 613,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "5565:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 609,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "5535:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5535:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 615,
                        "nodeType": "EmitStatement",
                        "src": "5530:42:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5589:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 573,
                        "id": 617,
                        "nodeType": "Return",
                        "src": "5582:11:1"
                      }
                    ]
                  },
                  "documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n@param spender The address of the account which may transfer tokens\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5184:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5184:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "name": "rawAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5201:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5201:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5183:36:1"
                  },
                  "returnParameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5254:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5254:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5253:6:1"
                  },
                  "scope": 1419,
                  "src": "5167:433:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 630,
                    "nodeType": "Block",
                    "src": "5864:41:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 626,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "5881:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                              "typeString": "mapping(address => uint96)"
                            }
                          },
                          "id": 628,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 627,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 621,
                            "src": "5890:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5881:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 625,
                        "id": 629,
                        "nodeType": "Return",
                        "src": "5874:24:1"
                      }
                    ]
                  },
                  "documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
                  "id": 631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "5815:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5815:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5814:17:1"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "5855:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5855:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5854:9:1"
                  },
                  "scope": 1419,
                  "src": "5796:109:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "6235:175:1",
                    "statements": [
                      {
                        "assignments": [
                          641
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 641,
                            "name": "amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 656,
                            "src": "6245:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 640,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "6245:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 646,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 643,
                              "name": "rawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "6280:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6291:40:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_65023eaf8d558dbaddde53090047ca4e3dd314fcfe0d59829b06d041736ea0e7",
                                "typeString": "literal_string \"RBCN::transfer: amount exceeds 96 bits\""
                              },
                              "value": "RBCN::transfer: amount exceeds 96 bits"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_65023eaf8d558dbaddde53090047ca4e3dd314fcfe0d59829b06d041736ea0e7",
                                "typeString": "literal_string \"RBCN::transfer: amount exceeds 96 bits\""
                              }
                            ],
                            "id": 642,
                            "name": "safe96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "6273:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
                              "typeString": "function (uint256,string memory) pure returns (uint96)"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6273:59:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6245:87:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 648,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1434,
                                "src": "6358:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6358:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 650,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "6370:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 651,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 641,
                              "src": "6375:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 647,
                            "name": "_transferTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "6342:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
                              "typeString": "function (address,address,uint96)"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6342:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 653,
                        "nodeType": "ExpressionStatement",
                        "src": "6342:40:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6399:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 639,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "6392:11:1"
                      }
                    ]
                  },
                  "documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 633,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "6179:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6179:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 635,
                        "name": "rawAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "6192:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6192:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6178:32:1"
                  },
                  "returnParameters": {
                    "id": 639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 638,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "6229:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6229:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6228:6:1"
                  },
                  "scope": 1419,
                  "src": "6161:249:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 730,
                    "nodeType": "Block",
                    "src": "6832:676:1",
                    "statements": [
                      {
                        "assignments": [
                          669
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 669,
                            "name": "spender",
                            "nodeType": "VariableDeclaration",
                            "scope": 730,
                            "src": "6842:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 668,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6842:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 672,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "6860:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6860:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6842:28:1"
                      },
                      {
                        "assignments": [
                          674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 674,
                            "name": "spenderAllowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 730,
                            "src": "6880:23:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 673,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "6880:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 680,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 675,
                              "name": "allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "6906:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
                                "typeString": "mapping(address => mapping(address => uint96))"
                              }
                            },
                            "id": 677,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "6917:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6906:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                              "typeString": "mapping(address => uint96)"
                            }
                          },
                          "id": 679,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 678,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "6922:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6906:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6880:50:1"
                      },
                      {
                        "assignments": [
                          682
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 682,
                            "name": "amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 730,
                            "src": "6940:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 681,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "6940:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 687,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 684,
                              "name": "rawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "6975:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6986:39:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf9c71b2d7d0bdeef0fd07ef28689ed431b24d71a424a7efa7bbaeca2e4ade72",
                                "typeString": "literal_string \"RBCN::approve: amount exceeds 96 bits\""
                              },
                              "value": "RBCN::approve: amount exceeds 96 bits"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf9c71b2d7d0bdeef0fd07ef28689ed431b24d71a424a7efa7bbaeca2e4ade72",
                                "typeString": "literal_string \"RBCN::approve: amount exceeds 96 bits\""
                              }
                            ],
                            "id": 683,
                            "name": "safe96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "6968:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
                              "typeString": "function (uint256,string memory) pure returns (uint96)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6968:58:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6940:86:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 688,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "7041:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 689,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "7052:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7041:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "spenderAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "7059:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "7086:2:1",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 693,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7087:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_minus_1_by_1",
                                    "typeString": "int_const -1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_minus_1_by_1",
                                    "typeString": "int_const -1"
                                  }
                                ],
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7079:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": "uint96"
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7079:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "7059:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7041:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 721,
                        "nodeType": "IfStatement",
                        "src": "7037:400:1",
                        "trueBody": {
                          "id": 720,
                          "nodeType": "Block",
                          "src": "7091:346:1",
                          "statements": [
                            {
                              "assignments": [
                                699
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 699,
                                  "name": "newAllowance",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 720,
                                  "src": "7105:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  },
                                  "typeName": {
                                    "id": 698,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7105:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 705,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 701,
                                    "name": "spenderAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 674,
                                    "src": "7170:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 702,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "7208:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "5242434e3a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
                                    "id": 703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7236:63:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5cf43b6e5a50c3cf0e158e8688fa2599aac4d94a10ded0de08174d3f7889ee05",
                                      "typeString": "literal_string \"RBCN::transferFrom: transfer amount exceeds spender allowance\""
                                    },
                                    "value": "RBCN::transferFrom: transfer amount exceeds spender allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    },
                                    {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5cf43b6e5a50c3cf0e158e8688fa2599aac4d94a10ded0de08174d3f7889ee05",
                                      "typeString": "literal_string \"RBCN::transferFrom: transfer amount exceeds spender allowance\""
                                    }
                                  ],
                                  "id": 700,
                                  "name": "sub96",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "7143:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
                                    "typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
                                  }
                                },
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7143:174:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7105:212:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 706,
                                      "name": "allowances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 419,
                                      "src": "7331:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
                                        "typeString": "mapping(address => mapping(address => uint96))"
                                      }
                                    },
                                    "id": 709,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 707,
                                      "name": "src",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 659,
                                      "src": "7342:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7331:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                      "typeString": "mapping(address => uint96)"
                                    }
                                  },
                                  "id": 710,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 708,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 669,
                                    "src": "7347:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7331:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 711,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "7358:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "7331:39:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 713,
                              "nodeType": "ExpressionStatement",
                              "src": "7331:39:1"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 715,
                                    "name": "src",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 659,
                                    "src": "7399:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 716,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 669,
                                    "src": "7404:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 717,
                                    "name": "newAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 699,
                                    "src": "7413:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  ],
                                  "id": 714,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 488,
                                  "src": "7390:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7390:36:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 719,
                              "nodeType": "EmitStatement",
                              "src": "7385:41:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 723,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "7463:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 724,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "7468:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 725,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "7473:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 722,
                            "name": "_transferTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "7447:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
                              "typeString": "function (address,address,uint96)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7447:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 727,
                        "nodeType": "ExpressionStatement",
                        "src": "7447:33:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7497:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 667,
                        "id": 729,
                        "nodeType": "Return",
                        "src": "7490:11:1"
                      }
                    ]
                  },
                  "documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param src The address of the source account\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
                  "id": 731,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "name": "src",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "6742:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6742:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "6763:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6763:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "name": "rawAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "6784:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6784:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6732:75:1"
                  },
                  "returnParameters": {
                    "id": 667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "6826:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6826:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6825:6:1"
                  },
                  "scope": 1419,
                  "src": "6711:797:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 742,
                    "nodeType": "Block",
                    "src": "7694:56:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 737,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1434,
                                "src": "7721:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7721:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 739,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "7733:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 736,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "7711:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7711:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 735,
                        "id": 741,
                        "nodeType": "Return",
                        "src": "7704:39:1"
                      }
                    ]
                  },
                  "documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
                  "id": 743,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delegate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 733,
                        "name": "delegatee",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "7668:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7668:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7667:19:1"
                  },
                  "returnParameters": {
                    "id": 735,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7694:0:1"
                  },
                  "scope": 1419,
                  "src": "7650:100:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "8338:967:1",
                    "statements": [
                      {
                        "assignments": [
                          759
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 759,
                            "name": "domainSeparator",
                            "nodeType": "VariableDeclaration",
                            "scope": 840,
                            "src": "8348:23:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 758,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8348:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 776,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 763,
                                  "name": "DOMAIN_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "8445:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 766,
                                          "name": "name",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 395,
                                          "src": "8498:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 765,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8492:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": "bytes"
                                      },
                                      "id": 767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8492:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 764,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1428,
                                    "src": "8482:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8482:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 769,
                                    "name": "getChainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1418,
                                    "src": "8526:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                      "typeString": "function () pure returns (uint256)"
                                    }
                                  },
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8526:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 772,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1448,
                                      "src": "8568:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RBCN_$1419",
                                        "typeString": "contract RBCN"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_RBCN_$1419",
                                        "typeString": "contract RBCN"
                                      }
                                    ],
                                    "id": 771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8560:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8560:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 761,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "8413:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8413:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8413:178:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 760,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1428,
                            "src": "8386:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8386:219:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8348:257:1"
                      },
                      {
                        "assignments": [
                          778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 778,
                            "name": "structHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 840,
                            "src": "8615:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 777,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8615:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 788,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 782,
                                  "name": "DELEGATION_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "8686:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 783,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "8707:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 784,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 747,
                                  "src": "8718:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 785,
                                  "name": "expiry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "8725:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 780,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "8675:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8675:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8675:57:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 779,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1428,
                            "src": "8648:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8648:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8615:131:1"
                      },
                      {
                        "assignments": [
                          790
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 790,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 840,
                            "src": "8756:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 789,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8756:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 799,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "1901",
                                  "id": 794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8829:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string \"\u0019\u0001\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 795,
                                  "name": "domainSeparator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 759,
                                  "src": "8841:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 796,
                                  "name": "structHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 778,
                                  "src": "8858:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string \"\u0019\u0001\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 792,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "8812:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8812:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8812:57:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 791,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1428,
                            "src": "8785:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8785:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8756:127:1"
                      },
                      {
                        "assignments": [
                          801
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 801,
                            "name": "signatory",
                            "nodeType": "VariableDeclaration",
                            "scope": 840,
                            "src": "8893:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 800,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8893:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 808,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 803,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 790,
                              "src": "8923:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 804,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 751,
                              "src": "8931:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 805,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "8934:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 806,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "8937:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 802,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1426,
                            "src": "8913:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8913:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8893:46:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 810,
                                "name": "signatory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 801,
                                "src": "8970:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 812,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8991:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8983:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8983:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "8970:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9007:40:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9a1324251eca36b3b6410f4db2a598587b7d12dd43a283878158c66b24c4d9e7",
                                "typeString": "literal_string \"RBCN::delegateBySig: invalid signature\""
                              },
                              "value": "RBCN::delegateBySig: invalid signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9a1324251eca36b3b6410f4db2a598587b7d12dd43a283878158c66b24c4d9e7",
                                "typeString": "literal_string \"RBCN::delegateBySig: invalid signature\""
                              }
                            ],
                            "id": 809,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "8949:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8949:108:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 817,
                        "nodeType": "ExpressionStatement",
                        "src": "8949:108:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 819,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 747,
                                "src": "9088:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "9097:19:1",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 820,
                                    "name": "nonces",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 456,
                                    "src": "9097:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 822,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 821,
                                    "name": "signatory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "9104:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9097:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9088:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9130:36:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5789ea45e0799d184c699a26f24965ff61e4312e31428e237554ebb971d66004",
                                "typeString": "literal_string \"RBCN::delegateBySig: invalid nonce\""
                              },
                              "value": "RBCN::delegateBySig: invalid nonce"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5789ea45e0799d184c699a26f24965ff61e4312e31428e237554ebb971d66004",
                                "typeString": "literal_string \"RBCN::delegateBySig: invalid nonce\""
                              }
                            ],
                            "id": 818,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "9067:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9067:109:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "9067:109:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 829,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "9194:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 830,
                                "name": "expiry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "9201:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9194:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a64656c656761746542795369673a207369676e61747572652065787069726564",
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9209:40:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bc1d39020fe3dd1511ad7dc5d8da17f1795f8afd2b6f5183f552628ad5e1541c",
                                "typeString": "literal_string \"RBCN::delegateBySig: signature expired\""
                              },
                              "value": "RBCN::delegateBySig: signature expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bc1d39020fe3dd1511ad7dc5d8da17f1795f8afd2b6f5183f552628ad5e1541c",
                                "typeString": "literal_string \"RBCN::delegateBySig: signature expired\""
                              }
                            ],
                            "id": 828,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "9186:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9186:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "9186:64:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 836,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "9277:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 837,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "9288:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 835,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "9267:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9267:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 757,
                        "id": 839,
                        "nodeType": "Return",
                        "src": "9260:38:1"
                      }
                    ]
                  },
                  "documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
                  "id": 841,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delegateBySig",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 745,
                        "name": "delegatee",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "8205:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8205:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 747,
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "8232:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8232:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 749,
                        "name": "expiry",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "8255:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8255:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "8279:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "8279:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 753,
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "8296:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8296:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "8315:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8315:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8195:135:1"
                  },
                  "returnParameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8338:0:1"
                  },
                  "scope": 1419,
                  "src": "8173:1132:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "9572:158:1",
                    "statements": [
                      {
                        "assignments": [
                          849
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 849,
                            "name": "nCheckpoints",
                            "nodeType": "VariableDeclaration",
                            "scope": 868,
                            "src": "9582:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 848,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9582:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 853,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 850,
                            "name": "numCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "9604:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                              "typeString": "mapping(address => uint32)"
                            }
                          },
                          "id": 852,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 851,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "9619:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9604:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9582:45:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 854,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "9656:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9671:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9656:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9722:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9656:67:1",
                          "trueExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 857,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "9675:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                  }
                                },
                                "id": 859,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 858,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 843,
                                  "src": "9687:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9675:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                  "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                }
                              },
                              "id": 863,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 860,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 849,
                                  "src": "9696:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 861,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9711:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9696:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9675:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                "typeString": "struct RBCN.Checkpoint storage ref"
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 431,
                            "src": "9675:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 847,
                        "id": 867,
                        "nodeType": "Return",
                        "src": "9637:86:1"
                      }
                    ]
                  },
                  "documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
                  "id": 869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentVotes",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 843,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "9524:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9524:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9523:17:1"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "9564:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "9564:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9563:8:1"
                  },
                  "scope": 1419,
                  "src": "9499:231:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "10270:1133:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 879,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 873,
                                "src": "10301:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 880,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "10315:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10315:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10301:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
                              "id": 883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10341:41:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6520cb76048e393fc6dcbc04fc49ba8a0e53872c568e43769091ec37db414ca3",
                                "typeString": "literal_string \"RBCN::getPriorVotes: not yet determined\""
                              },
                              "value": "RBCN::getPriorVotes: not yet determined"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6520cb76048e393fc6dcbc04fc49ba8a0e53872c568e43769091ec37db414ca3",
                                "typeString": "literal_string \"RBCN::getPriorVotes: not yet determined\""
                              }
                            ],
                            "id": 878,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "10280:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10280:112:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 885,
                        "nodeType": "ExpressionStatement",
                        "src": "10280:112:1"
                      },
                      {
                        "assignments": [
                          887
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 887,
                            "name": "nCheckpoints",
                            "nodeType": "VariableDeclaration",
                            "scope": 999,
                            "src": "10403:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 886,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10403:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 891,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 888,
                            "name": "numCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "10425:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                              "typeString": "mapping(address => uint32)"
                            }
                          },
                          "id": 890,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 889,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "10440:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10425:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10403:45:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 892,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "10462:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10478:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10462:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 898,
                        "nodeType": "IfStatement",
                        "src": "10458:56:1",
                        "trueBody": {
                          "id": 897,
                          "nodeType": "Block",
                          "src": "10481:33:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10502:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 877,
                              "id": 896,
                              "nodeType": "Return",
                              "src": "10495:8:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 899,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "10571:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                  }
                                },
                                "id": 901,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 900,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 871,
                                  "src": "10583:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10571:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                  "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                }
                              },
                              "id": 905,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 902,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "10592:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10607:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10592:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10571:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                "typeString": "struct RBCN.Checkpoint storage ref"
                              }
                            },
                            "id": 906,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "10571:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 907,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "10623:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10571:63:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 919,
                        "nodeType": "IfStatement",
                        "src": "10567:145:1",
                        "trueBody": {
                          "id": 918,
                          "nodeType": "Block",
                          "src": "10636:76:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 909,
                                      "name": "checkpoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 438,
                                      "src": "10657:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                      }
                                    },
                                    "id": 911,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 910,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 871,
                                      "src": "10669:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10657:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                      "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                    }
                                  },
                                  "id": 915,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 914,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 912,
                                      "name": "nCheckpoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 887,
                                      "src": "10678:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 913,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10693:1:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10678:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10657:38:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                    "typeString": "struct RBCN.Checkpoint storage ref"
                                  }
                                },
                                "id": 916,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 431,
                                "src": "10657:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "functionReturnParameters": 877,
                              "id": 917,
                              "nodeType": "Return",
                              "src": "10650:51:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 920,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "10770:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                  }
                                },
                                "id": 922,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 921,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 871,
                                  "src": "10782:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10770:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                  "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                }
                              },
                              "id": 924,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10791:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10770:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                "typeString": "struct RBCN.Checkpoint storage ref"
                              }
                            },
                            "id": 925,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "10770:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 926,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "10806:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10770:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 931,
                        "nodeType": "IfStatement",
                        "src": "10766:86:1",
                        "trueBody": {
                          "id": 930,
                          "nodeType": "Block",
                          "src": "10819:33:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10840:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 877,
                              "id": 929,
                              "nodeType": "Return",
                              "src": "10833:8:1"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          933
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 933,
                            "name": "lower",
                            "nodeType": "VariableDeclaration",
                            "scope": 999,
                            "src": "10862:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 932,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10862:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 935,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10877:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10862:16:1"
                      },
                      {
                        "assignments": [
                          937
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 937,
                            "name": "upper",
                            "nodeType": "VariableDeclaration",
                            "scope": 999,
                            "src": "10888:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 936,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10888:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 941,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 938,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "10903:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10918:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10903:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10888:31:1"
                      },
                      {
                        "body": {
                          "id": 990,
                          "nodeType": "Block",
                          "src": "10951:396:1",
                          "statements": [
                            {
                              "assignments": [
                                946
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 946,
                                  "name": "center",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 990,
                                  "src": "10965:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 945,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10965:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 955,
                              "initialValue": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 947,
                                  "name": "upper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 937,
                                  "src": "10981:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "id": 950,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 948,
                                          "name": "upper",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 937,
                                          "src": "10990:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 949,
                                          "name": "lower",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 933,
                                          "src": "10998:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "src": "10990:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "id": 951,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "10989:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "32",
                                    "id": 952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11007:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "10989:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "10981:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10965:43:1"
                            },
                            {
                              "assignments": [
                                957
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 957,
                                  "name": "cp",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 990,
                                  "src": "11049:20:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$432_memory_ptr",
                                    "typeString": "struct RBCN.Checkpoint"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 956,
                                    "name": "Checkpoint",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 432,
                                    "src": "11049:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$432_storage_ptr",
                                      "typeString": "struct RBCN.Checkpoint"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 963,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 958,
                                    "name": "checkpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 438,
                                    "src": "11072:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                    }
                                  },
                                  "id": 960,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 959,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 871,
                                    "src": "11084:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11072:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                    "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                  }
                                },
                                "id": 962,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 961,
                                  "name": "center",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "11093:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11072:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                  "typeString": "struct RBCN.Checkpoint storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11049:51:1"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 964,
                                    "name": "cp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 957,
                                    "src": "11118:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$432_memory_ptr",
                                      "typeString": "struct RBCN.Checkpoint memory"
                                    }
                                  },
                                  "id": 965,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fromBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 429,
                                  "src": "11118:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 966,
                                  "name": "blockNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 873,
                                  "src": "11134:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11118:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 975,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 972,
                                      "name": "cp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 957,
                                      "src": "11205:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Checkpoint_$432_memory_ptr",
                                        "typeString": "struct RBCN.Checkpoint memory"
                                      }
                                    },
                                    "id": 973,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fromBlock",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 429,
                                    "src": "11205:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 974,
                                    "name": "blockNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 873,
                                    "src": "11220:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11205:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 987,
                                  "nodeType": "Block",
                                  "src": "11286:51:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 985,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "id": 981,
                                          "name": "upper",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 937,
                                          "src": "11304:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          },
                                          "id": 984,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "id": 982,
                                            "name": "center",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 946,
                                            "src": "11312:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 983,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11321:1:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "11312:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "src": "11304:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "id": 986,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11304:18:1"
                                    }
                                  ]
                                },
                                "id": 988,
                                "nodeType": "IfStatement",
                                "src": "11201:136:1",
                                "trueBody": {
                                  "id": 980,
                                  "nodeType": "Block",
                                  "src": "11233:47:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 978,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "id": 976,
                                          "name": "lower",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 933,
                                          "src": "11251:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "id": 977,
                                          "name": "center",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 946,
                                          "src": "11259:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "src": "11251:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "id": 979,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11251:14:1"
                                    }
                                  ]
                                }
                              },
                              "id": 989,
                              "nodeType": "IfStatement",
                              "src": "11114:223:1",
                              "trueBody": {
                                "id": 971,
                                "nodeType": "Block",
                                "src": "11147:48:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 968,
                                        "name": "cp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 957,
                                        "src": "11172:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Checkpoint_$432_memory_ptr",
                                          "typeString": "struct RBCN.Checkpoint memory"
                                        }
                                      },
                                      "id": 969,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "votes",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 431,
                                      "src": "11172:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    },
                                    "functionReturnParameters": 877,
                                    "id": 970,
                                    "nodeType": "Return",
                                    "src": "11165:15:1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 942,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "10936:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 943,
                            "name": "lower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 933,
                            "src": "10944:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10936:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 991,
                        "nodeType": "WhileStatement",
                        "src": "10929:418:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 992,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 438,
                                "src": "11363:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                }
                              },
                              "id": 994,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 993,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 871,
                                "src": "11375:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11363:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                              }
                            },
                            "id": 996,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 995,
                              "name": "lower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 933,
                              "src": "11384:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11363:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                              "typeString": "struct RBCN.Checkpoint storage ref"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 431,
                          "src": "11363:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 877,
                        "id": 998,
                        "nodeType": "Return",
                        "src": "11356:40:1"
                      }
                    ]
                  },
                  "documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
                  "id": 1000,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriorVotes",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 874,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 871,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "10175:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10175:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 873,
                        "name": "blockNumber",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "10192:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10192:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10174:38:1"
                  },
                  "returnParameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 876,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1000,
                        "src": "10258:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "10258:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10257:8:1"
                  },
                  "scope": 1419,
                  "src": "10152:1251:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1007,
                    "nodeType": "Block",
                    "src": "11469:37:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1005,
                          "name": "distStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "11486:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1004,
                        "id": 1006,
                        "nodeType": "Return",
                        "src": "11479:20:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1008,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDistStartTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1001,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11434:2:1"
                  },
                  "returnParameters": {
                    "id": 1004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1003,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1008,
                        "src": "11460:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11460:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11459:9:1"
                  },
                  "scope": 1419,
                  "src": "11409:97:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1015,
                    "nodeType": "Block",
                    "src": "11570:35:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1013,
                          "name": "distEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "11587:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1012,
                        "id": 1014,
                        "nodeType": "Return",
                        "src": "11580:18:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1016,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDistEndTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1009,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11535:2:1"
                  },
                  "returnParameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1011,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "11561:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11561:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11560:9:1"
                  },
                  "scope": 1419,
                  "src": "11512:93:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "11666:32:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1021,
                          "name": "distRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "11683:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1020,
                        "id": 1022,
                        "nodeType": "Return",
                        "src": "11676:15:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDistRate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1017,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11631:2:1"
                  },
                  "returnParameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1019,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "11657:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11657:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11656:9:1"
                  },
                  "scope": 1419,
                  "src": "11611:87:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1061,
                    "nodeType": "Block",
                    "src": "11770:301:1",
                    "statements": [
                      {
                        "assignments": [
                          1032
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1032,
                            "name": "currentDelegate",
                            "nodeType": "VariableDeclaration",
                            "scope": 1061,
                            "src": "11780:23:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1031,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11780:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1036,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1033,
                            "name": "delegates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "11806:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1035,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1034,
                            "name": "delegator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "11816:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11806:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11780:46:1"
                      },
                      {
                        "assignments": [
                          1038
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1038,
                            "name": "delegatorBalance",
                            "nodeType": "VariableDeclaration",
                            "scope": 1061,
                            "src": "11836:23:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 1037,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "11836:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1042,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1039,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "11862:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                              "typeString": "mapping(address => uint96)"
                            }
                          },
                          "id": 1041,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1040,
                            "name": "delegator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "11871:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11862:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11836:45:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1043,
                              "name": "delegates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "11891:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1045,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1044,
                              "name": "delegator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "11901:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11891:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1046,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1028,
                            "src": "11914:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11891:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1048,
                        "nodeType": "ExpressionStatement",
                        "src": "11891:32:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1050,
                              "name": "delegator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "11955:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1051,
                              "name": "currentDelegate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1032,
                              "src": "11966:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1052,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "11983:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1049,
                            "name": "DelegateChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "11939:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11939:54:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1054,
                        "nodeType": "EmitStatement",
                        "src": "11934:59:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1056,
                              "name": "currentDelegate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1032,
                              "src": "12019:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1057,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "12036:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1058,
                              "name": "delegatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1038,
                              "src": "12047:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1055,
                            "name": "_moveDelegates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "12004:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
                              "typeString": "function (address,address,uint96)"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12004:60:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "12004:60:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1062,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_delegate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1026,
                        "name": "delegator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1062,
                        "src": "11723:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11723:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1028,
                        "name": "delegatee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1062,
                        "src": "11742:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11742:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11722:38:1"
                  },
                  "returnParameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11770:0:1"
                  },
                  "scope": 1419,
                  "src": "11704:367:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1129,
                    "nodeType": "Block",
                    "src": "12182:690:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1072,
                                "name": "src",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1064,
                                "src": "12213:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12228:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12220:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12220:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "12213:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12244:62:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca7e8e77e1f52d561dd7110eeb2c8aabf19a2e1e9da759e90ece24cea2a980d4",
                                "typeString": "literal_string \"RBCN::_transferTokens: cannot transfer from the zero address\""
                              },
                              "value": "RBCN::_transferTokens: cannot transfer from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca7e8e77e1f52d561dd7110eeb2c8aabf19a2e1e9da759e90ece24cea2a980d4",
                                "typeString": "literal_string \"RBCN::_transferTokens: cannot transfer from the zero address\""
                              }
                            ],
                            "id": 1071,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "12192:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12192:124:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1079,
                        "nodeType": "ExpressionStatement",
                        "src": "12192:124:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1081,
                                "name": "dst",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1066,
                                "src": "12347:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1083,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12362:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1082,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12354:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12354:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "12347:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12378:60:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa2787f7c54f3d1934d736f9081e59fc4b42dcc6d52d1acc357c22e545f1a59a",
                                "typeString": "literal_string \"RBCN::_transferTokens: cannot transfer to the zero address\""
                              },
                              "value": "RBCN::_transferTokens: cannot transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fa2787f7c54f3d1934d736f9081e59fc4b42dcc6d52d1acc357c22e545f1a59a",
                                "typeString": "literal_string \"RBCN::_transferTokens: cannot transfer to the zero address\""
                              }
                            ],
                            "id": 1080,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "12326:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12326:122:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1088,
                        "nodeType": "ExpressionStatement",
                        "src": "12326:122:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1089,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "12459:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 1091,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1090,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "12468:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12459:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1093,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "12494:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                    "typeString": "mapping(address => uint96)"
                                  }
                                },
                                "id": 1095,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1094,
                                  "name": "src",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1064,
                                  "src": "12503:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12494:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1096,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1068,
                                "src": "12521:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "5242434e3a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12541:56:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_624b464e5e35b80ddaea27843095b427c2d330e223b6dd720fc5e293250c01e8",
                                  "typeString": "literal_string \"RBCN::_transferTokens: transfer amount exceeds balance\""
                                },
                                "value": "RBCN::_transferTokens: transfer amount exceeds balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_624b464e5e35b80ddaea27843095b427c2d330e223b6dd720fc5e293250c01e8",
                                  "typeString": "literal_string \"RBCN::_transferTokens: transfer amount exceeds balance\""
                                }
                              ],
                              "id": 1092,
                              "name": "sub96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1406,
                              "src": "12475:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
                                "typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
                              }
                            },
                            "id": 1098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12475:132:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "12459:148:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1100,
                        "nodeType": "ExpressionStatement",
                        "src": "12459:148:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1101,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "12617:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 1103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1102,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1066,
                              "src": "12626:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12617:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1105,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "12652:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                    "typeString": "mapping(address => uint96)"
                                  }
                                },
                                "id": 1107,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1106,
                                  "name": "dst",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1066,
                                  "src": "12661:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12652:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1108,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1068,
                                "src": "12679:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "5242434e3a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12699:50:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_19b8796283c3d1053a542ef4735b07b76cedb11526dbdb16bdb0e85df64cb179",
                                  "typeString": "literal_string \"RBCN::_transferTokens: transfer amount overflows\""
                                },
                                "value": "RBCN::_transferTokens: transfer amount overflows"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_19b8796283c3d1053a542ef4735b07b76cedb11526dbdb16bdb0e85df64cb179",
                                  "typeString": "literal_string \"RBCN::_transferTokens: transfer amount overflows\""
                                }
                              ],
                              "id": 1104,
                              "name": "add96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "12633:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
                                "typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
                              }
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12633:126:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "12617:142:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1112,
                        "nodeType": "ExpressionStatement",
                        "src": "12617:142:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1114,
                              "name": "src",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "12783:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1115,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1066,
                              "src": "12788:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1116,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "12793:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1113,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "12774:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12774:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1118,
                        "nodeType": "EmitStatement",
                        "src": "12769:31:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1120,
                                "name": "delegates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 427,
                                "src": "12826:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                  "typeString": "mapping(address => address)"
                                }
                              },
                              "id": 1122,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1121,
                                "name": "src",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1064,
                                "src": "12836:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12826:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1123,
                                "name": "delegates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 427,
                                "src": "12842:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                  "typeString": "mapping(address => address)"
                                }
                              },
                              "id": 1125,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1124,
                                "name": "dst",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1066,
                                "src": "12852:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12842:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1126,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "12858:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1119,
                            "name": "_moveDelegates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "12811:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
                              "typeString": "function (address,address,uint96)"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12811:54:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1128,
                        "nodeType": "ExpressionStatement",
                        "src": "12811:54:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "name": "src",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "12111:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12111:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "12132:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12132:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "12153:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "12153:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12101:71:1"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12182:0:1"
                  },
                  "scope": 1419,
                  "src": "12077:795:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1236,
                    "nodeType": "Block",
                    "src": "12988:1207:1",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "srcRep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "13002:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1140,
                              "name": "dstRep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "13012:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "13002:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1142,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "13022:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13031:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "13022:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13002:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1235,
                        "nodeType": "IfStatement",
                        "src": "12998:1191:1",
                        "trueBody": {
                          "id": 1234,
                          "nodeType": "Block",
                          "src": "13034:1155:1",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1146,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "13052:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1148,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13070:1:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13062:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13062:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "13052:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1189,
                              "nodeType": "IfStatement",
                              "src": "13048:559:1",
                              "trueBody": {
                                "id": 1188,
                                "nodeType": "Block",
                                "src": "13074:533:1",
                                "statements": [
                                  {
                                    "assignments": [
                                      1152
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1152,
                                        "name": "srcRepNum",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1188,
                                        "src": "13092:16:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "typeName": {
                                          "id": 1151,
                                          "name": "uint32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13092:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1156,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1153,
                                        "name": "numCheckpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 442,
                                        "src": "13111:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                          "typeString": "mapping(address => uint32)"
                                        }
                                      },
                                      "id": 1155,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1154,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "13126:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13111:22:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13092:41:1"
                                  },
                                  {
                                    "assignments": [
                                      1158
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1158,
                                        "name": "srcRepOld",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1188,
                                        "src": "13151:16:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        },
                                        "typeName": {
                                          "id": 1157,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13151:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1172,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "id": 1161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 1159,
                                          "name": "srcRepNum",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1152,
                                          "src": "13190:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "30",
                                          "id": 1160,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13202:1:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "13190:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 1170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13297:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "id": 1171,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13190:108:1",
                                      "trueExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1162,
                                              "name": "checkpoints",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 438,
                                              "src": "13230:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                                "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                              }
                                            },
                                            "id": 1164,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1163,
                                              "name": "srcRep",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1132,
                                              "src": "13242:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "13230:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                              "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                            }
                                          },
                                          "id": 1168,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            },
                                            "id": 1167,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 1165,
                                              "name": "srcRepNum",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1152,
                                              "src": "13250:9:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31",
                                              "id": 1166,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13262:1:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "13250:13:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13230:34:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                            "typeString": "struct RBCN.Checkpoint storage ref"
                                          }
                                        },
                                        "id": 1169,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 431,
                                        "src": "13230:40:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13151:147:1"
                                  },
                                  {
                                    "assignments": [
                                      1174
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1174,
                                        "name": "srcRepNew",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1188,
                                        "src": "13316:16:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        },
                                        "typeName": {
                                          "id": 1173,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13316:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1180,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1176,
                                          "name": "srcRepOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1158,
                                          "src": "13386:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1177,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1136,
                                          "src": "13421:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "5242434e3a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
                                          "id": 1178,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13453:42:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f1d4a8c286a2172f5349a8b8a446deceda6771a93240c780e918a603918e2773",
                                            "typeString": "literal_string \"RBCN::_moveVotes: vote amount underflows\""
                                          },
                                          "value": "RBCN::_moveVotes: vote amount underflows"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          },
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_f1d4a8c286a2172f5349a8b8a446deceda6771a93240c780e918a603918e2773",
                                            "typeString": "literal_string \"RBCN::_moveVotes: vote amount underflows\""
                                          }
                                        ],
                                        "id": 1175,
                                        "name": "sub96",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1406,
                                        "src": "13355:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
                                          "typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
                                        }
                                      },
                                      "id": 1179,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13355:162:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13316:201:1"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1182,
                                          "name": "srcRep",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1132,
                                          "src": "13552:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1183,
                                          "name": "srcRepNum",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1152,
                                          "src": "13560:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1184,
                                          "name": "srcRepOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1158,
                                          "src": "13571:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1185,
                                          "name": "srcRepNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1174,
                                          "src": "13582:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          },
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          },
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        ],
                                        "id": 1181,
                                        "name": "_writeCheckpoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1310,
                                        "src": "13535:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
                                          "typeString": "function (address,uint32,uint96,uint96)"
                                        }
                                      },
                                      "id": 1186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13535:57:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1187,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13535:57:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1190,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1134,
                                  "src": "13625:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1192,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13643:1:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13635:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13635:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "13625:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1233,
                              "nodeType": "IfStatement",
                              "src": "13621:558:1",
                              "trueBody": {
                                "id": 1232,
                                "nodeType": "Block",
                                "src": "13647:532:1",
                                "statements": [
                                  {
                                    "assignments": [
                                      1196
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1196,
                                        "name": "dstRepNum",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1232,
                                        "src": "13665:16:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "typeName": {
                                          "id": 1195,
                                          "name": "uint32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13665:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1200,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1197,
                                        "name": "numCheckpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 442,
                                        "src": "13684:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                          "typeString": "mapping(address => uint32)"
                                        }
                                      },
                                      "id": 1199,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1198,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1134,
                                        "src": "13699:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13684:22:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13665:41:1"
                                  },
                                  {
                                    "assignments": [
                                      1202
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1202,
                                        "name": "dstRepOld",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1232,
                                        "src": "13724:16:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        },
                                        "typeName": {
                                          "id": 1201,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13724:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1216,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "id": 1205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 1203,
                                          "name": "dstRepNum",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1196,
                                          "src": "13763:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "30",
                                          "id": 1204,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13775:1:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "13763:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 1214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13870:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "id": 1215,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13763:108:1",
                                      "trueExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1206,
                                              "name": "checkpoints",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 438,
                                              "src": "13803:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                                "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                              }
                                            },
                                            "id": 1208,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1207,
                                              "name": "dstRep",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1134,
                                              "src": "13815:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "13803:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                              "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                            }
                                          },
                                          "id": 1212,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            },
                                            "id": 1211,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 1209,
                                              "name": "dstRepNum",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1196,
                                              "src": "13823:9:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31",
                                              "id": 1210,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13835:1:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "13823:13:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13803:34:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                            "typeString": "struct RBCN.Checkpoint storage ref"
                                          }
                                        },
                                        "id": 1213,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 431,
                                        "src": "13803:40:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13724:147:1"
                                  },
                                  {
                                    "assignments": [
                                      1218
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1218,
                                        "name": "dstRepNew",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1232,
                                        "src": "13889:16:1",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        },
                                        "typeName": {
                                          "id": 1217,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13889:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1224,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1220,
                                          "name": "dstRepOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1202,
                                          "src": "13959:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1221,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1136,
                                          "src": "13994:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "5242434e3a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
                                          "id": 1222,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14026:41:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_6eec96cc7440aff8ebb7bb9bd474f88e6f6c501bc5e4b4346640751ca7eecca7",
                                            "typeString": "literal_string \"RBCN::_moveVotes: vote amount overflows\""
                                          },
                                          "value": "RBCN::_moveVotes: vote amount overflows"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          },
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_6eec96cc7440aff8ebb7bb9bd474f88e6f6c501bc5e4b4346640751ca7eecca7",
                                            "typeString": "literal_string \"RBCN::_moveVotes: vote amount overflows\""
                                          }
                                        ],
                                        "id": 1219,
                                        "name": "add96",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "13928:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
                                          "typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
                                        }
                                      },
                                      "id": 1223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13928:161:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13889:200:1"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1226,
                                          "name": "dstRep",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1134,
                                          "src": "14124:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1227,
                                          "name": "dstRepNum",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1196,
                                          "src": "14132:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1228,
                                          "name": "dstRepOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1202,
                                          "src": "14143:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1229,
                                          "name": "dstRepNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1218,
                                          "src": "14154:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          },
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          },
                                          {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        ],
                                        "id": 1225,
                                        "name": "_writeCheckpoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1310,
                                        "src": "14107:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
                                          "typeString": "function (address,uint32,uint96,uint96)"
                                        }
                                      },
                                      "id": 1230,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14107:57:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1231,
                                    "nodeType": "ExpressionStatement",
                                    "src": "14107:57:1"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_moveDelegates",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "name": "srcRep",
                        "nodeType": "VariableDeclaration",
                        "scope": 1237,
                        "src": "12911:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12911:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1134,
                        "name": "dstRep",
                        "nodeType": "VariableDeclaration",
                        "scope": 1237,
                        "src": "12935:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12935:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1136,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1237,
                        "src": "12959:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "12959:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12901:77:1"
                  },
                  "returnParameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12988:0:1"
                  },
                  "scope": 1419,
                  "src": "12878:1317:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1309,
                    "nodeType": "Block",
                    "src": "14348:663:1",
                    "statements": [
                      {
                        "assignments": [
                          1249
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1249,
                            "name": "blockNumber",
                            "nodeType": "VariableDeclaration",
                            "scope": 1309,
                            "src": "14358:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 1248,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "14358:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1255,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1251,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1424,
                                "src": "14415:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14415:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5242434e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14445:54:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f59a52bcef07e9f9c23eab919b44ab6546e0d6a1bcee358fa15bc4d925619495",
                                "typeString": "literal_string \"RBCN::_writeCheckpoint: block number exceeds 32 bits\""
                              },
                              "value": "RBCN::_writeCheckpoint: block number exceeds 32 bits"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f59a52bcef07e9f9c23eab919b44ab6546e0d6a1bcee358fa15bc4d925619495",
                                "typeString": "literal_string \"RBCN::_writeCheckpoint: block number exceeds 32 bits\""
                              }
                            ],
                            "id": 1250,
                            "name": "safe32",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "14391:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                              "typeString": "function (uint256,string memory) pure returns (uint32)"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14391:122:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14358:155:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1256,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "14541:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14556:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "14541:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1259,
                                    "name": "checkpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 438,
                                    "src": "14573:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                    }
                                  },
                                  "id": 1261,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1260,
                                    "name": "delegatee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1239,
                                    "src": "14585:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14573:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                    "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                  }
                                },
                                "id": 1265,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 1264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1262,
                                    "name": "nCheckpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1241,
                                    "src": "14596:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 1263,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14611:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "14596:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14573:40:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                  "typeString": "struct RBCN.Checkpoint storage ref"
                                }
                              },
                              "id": 1266,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 429,
                              "src": "14573:50:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1267,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1249,
                              "src": "14627:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "14573:65:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14541:97:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1301,
                          "nodeType": "Block",
                          "src": "14737:201:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1282,
                                      "name": "checkpoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 438,
                                      "src": "14751:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                      }
                                    },
                                    "id": 1285,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1283,
                                      "name": "delegatee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1239,
                                      "src": "14763:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14751:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                      "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                    }
                                  },
                                  "id": 1286,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1284,
                                    "name": "nCheckpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1241,
                                    "src": "14774:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14751:36:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                    "typeString": "struct RBCN.Checkpoint storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1288,
                                      "name": "blockNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1249,
                                      "src": "14818:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 1289,
                                      "name": "newVotes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1245,
                                      "src": "14847:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    ],
                                    "id": 1287,
                                    "name": "Checkpoint",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 432,
                                    "src": "14790:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Checkpoint_$432_storage_ptr_$",
                                      "typeString": "type(struct RBCN.Checkpoint storage pointer)"
                                    }
                                  },
                                  "id": 1290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14790:79:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$432_memory",
                                    "typeString": "struct RBCN.Checkpoint memory"
                                  }
                                },
                                "src": "14751:118:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                  "typeString": "struct RBCN.Checkpoint storage ref"
                                }
                              },
                              "id": 1292,
                              "nodeType": "ExpressionStatement",
                              "src": "14751:118:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1293,
                                    "name": "numCheckpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "14883:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                      "typeString": "mapping(address => uint32)"
                                    }
                                  },
                                  "id": 1295,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1294,
                                    "name": "delegatee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1239,
                                    "src": "14898:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14883:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 1298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1296,
                                    "name": "nCheckpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1241,
                                    "src": "14911:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 1297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14926:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "14911:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "14883:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 1300,
                              "nodeType": "ExpressionStatement",
                              "src": "14883:44:1"
                            }
                          ]
                        },
                        "id": 1302,
                        "nodeType": "IfStatement",
                        "src": "14524:414:1",
                        "trueBody": {
                          "id": 1281,
                          "nodeType": "Block",
                          "src": "14649:82:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1270,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 438,
                                        "src": "14663:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct RBCN.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 1275,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1271,
                                        "name": "delegatee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1239,
                                        "src": "14675:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14663:22:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$432_storage_$",
                                        "typeString": "mapping(uint32 => struct RBCN.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 1276,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 1274,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 1272,
                                        "name": "nCheckpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1241,
                                        "src": "14686:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 1273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14701:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "14686:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14663:40:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$432_storage",
                                      "typeString": "struct RBCN.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 1277,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 431,
                                  "src": "14663:46:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1278,
                                  "name": "newVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "14712:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "14663:57:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 1280,
                              "nodeType": "ExpressionStatement",
                              "src": "14663:57:1"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1304,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "14974:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1305,
                              "name": "oldVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1243,
                              "src": "14985:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1306,
                              "name": "newVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "14995:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1303,
                            "name": "DelegateVotesChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "14953:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14953:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "EmitStatement",
                        "src": "14948:56:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1310,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_writeCheckpoint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1239,
                        "name": "delegatee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "14236:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14236:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1241,
                        "name": "nCheckpoints",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "14263:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14263:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1243,
                        "name": "oldVotes",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "14292:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1242,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "14292:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1245,
                        "name": "newVotes",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "14317:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "14317:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14226:112:1"
                  },
                  "returnParameters": {
                    "id": 1247,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14348:0:1"
                  },
                  "scope": 1419,
                  "src": "14201:810:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1332,
                    "nodeType": "Block",
                    "src": "15131:75:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1320,
                                "name": "n",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1312,
                                "src": "15149:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 1321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15153:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3332",
                                  "id": 1322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15156:2:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "15153:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "15149:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1325,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1314,
                              "src": "15160:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1319,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "15141:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15141:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ExpressionStatement",
                        "src": "15141:32:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1329,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1312,
                              "src": "15197:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15190:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": "uint32"
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15190:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "functionReturnParameters": 1318,
                        "id": 1331,
                        "nodeType": "Return",
                        "src": "15183:16:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1333,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safe32",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1312,
                        "name": "n",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "15033:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15033:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1314,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "15044:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1313,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15044:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15032:39:1"
                  },
                  "returnParameters": {
                    "id": 1318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1317,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "15119:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1316,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15119:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15118:8:1"
                  },
                  "scope": 1419,
                  "src": "15017:189:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1355,
                    "nodeType": "Block",
                    "src": "15326:75:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1343,
                                "name": "n",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1335,
                                "src": "15344:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                  "typeString": "int_const 79228162514264337593543950336"
                                },
                                "id": 1346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 1344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15348:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3936",
                                  "id": 1345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15351:2:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_96_by_1",
                                    "typeString": "int_const 96"
                                  },
                                  "value": "96"
                                },
                                "src": "15348:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                  "typeString": "int_const 79228162514264337593543950336"
                                }
                              },
                              "src": "15344:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1348,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1337,
                              "src": "15355:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1342,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "15336:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15336:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1350,
                        "nodeType": "ExpressionStatement",
                        "src": "15336:32:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1352,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1335,
                              "src": "15392:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15385:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint96_$",
                              "typeString": "type(uint96)"
                            },
                            "typeName": "uint96"
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15385:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 1341,
                        "id": 1354,
                        "nodeType": "Return",
                        "src": "15378:16:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1356,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safe96",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "name": "n",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "15228:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15228:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1337,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "15239:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15239:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15227:39:1"
                  },
                  "returnParameters": {
                    "id": 1341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1340,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1356,
                        "src": "15314:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15314:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15313:8:1"
                  },
                  "scope": 1419,
                  "src": "15212:189:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1382,
                    "nodeType": "Block",
                    "src": "15531:90:1",
                    "statements": [
                      {
                        "assignments": [
                          1368
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1368,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1382,
                            "src": "15541:8:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 1367,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "15541:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1372,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1369,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "15552:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1370,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "15556:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "15552:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15541:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1374,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1368,
                                "src": "15575:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1375,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1358,
                                "src": "15580:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "15575:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1377,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1362,
                              "src": "15583:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1373,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "15567:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15567:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1379,
                        "nodeType": "ExpressionStatement",
                        "src": "15567:29:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1380,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "15613:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 1366,
                        "id": 1381,
                        "nodeType": "Return",
                        "src": "15606:8:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1383,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add96",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1358,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "15431:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15431:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1360,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "15449:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15449:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1362,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "15467:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15467:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15421:78:1"
                  },
                  "returnParameters": {
                    "id": 1366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1365,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "15523:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15523:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15522:8:1"
                  },
                  "scope": 1419,
                  "src": "15407:214:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1405,
                    "nodeType": "Block",
                    "src": "15751:68:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 1397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1395,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1387,
                                "src": "15769:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1396,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1385,
                                "src": "15774:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "15769:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1398,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1389,
                              "src": "15777:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1394,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1437,
                              1438
                            ],
                            "referencedDeclaration": 1438,
                            "src": "15761:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15761:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1400,
                        "nodeType": "ExpressionStatement",
                        "src": "15761:29:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1401,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "15807:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1402,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1387,
                            "src": "15811:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "15807:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "functionReturnParameters": 1393,
                        "id": 1404,
                        "nodeType": "Return",
                        "src": "15800:12:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1406,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub96",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1385,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "15651:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15651:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1387,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "15669:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1386,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15669:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1389,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "15687:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15687:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15641:78:1"
                  },
                  "returnParameters": {
                    "id": 1393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1392,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "15743:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1391,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15743:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15742:8:1"
                  },
                  "scope": 1419,
                  "src": "15627:192:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1417,
                    "nodeType": "Block",
                    "src": "15879:118:1",
                    "statements": [
                      {
                        "assignments": [
                          1412
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1412,
                            "name": "chainId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1417,
                            "src": "15889:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1411,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15889:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1413,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15889:15:1"
                      },
                      {
                        "externalReferences": [
                          {
                            "chainId": {
                              "declaration": 1412,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "15937:7:1",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 1414,
                        "nodeType": "InlineAssembly",
                        "operations": "{ chainId := chainid() }",
                        "src": "15914:53:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1415,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1412,
                          "src": "15983:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1410,
                        "id": 1416,
                        "nodeType": "Return",
                        "src": "15976:14:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1418,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChainId",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15844:2:1"
                  },
                  "returnParameters": {
                    "id": 1410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1409,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1418,
                        "src": "15870:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15870:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15869:9:1"
                  },
                  "scope": 1419,
                  "src": "15825:172:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1420,
              "src": "132:15867:1"
            }
          ],
          "src": "68:15932:1"
        },
        "id": 1
      }
    }
  }
}
