{
  "id": "d84d392925e8a40f0174200a668d4aa3",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.5.16",
  "solcLongVersion": "0.5.16+commit.9c3226ce",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/SenateAlpha.sol": {
        "content": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\ncontract SenateAlpha {\n    /// @notice The name of this contract\n    string public constant name = \"Rubicon Senate\";\n\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\n    function quorumVotes() public pure returns (uint256) {\n        return 30000000e18;\n    } // 30,000,000 = 3% of RBCN\n\n    /// @notice The number of votes required in order for a voter to become a proposer\n    function proposalThreshold() public pure returns (uint256) {\n        return 5000000e18;\n    } // 5,000,000 = 0.5% of RBCN\n\n    /// @notice The maximum number of actions that can be included in a proposal\n    function proposalMaxOperations() public pure returns (uint256) {\n        return 10;\n    } // 10 actions\n\n    /// @notice The delay before voting on a proposal may take place, once proposed\n    function votingDelay() public pure returns (uint256) {\n        return 1;\n    } // 1 block\n\n    /// @notice The duration of voting on a proposal, in blocks\n    /// @notice LOWERED FOR TESTING PURPOSES NOT LAUNCH READY\n    function votingPeriod() public pure returns (uint256) {\n        return 28800;\n    } // ~5 days in blocks (assuming 15s blocks)\n\n    /// @notice The address of the Rubicon Protocol Timelock\n    TimelockInterface public timelock;\n\n    /// @notice The address of the Rubicon governance token\n    RBCNInterface public RBCN;\n\n    /// @notice The address of the Senate Guardian\n    address public guardian;\n\n    /// @notice The total number of proposals\n    uint256 public proposalCount;\n\n    struct Proposal {\n        /// @notice Unique id for looking up a proposal\n        uint256 id;\n        /// @notice Creator of the proposal\n        address proposer;\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\n        uint256 eta;\n        /// @notice the ordered list of target addresses for calls to be made\n        address[] targets;\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\n        uint256[] values;\n        /// @notice The ordered list of function signatures to be called\n        string[] signatures;\n        /// @notice The ordered list of calldata to be passed to each call\n        bytes[] calldatas;\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\n        uint256 startBlock;\n        /// @notice The block at which voting ends: votes must be cast prior to this block\n        uint256 endBlock;\n        /// @notice Current number of votes in favor of this proposal\n        uint256 forVotes;\n        /// @notice Current number of votes in opposition to this proposal\n        uint256 againstVotes;\n        /// @notice Flag marking whether the proposal has been canceled\n        bool canceled;\n        /// @notice Flag marking whether the proposal has been executed\n        bool executed;\n        /// @notice Receipts of ballots for the entire set of voters\n        mapping(address => Receipt) receipts;\n    }\n\n    /// @notice Ballot receipt record for a voter\n    struct Receipt {\n        /// @notice Whether or not a vote has been cast\n        bool hasVoted;\n        /// @notice Whether or not the voter supports the proposal\n        bool support;\n        /// @notice The number of votes the voter had, which were cast\n        uint96 votes;\n    }\n\n    /// @notice Possible states that a proposal may be in\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n\n    /// @notice The official record of all proposals ever proposed\n    mapping(uint256 => Proposal) public proposals;\n\n    /// @notice The latest proposal for each proposer\n    mapping(address => uint256) public latestProposalIds;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH =\n        keccak256(\n            \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"\n        );\n\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\n    bytes32 public constant BALLOT_TYPEHASH =\n        keccak256(\"Ballot(uint256 proposalId,bool support)\");\n\n    /// @notice An event emitted when a new proposal is created\n    event ProposalCreated(\n        uint256 id,\n        address proposer,\n        address[] targets,\n        uint256[] values,\n        string[] signatures,\n        bytes[] calldatas,\n        uint256 startBlock,\n        uint256 endBlock,\n        string description\n    );\n\n    /// @notice An event emitted when a vote has been cast on a proposal\n    event VoteCast(\n        address voter,\n        uint256 proposalId,\n        bool support,\n        uint256 votes\n    );\n\n    /// @notice An event emitted when a proposal has been canceled\n    event ProposalCanceled(uint256 id);\n\n    /// @notice An event emitted when a proposal has been queued in the Timelock\n    event ProposalQueued(uint256 id, uint256 eta);\n\n    /// @notice An event emitted when a proposal has been executed in the Timelock\n    event ProposalExecuted(uint256 id);\n\n    constructor(\n        address timelock_,\n        address RBCN_,\n        address guardian_\n    ) public {\n        timelock = TimelockInterface(timelock_);\n        RBCN = RBCNInterface(RBCN_);\n        guardian = guardian_;\n    }\n\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        string[] memory signatures,\n        bytes[] memory calldatas,\n        string memory description\n    ) public returns (uint256) {\n        require(\n            RBCN.getPriorVotes(msg.sender, sub256(block.number, 1)) >\n                proposalThreshold(),\n            \"SenateAlpha::propose: proposer votes below proposal threshold\"\n        );\n        require(\n            targets.length == values.length &&\n                targets.length == signatures.length &&\n                targets.length == calldatas.length,\n            \"SenateAlpha::propose: proposal function information arity mismatch\"\n        );\n        require(\n            targets.length != 0,\n            \"SenateAlpha::propose: must provide actions\"\n        );\n        require(\n            targets.length <= proposalMaxOperations(),\n            \"SenateAlpha::propose: too many actions\"\n        );\n\n        uint256 latestProposalId = latestProposalIds[msg.sender];\n        if (latestProposalId != 0) {\n            ProposalState proposersLatestProposalState =\n                state(latestProposalId);\n            require(\n                proposersLatestProposalState != ProposalState.Active,\n                \"SenateAlpha::propose: one live proposal per proposer, found an already active proposal\"\n            );\n            require(\n                proposersLatestProposalState != ProposalState.Pending,\n                \"SenateAlpha::propose: one live proposal per proposer, found an already pending proposal\"\n            );\n        }\n\n        uint256 startBlock = add256(block.number, votingDelay());\n        uint256 endBlock = add256(startBlock, votingPeriod());\n\n        proposalCount++;\n        Proposal memory newProposal =\n            Proposal({\n                id: proposalCount,\n                proposer: msg.sender,\n                eta: 0,\n                targets: targets,\n                values: values,\n                signatures: signatures,\n                calldatas: calldatas,\n                startBlock: startBlock,\n                endBlock: endBlock,\n                forVotes: 0,\n                againstVotes: 0,\n                canceled: false,\n                executed: false\n            });\n\n        proposals[newProposal.id] = newProposal;\n        latestProposalIds[newProposal.proposer] = newProposal.id;\n\n        emit ProposalCreated(\n            newProposal.id,\n            msg.sender,\n            targets,\n            values,\n            signatures,\n            calldatas,\n            startBlock,\n            endBlock,\n            description\n        );\n        return newProposal.id;\n    }\n\n    function queue(uint256 proposalId) public {\n        require(\n            state(proposalId) == ProposalState.Succeeded,\n            \"SenateAlpha::queue: proposal can only be queued if it is succeeded\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        uint256 eta = add256(block.timestamp, timelock.delay());\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\n            _queueOrRevert(\n                proposal.targets[i],\n                proposal.values[i],\n                proposal.signatures[i],\n                proposal.calldatas[i],\n                eta\n            );\n        }\n        proposal.eta = eta;\n        emit ProposalQueued(proposalId, eta);\n    }\n\n    function _queueOrRevert(\n        address target,\n        uint256 value,\n        string memory signature,\n        bytes memory data,\n        uint256 eta\n    ) internal {\n        require(\n            !timelock.queuedTransactions(\n                keccak256(abi.encode(target, value, signature, data, eta))\n            ),\n            \"SenateAlpha::_queueOrRevert: proposal action already queued at eta\"\n        );\n        timelock.queueTransaction(target, value, signature, data, eta);\n    }\n\n    function execute(uint256 proposalId) public payable {\n        require(\n            state(proposalId) == ProposalState.Queued,\n            \"SenateAlpha::execute: proposal can only be executed if it is queued\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        proposal.executed = true;\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\n            timelock.executeTransaction.value(proposal.values[i])(\n                proposal.targets[i],\n                proposal.values[i],\n                proposal.signatures[i],\n                proposal.calldatas[i],\n                proposal.eta\n            );\n        }\n        emit ProposalExecuted(proposalId);\n    }\n\n    function cancel(uint256 proposalId) public {\n        ProposalState state = state(proposalId);\n        require(\n            state != ProposalState.Executed,\n            \"SenateAlpha::cancel: cannot cancel executed proposal\"\n        );\n\n        Proposal storage proposal = proposals[proposalId];\n        require(\n            msg.sender == guardian ||\n                RBCN.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\n                proposalThreshold(),\n            \"SenateAlpha::cancel: proposer above threshold\"\n        );\n\n        proposal.canceled = true;\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\n            timelock.cancelTransaction(\n                proposal.targets[i],\n                proposal.values[i],\n                proposal.signatures[i],\n                proposal.calldatas[i],\n                proposal.eta\n            );\n        }\n\n        emit ProposalCanceled(proposalId);\n    }\n\n    function getActions(uint256 proposalId)\n        public\n        view\n        returns (\n            address[] memory targets,\n            uint256[] memory values,\n            string[] memory signatures,\n            bytes[] memory calldatas\n        )\n    {\n        Proposal storage p = proposals[proposalId];\n        return (p.targets, p.values, p.signatures, p.calldatas);\n    }\n\n    function getReceipt(uint256 proposalId, address voter)\n        public\n        view\n        returns (Receipt memory)\n    {\n        return proposals[proposalId].receipts[voter];\n    }\n\n    function state(uint256 proposalId) public view returns (ProposalState) {\n        require(\n            proposalCount >= proposalId && proposalId > 0,\n            \"SenateAlpha::state: invalid proposal id\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        } else if (block.number <= proposal.startBlock) {\n            return ProposalState.Pending;\n        } else if (block.number <= proposal.endBlock) {\n            return ProposalState.Active;\n        } else if (\n            proposal.forVotes <= proposal.againstVotes ||\n            proposal.forVotes < quorumVotes()\n        ) {\n            return ProposalState.Defeated;\n        } else if (proposal.eta == 0) {\n            return ProposalState.Succeeded;\n        } else if (proposal.executed) {\n            return ProposalState.Executed;\n        } else if (\n            block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())\n        ) {\n            return ProposalState.Expired;\n        } else {\n            return ProposalState.Queued;\n        }\n    }\n\n    function castVote(uint256 proposalId, bool support) public {\n        return _castVote(msg.sender, proposalId, support);\n    }\n\n    function castVoteBySig(\n        uint256 proposalId,\n        bool support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        bytes32 domainSeparator =\n            keccak256(\n                abi.encode(\n                    DOMAIN_TYPEHASH,\n                    keccak256(bytes(name)),\n                    getChainId(),\n                    address(this)\n                )\n            );\n        bytes32 structHash =\n            keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\n        bytes32 digest =\n            keccak256(\n                abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\n            );\n        address signatory = ecrecover(digest, v, r, s);\n        require(\n            signatory != address(0),\n            \"SenateAlpha::castVoteBySig: invalid signature\"\n        );\n        return _castVote(signatory, proposalId, support);\n    }\n\n    function _castVote(\n        address voter,\n        uint256 proposalId,\n        bool support\n    ) internal {\n        require(\n            state(proposalId) == ProposalState.Active,\n            \"SenateAlpha::_castVote: voting is closed\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        Receipt storage receipt = proposal.receipts[voter];\n        require(\n            receipt.hasVoted == false,\n            \"SenateAlpha::_castVote: voter already voted\"\n        );\n        uint96 votes = RBCN.getPriorVotes(voter, proposal.startBlock);\n\n        if (support) {\n            proposal.forVotes = add256(proposal.forVotes, votes);\n        } else {\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\n        }\n\n        receipt.hasVoted = true;\n        receipt.support = support;\n        receipt.votes = votes;\n\n        emit VoteCast(voter, proposalId, support, votes);\n    }\n\n    function __acceptAdmin() public {\n        require(\n            msg.sender == guardian,\n            \"SenateAlpha::__acceptAdmin: sender must be gov guardian\"\n        );\n        timelock.acceptAdmin();\n    }\n\n    function __abdicate() public {\n        require(\n            msg.sender == guardian,\n            \"SenateAlpha::__abdicate: sender must be gov guardian\"\n        );\n        guardian = address(0);\n    }\n\n    function __queueSetTimelockPendingAdmin(\n        address newPendingAdmin,\n        uint256 eta\n    ) public {\n        require(\n            msg.sender == guardian,\n            \"SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\"\n        );\n        timelock.queueTransaction(\n            address(timelock),\n            0,\n            \"setPendingAdmin(address)\",\n            abi.encode(newPendingAdmin),\n            eta\n        );\n    }\n\n    function __executeSetTimelockPendingAdmin(\n        address newPendingAdmin,\n        uint256 eta\n    ) public {\n        require(\n            msg.sender == guardian,\n            \"SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\"\n        );\n        timelock.executeTransaction(\n            address(timelock),\n            0,\n            \"setPendingAdmin(address)\",\n            abi.encode(newPendingAdmin),\n            eta\n        );\n    }\n\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"addition overflow\");\n        return c;\n    }\n\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"subtraction underflow\");\n        return a - b;\n    }\n\n    function getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        return chainId;\n    }\n}\n\ninterface TimelockInterface {\n    function delay() external view returns (uint256);\n\n    function GRACE_PERIOD() external view returns (uint256);\n\n    function acceptAdmin() external;\n\n    function queuedTransactions(bytes32 hash) external view returns (bool);\n\n    function queueTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data,\n        uint256 eta\n    ) external returns (bytes32);\n\n    function cancelTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data,\n        uint256 eta\n    ) external;\n\n    function executeTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data,\n        uint256 eta\n    ) external payable returns (bytes memory);\n}\n\ninterface RBCNInterface {\n    function getPriorVotes(address account, uint256 blockNumber)\n        external\n        view\n        returns (uint96);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/SenateAlpha.sol": {
        "RBCNInterface": {
          "abi": [
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getPriorVotes",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "",
                  "type": "uint96"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "getPriorVotes(address,uint256)": "782d6fe1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16-develop.2020.12.10+ovm+commit.25adf37d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SenateAlpha.sol\":\"RBCNInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/SenateAlpha.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\ncontract SenateAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Rubicon Senate\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint256) {\\n        return 30000000e18;\\n    } // 30,000,000 = 3% of RBCN\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint256) {\\n        return 5000000e18;\\n    } // 5,000,000 = 0.5% of RBCN\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint256) {\\n        return 10;\\n    } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint256) {\\n        return 1;\\n    } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    /// @notice LOWERED FOR TESTING PURPOSES NOT LAUNCH READY\\n    function votingPeriod() public pure returns (uint256) {\\n        return 28800;\\n    } // ~5 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the Rubicon Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Rubicon governance token\\n    RBCNInterface public RBCN;\\n\\n    /// @notice The address of the Senate Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] values;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH =\\n        keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(\\n        address voter,\\n        uint256 proposalId,\\n        bool support,\\n        uint256 votes\\n    );\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    constructor(\\n        address timelock_,\\n        address RBCN_,\\n        address guardian_\\n    ) public {\\n        timelock = TimelockInterface(timelock_);\\n        RBCN = RBCNInterface(RBCN_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        require(\\n            RBCN.getPriorVotes(msg.sender, sub256(block.number, 1)) >\\n                proposalThreshold(),\\n            \\\"SenateAlpha::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"SenateAlpha::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(\\n            targets.length != 0,\\n            \\\"SenateAlpha::propose: must provide actions\\\"\\n        );\\n        require(\\n            targets.length <= proposalMaxOperations(),\\n            \\\"SenateAlpha::propose: too many actions\\\"\\n        );\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState =\\n                state(latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"SenateAlpha::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"SenateAlpha::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay());\\n        uint256 endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal =\\n            Proposal({\\n                id: proposalCount,\\n                proposer: msg.sender,\\n                eta: 0,\\n                targets: targets,\\n                values: values,\\n                signatures: signatures,\\n                calldatas: calldatas,\\n                startBlock: startBlock,\\n                endBlock: endBlock,\\n                forVotes: 0,\\n                againstVotes: 0,\\n                canceled: false,\\n                executed: false\\n            });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint256 proposalId) public {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"SenateAlpha::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"SenateAlpha::_queueOrRevert: proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint256 proposalId) public payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"SenateAlpha::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint256 proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(\\n            state != ProposalState.Executed,\\n            \\\"SenateAlpha::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                RBCN.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\\n                proposalThreshold(),\\n            \\\"SenateAlpha::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint256 proposalId)\\n        public\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint256 proposalId, address voter)\\n        public\\n        view\\n        returns (Receipt memory)\\n    {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > 0,\\n            \\\"SenateAlpha::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            proposal.forVotes <= proposal.againstVotes ||\\n            proposal.forVotes < quorumVotes()\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (\\n            block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())\\n        ) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint256 proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        bool support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name)),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n        bytes32 structHash =\\n            keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"SenateAlpha::castVoteBySig: invalid signature\\\"\\n        );\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(\\n        address voter,\\n        uint256 proposalId,\\n        bool support\\n    ) internal {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"SenateAlpha::_castVote: voting is closed\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(\\n            receipt.hasVoted == false,\\n            \\\"SenateAlpha::_castVote: voter already voted\\\"\\n        );\\n        uint96 votes = RBCN.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__acceptAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__abdicate: sender must be gov guardian\\\"\\n        );\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.queueTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.executeTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface RBCNInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x76ebc42b7dc259b5cdf56f728603be367abafd111e3a2f42f7ac26636951cdca\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        },
        "SenateAlpha": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "timelock_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "RBCN_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "guardian_",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "ProposalQueued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "support",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "votes",
                  "type": "uint256"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "DOMAIN_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "RBCN",
              "outputs": [
                {
                  "internalType": "contract RBCNInterface",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "__abdicate",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "__acceptAdmin",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newPendingAdmin",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "__executeSetTimelockPendingAdmin",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newPendingAdmin",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "__queueSetTimelockPendingAdmin",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "cancel",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "support",
                  "type": "bool"
                }
              ],
              "name": "castVote",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "support",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "execute",
              "outputs": [],
              "payable": true,
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "getActions",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                }
              ],
              "name": "getReceipt",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "hasVoted",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "support",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint96",
                      "name": "votes",
                      "type": "uint96"
                    }
                  ],
                  "internalType": "struct SenateAlpha.Receipt",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "guardian",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "latestProposalIds",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "proposalCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "proposalMaxOperations",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "proposals",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "canceled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "queue",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "quorumVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum SenateAlpha.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "timelock",
              "outputs": [
                {
                  "internalType": "contract TimelockInterface",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH1 0x0 DUP1 PUSH3 0x19 PUSH3 0xF5 JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4B8A CODESIZE SUB DUP1 PUSH3 0x4B8A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3F SWAP2 PUSH3 0x22A JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 PUSH3 0x4F PUSH3 0x162 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH3 0x73 PUSH3 0x1C4 JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 PUSH3 0x8A PUSH3 0x162 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH3 0xAE PUSH3 0x1C4 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 PUSH3 0xC5 PUSH3 0x162 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH3 0xE9 PUSH3 0x1C4 JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x2BD JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH3 0x12F JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x112 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x1BF JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH3 0x1A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x224 DUP2 PUSH3 0x29B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 PUSH3 0x248 PUSH3 0xF5 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH3 0x259 DUP7 DUP7 PUSH3 0x213 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x26C DUP7 DUP3 DUP8 ADD PUSH3 0x213 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x27F DUP7 DUP3 DUP8 ADD PUSH3 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x224 JUMP JUMPDEST PUSH3 0x2A6 DUP2 PUSH3 0x289 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP1 PUSH3 0x1BF PUSH3 0xF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x48BD DUP1 PUSH3 0x2CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13CF08B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x15373E3D EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x17977C61 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x21F43E42 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x24BC1A64 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x328DD982 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x40E58EE5 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x452A9320 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x4634C61F EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x5794A68A EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x760FBC13 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x7BDBE4D0 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x91500671 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xB9A61961 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xD33219B4 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xDA35C664 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xDA95691A EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xDDF0B009 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xE23A9A52 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xFE0D94C1 EQ PUSH2 0x558 JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x147 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 PUSH2 0x15C PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x463D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1A3 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1CE PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1DA PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 PUSH2 0x1F9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x351B JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 PUSH2 0x224 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x3298 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 PUSH2 0x24D PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x67D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 PUSH2 0x26B PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 PUSH2 0x294 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x7FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x2C9 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x431D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2EB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0xB2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 PUSH2 0x309 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x320 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x4418 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 PUSH2 0x33F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0xD68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 PUSH2 0x368 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x374 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 PUSH2 0x393 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3554 JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 PUSH2 0x3BC PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x3C8 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x440A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 PUSH2 0x3E7 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 PUSH2 0x405 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x13B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 PUSH2 0x423 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 PUSH2 0x44C PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x1518 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 PUSH2 0x46A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x1527 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 PUSH2 0x488 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x3C8 PUSH2 0x1622 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4A6 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x162D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4C4 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1637 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4ED PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x1BBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 PUSH2 0x516 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x1EE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 PUSH2 0x534 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x54B PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x4587 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH2 0x584 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x593 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH2 0x5B0 PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x7 ADD PUSH2 0x5BD PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x8 ADD PUSH2 0x5CA PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x9 ADD PUSH2 0x5D7 PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0xA ADD PUSH2 0x5E4 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0xB DUP3 ADD PUSH2 0x5F3 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xB ADD PUSH1 0x1 SWAP1 PUSH2 0x60D PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH2 0x7080 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x52756269636F6E2053656E617465 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH2 0x65E GAS PUSH2 0x657 PUSH2 0x27E1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2211 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x67A PUSH2 0x2786 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x689 SWAP1 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6A0 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x6C2 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP1 PUSH2 0x44E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x6F7 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x705 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND PUSH4 0x825F38F PUSH1 0x0 DUP1 PUSH2 0x727 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x779 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x78E PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x7A0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x7AD PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x7CA PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7F5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3475 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH11 0x18D0BF423C03D8DE000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD DUP2 PUSH1 0x4 ADD DUP3 PUSH1 0x5 ADD DUP4 PUSH1 0x6 ADD DUP4 DUP1 PUSH2 0x83C PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x85F PUSH2 0x2786 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x881 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x876 JUMPI JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 PUSH2 0x8BD PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x8E0 PUSH2 0x2786 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x900 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x8F7 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 PUSH2 0x923 PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA16 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0x95C PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x996 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA02 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D0 JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0x9C2 PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA02 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x9E7 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x93F JUMP JUMPDEST POP POP POP POP SWAP2 POP DUP1 DUP1 PUSH2 0xA26 PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB19 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0xA5F PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0xA99 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB05 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD3 JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0xAC5 PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB05 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0xAEA PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA42 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH2 0xB41 PUSH2 0x2786 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0xB4F JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP1 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xB7A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0xB DUP3 ADD PUSH2 0xB9B PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x7 ADD PUSH2 0xBC0 PUSH2 0x2786 JUMP JUMPDEST GAS PUSH2 0xBC9 PUSH2 0x295E JUMP JUMPDEST GT PUSH2 0xBD8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x8 ADD PUSH2 0xBE4 PUSH2 0x2786 JUMP JUMPDEST GAS PUSH2 0xBED PUSH2 0x295E JUMP JUMPDEST GT PUSH2 0xBFC JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0xA ADD PUSH2 0xC08 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x9 ADD PUSH2 0xC14 PUSH2 0x2786 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0xC32 JUMPI POP PUSH2 0xC24 PUSH2 0x7FA JUMP JUMPDEST DUP2 PUSH1 0x9 ADD PUSH2 0xC30 PUSH2 0x2786 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH2 0xC4D PUSH2 0x2786 JUMP JUMPDEST PUSH2 0xC5B JUMPI PUSH1 0x4 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB DUP3 ADD PUSH2 0xC69 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC82 JUMPI PUSH1 0x7 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST PUSH2 0xD45 DUP2 PUSH1 0x2 ADD PUSH2 0xC91 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9C PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC1A287E2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xCDF PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 PUSH2 0xCF1 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xCFE PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xD1A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD40 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH2 0x24B5 JUMP JUMPDEST GAS PUSH2 0xD4E PUSH2 0x2A6A JUMP JUMPDEST LT PUSH2 0xD5D JUMPI PUSH1 0x6 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x5 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD73 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xD83 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x4507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xDB0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH2 0xDCF PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0xDF1 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEF9 JUMPI POP PUSH2 0xE09 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xE15 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND PUSH4 0x782D6FE1 PUSH1 0x0 PUSH1 0x1 DUP6 ADD PUSH2 0xE3A PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5D GAS PUSH2 0xE56 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x24F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP3 SWAP2 SWAP1 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xE8D PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 PUSH2 0xE9F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xEAC PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xEC8 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEEE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x35C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP1 PUSH2 0x4557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xF24 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0xB DUP3 ADD DUP2 DUP2 PUSH2 0xF37 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0xF4C PUSH2 0x2AB0 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP1 PUSH2 0xF60 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x10C5 JUMPI PUSH1 0x0 DUP1 PUSH2 0xF74 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x591FCDFE DUP4 PUSH1 0x3 ADD DUP4 DUP2 PUSH2 0xFA0 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0xFA8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 PUSH2 0xFBD PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x4 ADD DUP5 DUP2 PUSH2 0xFDB PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0xFE3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0xFF5 PUSH2 0x2786 JUMP JUMPDEST DUP6 PUSH1 0x5 ADD DUP6 DUP2 PUSH2 0x1003 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x100B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP7 PUSH1 0x6 ADD DUP7 DUP2 PUSH2 0x1023 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x102B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP8 PUSH1 0x2 ADD PUSH2 0x1041 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1061 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x1076 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 PUSH2 0x1088 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x1095 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x10B2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0xF53 SWAP1 POP JUMP JUMPDEST POP PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x110E PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x112F SWAP1 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x52756269636F6E2053656E617465 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x116B PUSH2 0x252D JUMP JUMPDEST GAS PUSH4 0x996D79A5 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP3 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x11C1 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11AA JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11D7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x11FD SWAP1 PUSH2 0x41BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1219 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1246 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1283 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS PUSH2 0x129B PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x12B7 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EC SWAP1 PUSH2 0x4527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x12FB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1309 DUP2 DUP11 DUP11 PUSH2 0x2211 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x110E PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x132C PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x134E PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1374 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1383 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 DUP2 PUSH2 0x1395 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x7F5 PUSH2 0x2AB0 JUMP JUMPDEST PUSH1 0xA SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x13C8 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x13EA PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP1 PUSH2 0x4497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x141F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x142D PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND PUSH4 0x3A66F901 PUSH1 0x0 DUP1 PUSH2 0x144F PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1472 SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x14B6 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 PUSH2 0x14C8 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x14D5 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x14F2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7F5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH11 0x422CA8B0A00A425000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x1533 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x1555 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157B SWAP1 PUSH2 0x4537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x158A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1598 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE18B681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x15DD PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x15F2 JUMPI PUSH1 0x0 DUP1 PUSH2 0x15EF PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x15FC PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x161C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x1619 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x110E PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x67A PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x164D PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x782D6FE1 GAS PUSH2 0x1674 PUSH2 0x27E1 JUMP JUMPDEST PUSH2 0x1680 GAS PUSH2 0xE56 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169D SWAP3 SWAP2 SWAP1 PUSH2 0x41D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x16B0 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16C2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x16CF PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x16EB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1711 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x35C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x1749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1737 SWAP1 PUSH2 0x44D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1746 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP5 MLOAD DUP7 MLOAD EQ DUP1 ISZERO PUSH2 0x175B JUMPI POP DUP4 MLOAD DUP7 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1768 JUMPI POP DUP3 MLOAD DUP7 MLOAD EQ JUMPDEST PUSH2 0x1796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1784 SWAP1 PUSH2 0x4437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1793 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP6 MLOAD PUSH2 0x17C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B4 SWAP1 PUSH2 0x4487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x17C3 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x17CE PUSH2 0x13B7 JUMP JUMPDEST DUP7 MLOAD GT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EE SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x17FD PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 GAS PUSH2 0x180F PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1837 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 PUSH2 0x184A DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x185A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x188A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP1 PUSH2 0x44F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1887 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1898 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x18C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B6 SWAP1 PUSH2 0x4577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x18C5 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x18E0 GAS PUSH2 0x18D8 PUSH2 0x295E JUMP JUMPDEST PUSH2 0xD40 PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18F0 DUP3 PUSH2 0xD40 PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP2 PUSH2 0x18FF PUSH2 0x2786 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP4 ADD SWAP2 POP PUSH2 0x190E PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH2 0x1919 PUSH2 0x2AFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH2 0x192F PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD GAS PUSH2 0x193D PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 PUSH2 0x19B9 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP1 DUP2 PUSH2 0x19CF PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x19F1 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH2 0x1A05 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A21 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2B73 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A3C SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2BFD JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A57 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2C5D JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A72 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH2 0x1A84 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH2 0x1A98 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH2 0x1AAC PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH2 0x1AC0 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xB DUP3 ADD PUSH1 0x1 DUP2 PUSH2 0x1AD7 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x1AEC PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH2 0x180 DUP3 ADD MLOAD PUSH1 0xB DUP3 ADD PUSH2 0x100 DUP2 PUSH2 0x1B05 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x1B1A PUSH2 0x2AB0 JUMP JUMPDEST POP DUP5 SWAP4 POP POP POP POP MLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 PUSH2 0x1B55 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 DUP2 PUSH1 0x0 ADD MLOAD GAS PUSH2 0x1B87 PUSH2 0x27E1 JUMP JUMPDEST DUP13 DUP13 DUP13 DUP13 DUP10 DUP10 DUP15 PUSH1 0x40 MLOAD PUSH2 0x1BA3 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 MLOAD SWAP5 POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1BC8 DUP3 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1BD3 JUMPI INVALID JUMPDEST EQ PUSH2 0x1C02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF0 SWAP1 PUSH2 0x4457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1BFF PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1C6E GAS PUSH2 0x1C20 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C2B PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A42B8F8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xCDF PUSH2 0x2827 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x3 ADD DUP1 PUSH2 0x1C80 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1E9D DUP4 PUSH1 0x3 ADD DUP3 DUP2 PUSH2 0x1C9A PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1CA2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 PUSH2 0x1CB7 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x4 ADD DUP4 DUP2 PUSH2 0x1CD5 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1CDD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1CEF PUSH2 0x2786 JUMP JUMPDEST DUP6 PUSH1 0x5 ADD DUP5 DUP2 PUSH2 0x1CFD PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1D05 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0x1D18 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x1D52 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1DBE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8C JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0x1D7E PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DBE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x1DA3 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 PUSH1 0x6 ADD DUP6 DUP2 PUSH2 0x1DD1 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1DD9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0x1DEC PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x1E26 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1E92 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E60 JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0x1E52 PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x1E77 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E6E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C73 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x2 DUP5 ADD PUSH2 0x1EB4 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH32 0x9A2E42FD6722813D69113E7D0079D3D940171428DF7373DF9C7F7617CFDA2892 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10F5 SWAP3 SWAP2 SWAP1 PUSH2 0x46C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x689 SWAP1 PUSH2 0x41BC JUMP JUMPDEST PUSH2 0x1EFC PUSH2 0x2D2D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 PUSH2 0x1F3D PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 PUSH2 0x1F5B PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 PUSH2 0x1F79 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 MSTORE POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1FA2 DUP3 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FAD JUMPI INVALID JUMPDEST EQ PUSH2 0x1FDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FCA SWAP1 PUSH2 0x44C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1FD9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0xB DUP3 ADD PUSH2 0x100 DUP2 PUSH2 0x1FFE PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x2013 PUSH2 0x2AB0 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP1 PUSH2 0x2027 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x21D5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x203B PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x825F38F DUP4 PUSH1 0x4 ADD DUP4 DUP2 PUSH2 0x2067 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x206F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x2081 PUSH2 0x2786 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP5 DUP2 PUSH2 0x208F PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x2097 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 PUSH2 0x20AC PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x4 ADD DUP6 DUP2 PUSH2 0x20CA PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x20D2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x20E4 PUSH2 0x2786 JUMP JUMPDEST DUP7 PUSH1 0x5 ADD DUP7 DUP2 PUSH2 0x20F2 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x20FA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP8 PUSH1 0x6 ADD DUP8 DUP2 PUSH2 0x2112 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x211A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP9 PUSH1 0x2 ADD PUSH2 0x2130 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2150 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 PUSH2 0x2164 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2179 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2176 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x2183 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x21A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x21A0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x21CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3475 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x201A JUMP JUMPDEST POP PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F DUP3 PUSH1 0x40 MLOAD PUSH2 0x2205 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x221C DUP4 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2227 JUMPI INVALID JUMPDEST EQ PUSH2 0x2256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2244 SWAP1 PUSH2 0x4547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2253 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC DUP3 ADD PUSH1 0x20 MSTORE SWAP1 SWAP2 POP PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x228E PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND ISZERO PUSH2 0x22C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B7 SWAP1 PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x22C6 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x22D6 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x782D6FE1 DUP8 DUP6 PUSH1 0x7 ADD PUSH2 0x2301 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231E SWAP3 SWAP2 SWAP1 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x2331 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2343 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x2350 PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x236F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x236C PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2392 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x35C5 JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0x23CD JUMPI PUSH2 0x23B8 DUP4 PUSH1 0x9 ADD PUSH2 0x23A9 PUSH2 0x2786 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x24B5 JUMP JUMPDEST DUP1 PUSH1 0x9 DUP6 ADD PUSH2 0x23C5 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH2 0x23ED JUMP JUMPDEST PUSH2 0x23DC DUP4 PUSH1 0xA ADD PUSH2 0x23A9 PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0xA DUP6 ADD PUSH2 0x23E9 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 DUP3 DUP2 DUP2 PUSH2 0x23FA PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x240F PUSH2 0x2AB0 JUMP JUMPDEST POP DUP6 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0x2422 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x2437 PUSH2 0x2AB0 JUMP JUMPDEST POP DUP3 SWAP2 POP DUP4 SWAP1 POP PUSH3 0x10000 DUP2 PUSH2 0x244B PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x246D PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH32 0x877856338E13F63D0C36822FF0EF736B80934CD90574A3A5BC9262C39D217C46 DUP7 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24A5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x424D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x24EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24DA SWAP1 PUSH2 0x44A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x24E9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2515 SWAP1 PUSH2 0x4567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2524 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH2 0x2539 PUSH2 0x2D4C JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x254A PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2B06537 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2581 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B3 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x25C6 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 PUSH2 0x25D8 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x25E5 PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2604 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x2601 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2627 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3427 JUMP JUMPDEST ISZERO PUSH2 0x2656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2644 SWAP1 PUSH2 0x4517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2653 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2661 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A66F901 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x26B9 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x26CE JUMPI PUSH1 0x0 DUP1 PUSH2 0x26CB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x26D8 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x26F5 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1619 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2753 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2738 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x8435035B MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x85979F76 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x28A4 JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0x1F91 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0x1F91 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP8 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x28DC JUMPI DUP1 DUP10 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x28C4 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP11 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP13 DUP13 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x2931 DUP15 RETURNDATASIZE PUSH2 0x2894 JUMP JUMPDEST DUP14 ADD PUSH2 0x293D DUP2 DUP8 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2952 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x293E JUMP JUMPDEST POP SWAP3 SWAP14 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x5A98C361 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x29E8 JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29D0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x2A3D DUP14 RETURNDATASIZE PUSH2 0x2894 JUMP JUMPDEST DUP13 ADD PUSH2 0x2A49 DUP2 DUP8 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A5E JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4A JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2B7D PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2B87 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2BED JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BED JUMPI DUP3 MLOAD DUP3 PUSH1 0x1 DUP2 PUSH2 0x2BB9 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x2BDB PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2D92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2C07 PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C11 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2C51 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C51 JUMPI DUP3 MLOAD DUP3 PUSH2 0x2C40 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2C2D JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2DCE JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2C67 PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C71 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2CB9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2CB9 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD PUSH2 0x2CA9 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2DF3 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2C8D JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2E83 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2CCF PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2CD9 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2D21 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2D21 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD PUSH2 0x2D11 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2F2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x90580256 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0xE ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x1 EQ ISZERO PC PUSH1 0xA ADD JUMPI PUSH1 0x1 PUSH1 0x0 RETURN JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 PUSH2 0x2DAE PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 PUSH2 0x2DC3 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH2 0x2DE8 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2DFD PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x2E44 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 PUSH2 0x2E3D PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x2C51 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 PUSH2 0x2E53 PUSH2 0x2AB0 JUMP JUMPDEST POP POP DUP3 ISZERO PUSH2 0x2C51 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C51 JUMPI DUP3 MLOAD DUP3 PUSH2 0x2E72 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E5F JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 PUSH2 0x2E9D DUP3 DUP3 PUSH2 0x2F52 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2E89 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2EB0 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x2EF0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 PUSH2 0x2E3D PUSH2 0x2AB0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 PUSH2 0x2EFF PUSH2 0x2AB0 JUMP JUMPDEST POP POP DUP3 ISZERO PUSH2 0x2C51 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C51 JUMPI DUP3 MLOAD DUP3 PUSH2 0x2F1E PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 PUSH2 0x2F49 DUP3 DUP3 PUSH2 0x2F52 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2F35 JUMP JUMPDEST POP DUP1 PUSH2 0x2F5C PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 PUSH2 0x2F78 PUSH2 0x2AB0 JUMP JUMPDEST POP POP DUP1 PUSH1 0x1F LT PUSH2 0x2F88 JUMPI POP PUSH2 0x2FA4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH2 0x2FA4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2DCE JUMP JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x483E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FCC JUMPI PUSH1 0x0 DUP1 PUSH2 0x2FC9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FDF PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST PUSH2 0x46D1 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 PUSH2 0x300A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 PUSH2 0x3023 DUP9 DUP3 PUSH2 0x2FA7 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3010 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x305D JUMPI PUSH1 0x0 DUP1 PUSH2 0x305A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x306B PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x3093 DUP9 DUP3 PUSH2 0x31C5 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x307D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30C3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x30C0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x30D1 PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x30F9 DUP9 DUP3 PUSH2 0x31C5 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3129 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3126 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3137 PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x3165 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3162 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 PUSH2 0x317B DUP9 DUP3 PUSH2 0x31AB JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3168 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x4858 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x4858 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x4861 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x4861 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31DF JUMPI PUSH1 0x0 DUP1 PUSH2 0x31DC PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31ED PUSH2 0x2FDA DUP3 PUSH2 0x472D JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3212 JUMPI PUSH1 0x0 DUP1 PUSH2 0x320F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x321D DUP4 DUP3 DUP5 PUSH2 0x47F2 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3240 JUMPI PUSH1 0x0 DUP1 PUSH2 0x323D PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 MLOAD PUSH2 0x324E PUSH2 0x2FDA DUP3 PUSH2 0x472D JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3273 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3270 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x321D DUP4 DUP3 DUP5 PUSH2 0x47FE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x486A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x4873 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x32B0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x2FA7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32E3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x32E0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32EF DUP6 DUP6 PUSH2 0x2FA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3300 DUP6 DUP3 DUP7 ADD PUSH2 0x31AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x332B JUMPI PUSH1 0x0 DUP1 PUSH2 0x3328 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x334A JUMPI PUSH1 0x0 DUP1 PUSH2 0x3347 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x3356 DUP9 DUP3 DUP10 ADD PUSH2 0x2FB2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x337B JUMPI PUSH1 0x0 DUP1 PUSH2 0x3378 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x3387 DUP9 DUP3 DUP10 ADD PUSH2 0x310F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33AC JUMPI PUSH1 0x0 DUP1 PUSH2 0x33A9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x33B8 DUP9 DUP3 DUP10 ADD PUSH2 0x30A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33DD JUMPI PUSH1 0x0 DUP1 PUSH2 0x33DA PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x33E9 DUP9 DUP3 DUP10 ADD PUSH2 0x3043 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x340E JUMPI PUSH1 0x0 DUP1 PUSH2 0x340B PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x341A DUP9 DUP3 DUP10 ADD PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3442 JUMPI PUSH1 0x0 DUP1 PUSH2 0x343F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3469 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3466 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x31B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 PUSH2 0x348D PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x34AF JUMPI PUSH1 0x0 DUP1 PUSH2 0x34AC PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x32BF DUP5 DUP3 DUP6 ADD PUSH2 0x3226 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x34D3 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x31AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34FE JUMPI PUSH1 0x0 DUP1 PUSH2 0x34FB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x350A DUP6 DUP6 PUSH2 0x31AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3300 DUP6 DUP3 DUP7 ADD PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3537 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3534 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3543 DUP6 DUP6 PUSH2 0x31AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3300 DUP6 DUP3 DUP7 ADD PUSH2 0x3191 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3575 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3572 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3581 DUP9 DUP9 PUSH2 0x31AB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3592 DUP9 DUP3 DUP10 ADD PUSH2 0x3191 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x35A3 DUP9 DUP3 DUP10 ADD PUSH2 0x327E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x35B4 DUP9 DUP3 DUP10 ADD PUSH2 0x31AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x341A DUP9 DUP3 DUP10 ADD PUSH2 0x31AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E0 JUMPI PUSH1 0x0 DUP1 PUSH2 0x35DD PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x3289 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F8 DUP4 DUP4 PUSH2 0x3627 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EC DUP4 DUP4 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F8 DUP4 DUP4 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x4787 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363B DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x3645 DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP PUSH2 0x3650 DUP4 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x367E JUMPI DUP2 MLOAD PUSH2 0x3668 DUP9 DUP3 PUSH2 0x35EC JUMP JUMPDEST SWAP8 POP PUSH2 0x3673 DUP4 PUSH2 0x475D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3654 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3694 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x369E DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x36B0 DUP6 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x36EA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x36CD DUP6 DUP3 PUSH2 0x3600 JUMP JUMPDEST SWAP5 POP PUSH2 0x36D8 DUP4 PUSH2 0x475D JUMP JUMPDEST PUSH1 0x20 SWAP11 SWAP1 SWAP11 ADD SWAP10 SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x36B4 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3702 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x370C DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x371E DUP6 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x36EA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x373B DUP6 DUP3 PUSH2 0x3600 JUMP JUMPDEST SWAP5 POP PUSH2 0x3746 DUP4 PUSH2 0x475D JUMP JUMPDEST PUSH1 0x20 SWAP11 SWAP1 SWAP11 ADD SWAP10 SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3763 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x376D DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP PUSH2 0x3778 DUP4 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x367E JUMPI DUP2 MLOAD PUSH2 0x3790 DUP9 DUP3 PUSH2 0x360C JUMP JUMPDEST SWAP8 POP PUSH2 0x379B DUP4 PUSH2 0x475D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x377C JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x4792 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x3621 PUSH2 0x37C4 DUP3 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37D4 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x37DE DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP PUSH2 0x37EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x47FE JUMP JUMPDEST PUSH2 0x37F7 DUP2 PUSH2 0x482A JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x380C PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3823 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3849 JUMPI PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x7F PUSH1 0x2 DUP4 DIV AND PUSH2 0x3834 DUP2 DUP8 PUSH2 0x477E JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP2 MSTORE SWAP6 POP POP PUSH1 0x20 DUP6 ADD SWAP3 POP PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x2 DUP3 DIV PUSH2 0x3857 DUP2 DUP8 PUSH2 0x477E JUMP JUMPDEST SWAP6 POP PUSH2 0x3862 DUP6 PUSH2 0x4763 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3889 JUMPI DUP2 PUSH2 0x3876 PUSH2 0x2786 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3865 JUMP JUMPDEST DUP8 ADD SWAP5 POP POP POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47C6 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47D1 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47DC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x38BE PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3823 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x38D5 JUMPI PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x2 DUP3 DIV PUSH2 0x38E3 DUP2 DUP8 PUSH2 0x477E JUMP JUMPDEST SWAP6 POP PUSH2 0x38EE DUP6 PUSH2 0x4763 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3889 JUMPI DUP2 PUSH2 0x3902 PUSH2 0x2786 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x38F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3922 PUSH1 0x42 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A2070726F706F73616C2066 DUP2 MSTORE PUSH32 0x756E6374696F6E20696E666F726D6174696F6E206172697479206D69736D6174 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398C PUSH1 0x27 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A73746174653A20696E76616C69642070726F70 DUP2 MSTORE PUSH7 0x1BDCD85B081A59 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D5 PUSH1 0x42 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A71756575653A2070726F706F73616C2063616E DUP2 MSTORE PUSH32 0x206F6E6C79206265207175657565642069662069742069732073756363656564 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3F PUSH1 0x26 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A20746F6F206D616E792061 DUP2 MSTORE PUSH6 0x6374696F6E73 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A87 PUSH1 0x2 DUP4 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA5 PUSH1 0x34 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F61626469636174653A2073656E64657220 DUP2 MSTORE PUSH20 0x36BAB9BA1031329033B7BB1033BAB0B93234B0B7 PUSH1 0x61 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFB PUSH1 0x2A DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A206D7573742070726F7669 DUP2 MSTORE PUSH10 0x646520616374696F6E73 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B47 PUSH1 0x18 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH24 0x73657450656E64696E6741646D696E286164647265737329 PUSH1 0x40 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B7B PUSH1 0x48 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F717565756553657454696D656C6F636B50 DUP2 MSTORE PUSH32 0x656E64696E6741646D696E3A2073656E646572206D75737420626520676F7620 PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0x33BAB0B93234B0B7 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BEB PUSH1 0x11 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH17 0x6164646974696F6E206F766572666C6F77 PUSH1 0x78 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C18 PUSH1 0x43 DUP4 PUSH2 0xD63 JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C75696E74323536 DUP2 MSTORE PUSH32 0x20636861696E49642C6164647265737320766572696679696E67436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x637429 PUSH1 0xE8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x43 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C83 PUSH1 0x27 DUP4 PUSH2 0xD63 JUMP JUMPDEST PUSH32 0x42616C6C6F742875696E743235362070726F706F73616C49642C626F6F6C2073 DUP2 MSTORE PUSH7 0x7570706F727429 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CCC PUSH1 0x2B DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F63617374566F74653A20766F74657220616C DUP2 MSTORE PUSH11 0x1C9958591E481D9BDD1959 PUSH1 0xAA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D19 PUSH1 0x43 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A657865637574653A2070726F706F73616C2063 DUP2 MSTORE PUSH32 0x616E206F6E6C7920626520657865637574656420696620697420697320717565 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1D5959 PUSH1 0xEA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D84 PUSH1 0x3D DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A2070726F706F7365722076 DUP2 MSTORE PUSH32 0x6F7465732062656C6F772070726F706F73616C207468726573686F6C64000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE3 PUSH1 0x4A DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F6578656375746553657454696D656C6F63 DUP2 MSTORE PUSH32 0x6B50656E64696E6741646D696E3A2073656E646572206D75737420626520676F PUSH1 0x20 DUP3 ADD MSTORE PUSH10 0x3B1033BAB0B93234B0B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E55 PUSH1 0x56 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x487D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x489D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH22 0x1B1C9958591E481858DD1A5D99481C1C9BDC1BDCD85B PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EAF PUSH1 0x34 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A63616E63656C3A2063616E6E6F742063616E63 DUP2 MSTORE PUSH20 0x195B08195E1958DD5D1959081C1C9BDC1BDCD85B PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F05 PUSH1 0x42 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F71756575654F725265766572743A2070726F DUP2 MSTORE PUSH32 0x706F73616C20616374696F6E20616C7265616479207175657565642061742065 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7461 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6F PUSH1 0x2D DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A63617374566F746542795369673A20696E7661 DUP2 MSTORE PUSH13 0x6C6964207369676E6174757265 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBE PUSH1 0x37 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F61636365707441646D696E3A2073656E64 DUP2 MSTORE PUSH23 0x32B91036BAB9BA1031329033B7BB1033BAB0B93234B0B7 PUSH1 0x49 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4017 PUSH1 0x28 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F63617374566F74653A20766F74696E672069 DUP2 MSTORE PUSH8 0x1CC818DB1BDCD959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4061 PUSH1 0x2D DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A63616E63656C3A2070726F706F736572206162 DUP2 MSTORE PUSH13 0x1BDD99481D1A1C995CDA1BDB19 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B0 PUSH1 0x15 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH21 0x7375627472616374696F6E20756E646572666C6F77 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E1 PUSH1 0x57 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x487D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x489D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH23 0x1B1C9958591E481C195B991A5B99C81C1C9BDC1BDCD85B PUSH1 0x4A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD DUP2 MLOAD PUSH2 0x413F DUP5 DUP3 PUSH2 0x37A6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4152 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x37A6 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x161C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4177 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47AD JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47E7 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418B DUP3 PUSH2 0x3A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x4197 DUP3 DUP6 PUSH2 0x37B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x41A7 DUP3 DUP5 PUSH2 0x37B8 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x3C76 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x41E3 DUP3 DUP6 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x24EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x41FE DUP3 DUP8 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x420B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x38AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x421C DUP2 PUSH2 0x3B3A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4230 DUP2 DUP6 PUSH2 0x37C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x41E3 DUP3 DUP6 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x425B DUP3 DUP8 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x4268 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4275 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x1BB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x416E JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x4290 DUP3 DUP9 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x429D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x42AF DUP2 DUP7 PUSH2 0x37C9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x42C3 DUP2 DUP6 PUSH2 0x37C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x42D2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x42EA DUP3 DUP9 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x42F7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4309 DUP2 DUP7 PUSH2 0x38B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x42C3 DUP2 DUP6 PUSH2 0x3801 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x432E DUP2 DUP8 PUSH2 0x3630 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4342 DUP2 DUP7 PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4356 DUP2 DUP6 PUSH2 0x36F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x42D2 DUP2 DUP5 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x4386 DUP3 DUP8 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4393 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x43A0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x1BB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x43BB DUP3 DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x43C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x32BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x37A6 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x43E3 DUP3 DUP8 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x43F0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4165 JUMP JUMPDEST PUSH2 0x43FD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x1BB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x3898 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x38A1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x24EC DUP2 DUP5 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3915 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x397F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x39C8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3A32 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3A98 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3AEE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3B6E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3BDE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3D77 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3EA2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3F62 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3FB1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x400A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x4054 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x40A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x40D4 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x120 DUP2 ADD PUSH2 0x45A4 DUP3 DUP13 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x45B1 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3618 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x45C3 DUP2 DUP11 PUSH2 0x3630 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x45D7 DUP2 DUP10 PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x45EB DUP2 DUP9 PUSH2 0x36F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x45FF DUP2 DUP8 PUSH2 0x3689 JUMP JUMPDEST SWAP1 POP PUSH2 0x460E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x461B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x462E DUP2 DUP5 PUSH2 0x37C9 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP2 ADD PUSH2 0x464C DUP3 DUP13 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4659 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x4666 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4673 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4680 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x468D PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x469A PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x46A7 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x46B5 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x37A6 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x41E3 DUP3 DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x46FC JUMPI PUSH1 0x0 DUP1 PUSH2 0x46F9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4723 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4720 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x474C JUMPI PUSH1 0x0 DUP1 PUSH2 0x4749 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE DUP2 SWAP1 PUSH1 0x20 SWAP1 KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x47A1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xD63 DUP2 PUSH2 0x4834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x4787 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x4797 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x47B3 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4819 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4801 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x161C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x2FA4 JUMPI INVALID JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x4787 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FA4 JUMPI PUSH1 0x0 DUP1 PUSH2 0x7F5 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x4792 JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x47AD JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x47B3 JUMP INVALID MSTORE8 PUSH6 0x6E617465416C PUSH17 0x68613A3A70726F706F73653A206F6E6520 PUSH13 0x6976652070726F706F73616C20 PUSH17 0x65722070726F706F7365722C20666F756E PUSH5 0x20616E2061 ",
              "sourceMap": "60:16415:0:-;;;5240:225;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;5240:225:0;;;;;;;;;;;;;;;;;;;;;5381:9;5352:8;:39;:8;:39;;:::i;:::-;;-1:-1:-1;;;;;5352:39:0;;;;;-1:-1:-1;;;;;5352:39:0;;;;;;:::i;:::-;;;;5422:5;5401:4;;:27;;;;;:::i;:::-;;-1:-1:-1;;;;;5401:27:0;;;;;-1:-1:-1;;;;;5401:27:0;;;;;;:::i;:::-;;;;5449:9;5438:8;;:20;;;;;:::i;:::-;;-1:-1:-1;;;;;5438:20:0;;;;;-1:-1:-1;;;;;5438:20:0;;;;;;:::i;:::-;;;;5240:225;;;60:16415;;;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;242:1;231:9;227:17;295:4;284:9;277:23;362:6;355:4;344:9;340:20;333:36;424:1;407:143;436:6;431:3;428:15;407:143;;;536:3;528:6;524:16;518:23;486:30;;;505:4;486:30;479:63;462:4;453:14;407:143;;;411:16;720:4;709:9;700:6;694:4;690:17;679:9;674:51;;;;;;;;;;;;;;;;;;;;;;;;;;0:821;;;60:16415:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;259:22;;521:1;504:100;533:4;528:3;525:13;504:100;;;598:1;577:19;;;570:30;557:4;548:14;504:100;;;508:16;0:607;;60:16415:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;219:2;212:4;201:9;197:20;190:32;284:1;273:9;269:2;258:9;253:33;;;;;;;;;;;;;;;;;;;;;;;;;;530:1;579:30;;566:4;513:100;;5:134;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:535;;;;295:2;283:9;274:7;270:23;266:32;263:2;;;311:1;308;301:12;;:::i;:::-;;;263:2;346:1;363:64;419:7;399:9;363:64;;;353:74;;325:108;464:2;482:64;538:7;529:6;518:9;514:22;482:64;;;472:74;;443:109;583:2;601:64;657:7;648:6;637:9;633:22;601:64;;;591:74;;562:109;257:424;;;;;;688:91;;-1:-1;;;;;848:54;;750:24;831:76;914:117;983:24;1001:5;983:24;;;976:5;973:35;963:2;;1022:1;1019;1012:12;;:::i;963:2::-;957:74;;;60:16415:0;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13CF08B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x15373E3D EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x17977C61 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x21F43E42 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x24BC1A64 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x328DD982 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x40E58EE5 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x452A9320 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x4634C61F EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x5794A68A EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x760FBC13 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x7BDBE4D0 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x91500671 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xB9A61961 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xD33219B4 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xDA35C664 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xDA95691A EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xDDF0B009 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xE23A9A52 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xFE0D94C1 EQ PUSH2 0x558 JUMPI JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x147 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 PUSH2 0x15C PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x463D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1A3 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1CE PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1DA PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x4426 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 PUSH2 0x1F9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x351B JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 PUSH2 0x224 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x3298 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 PUSH2 0x24D PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x67D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 PUSH2 0x26B PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 PUSH2 0x294 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x7FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x2C9 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x431D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2EB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0xB2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 PUSH2 0x309 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x320 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x4418 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 PUSH2 0x33F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0xD68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 PUSH2 0x368 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x374 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 PUSH2 0x393 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3554 JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 PUSH2 0x3BC PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x3C8 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x440A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 PUSH2 0x3E7 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 PUSH2 0x405 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x13B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 PUSH2 0x423 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x32C7 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 PUSH2 0x44C PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x1518 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 PUSH2 0x46A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x1527 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 PUSH2 0x488 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x3C8 PUSH2 0x1622 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4A6 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x162D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4C4 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1637 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4ED PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x210 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x1BBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 PUSH2 0x516 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x1AF PUSH2 0x1EE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 PUSH2 0x534 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH2 0x54B PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x4587 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH2 0x584 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x593 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH2 0x5B0 PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x7 ADD PUSH2 0x5BD PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x8 ADD PUSH2 0x5CA PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x9 ADD PUSH2 0x5D7 PUSH2 0x2786 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0xA ADD PUSH2 0x5E4 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0xB DUP3 ADD PUSH2 0x5F3 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xB ADD PUSH1 0x1 SWAP1 PUSH2 0x60D PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH2 0x7080 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x52756269636F6E2053656E617465 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH2 0x65E GAS PUSH2 0x657 PUSH2 0x27E1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2211 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x67A PUSH2 0x2786 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x689 SWAP1 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6A0 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x6C2 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E8 SWAP1 PUSH2 0x44E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x6F7 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x705 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND PUSH4 0x825F38F PUSH1 0x0 DUP1 PUSH2 0x727 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x779 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x78E PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x7A0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x7AD PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x7CA PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7F5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3475 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH11 0x18D0BF423C03D8DE000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD DUP2 PUSH1 0x4 ADD DUP3 PUSH1 0x5 ADD DUP4 PUSH1 0x6 ADD DUP4 DUP1 PUSH2 0x83C PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x85F PUSH2 0x2786 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x881 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x876 JUMPI JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 PUSH2 0x8BD PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x8E0 PUSH2 0x2786 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x900 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x8F7 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 PUSH2 0x923 PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA16 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0x95C PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x996 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA02 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D0 JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0x9C2 PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA02 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x9E7 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x93F JUMP JUMPDEST POP POP POP POP SWAP2 POP DUP1 DUP1 PUSH2 0xA26 PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB19 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0xA5F PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0xA99 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB05 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD3 JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0xAC5 PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB05 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0xAEA PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA42 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH2 0xB41 PUSH2 0x2786 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0xB4F JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP1 PUSH2 0x4447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xB7A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0xB DUP3 ADD PUSH2 0xB9B PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x7 ADD PUSH2 0xBC0 PUSH2 0x2786 JUMP JUMPDEST GAS PUSH2 0xBC9 PUSH2 0x295E JUMP JUMPDEST GT PUSH2 0xBD8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x8 ADD PUSH2 0xBE4 PUSH2 0x2786 JUMP JUMPDEST GAS PUSH2 0xBED PUSH2 0x295E JUMP JUMPDEST GT PUSH2 0xBFC JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0xA ADD PUSH2 0xC08 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x9 ADD PUSH2 0xC14 PUSH2 0x2786 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0xC32 JUMPI POP PUSH2 0xC24 PUSH2 0x7FA JUMP JUMPDEST DUP2 PUSH1 0x9 ADD PUSH2 0xC30 PUSH2 0x2786 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH2 0xC4D PUSH2 0x2786 JUMP JUMPDEST PUSH2 0xC5B JUMPI PUSH1 0x4 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB DUP3 ADD PUSH2 0xC69 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC82 JUMPI PUSH1 0x7 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST PUSH2 0xD45 DUP2 PUSH1 0x2 ADD PUSH2 0xC91 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9C PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC1A287E2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xCDF PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 PUSH2 0xCF1 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xCFE PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xD1A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD40 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH2 0x24B5 JUMP JUMPDEST GAS PUSH2 0xD4E PUSH2 0x2A6A JUMP JUMPDEST LT PUSH2 0xD5D JUMPI PUSH1 0x6 SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x5 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD73 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xD83 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x4507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xDB0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH2 0xDCF PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0xDF1 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEF9 JUMPI POP PUSH2 0xE09 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xE15 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND PUSH4 0x782D6FE1 PUSH1 0x0 PUSH1 0x1 DUP6 ADD PUSH2 0xE3A PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5D GAS PUSH2 0xE56 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x24F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP3 SWAP2 SWAP1 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xE8D PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 PUSH2 0xE9F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0xEAC PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0xEC8 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEEE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x35C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP1 PUSH2 0x4557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0xF24 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0xB DUP3 ADD DUP2 DUP2 PUSH2 0xF37 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0xF4C PUSH2 0x2AB0 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP1 PUSH2 0xF60 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x10C5 JUMPI PUSH1 0x0 DUP1 PUSH2 0xF74 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x591FCDFE DUP4 PUSH1 0x3 ADD DUP4 DUP2 PUSH2 0xFA0 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0xFA8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 PUSH2 0xFBD PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x4 ADD DUP5 DUP2 PUSH2 0xFDB PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0xFE3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0xFF5 PUSH2 0x2786 JUMP JUMPDEST DUP6 PUSH1 0x5 ADD DUP6 DUP2 PUSH2 0x1003 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x100B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP7 PUSH1 0x6 ADD DUP7 DUP2 PUSH2 0x1023 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x102B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP8 PUSH1 0x2 ADD PUSH2 0x1041 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1061 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x1076 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 PUSH2 0x1088 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x1095 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x10B2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0xF53 SWAP1 POP JUMP JUMPDEST POP PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x110E PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x112F SWAP1 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 DUP3 ADD SWAP1 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x52756269636F6E2053656E617465 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x116B PUSH2 0x252D JUMP JUMPDEST GAS PUSH4 0x996D79A5 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD SWAP3 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x11C1 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11AA JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11D7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x11FD SWAP1 PUSH2 0x41BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1219 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1246 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1283 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS PUSH2 0x129B PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x12B7 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EC SWAP1 PUSH2 0x4527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x12FB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1309 DUP2 DUP11 DUP11 PUSH2 0x2211 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x110E PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x132C PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x134E PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1374 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1383 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 DUP2 PUSH2 0x1395 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x7F5 PUSH2 0x2AB0 JUMP JUMPDEST PUSH1 0xA SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x13C8 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x13EA PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP1 PUSH2 0x4497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x141F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x142D PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND PUSH4 0x3A66F901 PUSH1 0x0 DUP1 PUSH2 0x144F PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1472 SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x14B6 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 PUSH2 0x14C8 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x14D5 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x14F2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7F5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH11 0x422CA8B0A00A425000000 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x1533 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS PUSH2 0x1555 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157B SWAP1 PUSH2 0x4537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x158A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1598 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE18B681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x15DD PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x15F2 JUMPI PUSH1 0x0 DUP1 PUSH2 0x15EF PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x15FC PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x161C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x1619 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x110E PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x67A PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x164D PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x782D6FE1 GAS PUSH2 0x1674 PUSH2 0x27E1 JUMP JUMPDEST PUSH2 0x1680 GAS PUSH2 0xE56 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169D SWAP3 SWAP2 SWAP1 PUSH2 0x41D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x16B0 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x16C2 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x16CF PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x16EB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1711 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x35C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x1749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1737 SWAP1 PUSH2 0x44D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1746 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP5 MLOAD DUP7 MLOAD EQ DUP1 ISZERO PUSH2 0x175B JUMPI POP DUP4 MLOAD DUP7 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1768 JUMPI POP DUP3 MLOAD DUP7 MLOAD EQ JUMPDEST PUSH2 0x1796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1784 SWAP1 PUSH2 0x4437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1793 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP6 MLOAD PUSH2 0x17C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B4 SWAP1 PUSH2 0x4487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x17C3 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x17CE PUSH2 0x13B7 JUMP JUMPDEST DUP7 MLOAD GT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EE SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x17FD PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 GAS PUSH2 0x180F PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1837 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 PUSH2 0x184A DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x185A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x188A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP1 PUSH2 0x44F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1887 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1898 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x18C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B6 SWAP1 PUSH2 0x4577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x18C5 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x18E0 GAS PUSH2 0x18D8 PUSH2 0x295E JUMP JUMPDEST PUSH2 0xD40 PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18F0 DUP3 PUSH2 0xD40 PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP2 PUSH2 0x18FF PUSH2 0x2786 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP4 ADD SWAP2 POP PUSH2 0x190E PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH2 0x1919 PUSH2 0x2AFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH2 0x192F PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD GAS PUSH2 0x193D PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 PUSH2 0x19B9 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP1 DUP2 PUSH2 0x19CF PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x19F1 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH2 0x1A05 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A21 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2B73 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A3C SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2BFD JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A57 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2C5D JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD PUSH2 0x1A72 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH2 0x1A84 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH2 0x1A98 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH2 0x1AAC PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH2 0x1AC0 PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xB DUP3 ADD PUSH1 0x1 DUP2 PUSH2 0x1AD7 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x1AEC PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH2 0x180 DUP3 ADD MLOAD PUSH1 0xB DUP3 ADD PUSH2 0x100 DUP2 PUSH2 0x1B05 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x1B1A PUSH2 0x2AB0 JUMP JUMPDEST POP DUP5 SWAP4 POP POP POP POP MLOAD PUSH1 0x5 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 PUSH2 0x1B55 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 DUP2 PUSH1 0x0 ADD MLOAD GAS PUSH2 0x1B87 PUSH2 0x27E1 JUMP JUMPDEST DUP13 DUP13 DUP13 DUP13 DUP10 DUP10 DUP15 PUSH1 0x40 MLOAD PUSH2 0x1BA3 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 MLOAD SWAP5 POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1BC8 DUP3 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1BD3 JUMPI INVALID JUMPDEST EQ PUSH2 0x1C02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF0 SWAP1 PUSH2 0x4457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1BFF PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1C6E GAS PUSH2 0x1C20 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C2B PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A42B8F8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0xCDF PUSH2 0x2827 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x3 ADD DUP1 PUSH2 0x1C80 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1E9D DUP4 PUSH1 0x3 ADD DUP3 DUP2 PUSH2 0x1C9A PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1CA2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 PUSH2 0x1CB7 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x4 ADD DUP4 DUP2 PUSH2 0x1CD5 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1CDD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1CEF PUSH2 0x2786 JUMP JUMPDEST DUP6 PUSH1 0x5 ADD DUP5 DUP2 PUSH2 0x1CFD PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1D05 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0x1D18 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x1D52 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1DBE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8C JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0x1D7E PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DBE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x1DA3 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 PUSH1 0x6 ADD DUP6 DUP2 PUSH2 0x1DD1 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x1DD9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 PUSH2 0x1DEC PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD DUP3 DUP1 PUSH2 0x1E26 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1E92 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E60 JUMPI PUSH2 0x100 DUP1 DUP4 PUSH2 0x1E52 PUSH2 0x2786 JUMP JUMPDEST DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH2 0x1E77 PUSH2 0x2786 JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E6E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C73 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x2 DUP5 ADD PUSH2 0x1EB4 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH32 0x9A2E42FD6722813D69113E7D0079D3D940171428DF7373DF9C7F7617CFDA2892 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10F5 SWAP3 SWAP2 SWAP1 PUSH2 0x46C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x689 SWAP1 PUSH2 0x41BC JUMP JUMPDEST PUSH2 0x1EFC PUSH2 0x2D2D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 PUSH2 0x1F3D PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 PUSH2 0x1F5B PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 PUSH2 0x1F79 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND SWAP1 MSTORE POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1FA2 DUP3 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FAD JUMPI INVALID JUMPDEST EQ PUSH2 0x1FDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FCA SWAP1 PUSH2 0x44C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x1FD9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0xB DUP3 ADD PUSH2 0x100 DUP2 PUSH2 0x1FFE PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x2013 PUSH2 0x2AB0 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP1 PUSH2 0x2027 PUSH2 0x2786 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x21D5 JUMPI PUSH1 0x0 DUP1 PUSH2 0x203B PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x825F38F DUP4 PUSH1 0x4 ADD DUP4 DUP2 PUSH2 0x2067 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x206F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x2081 PUSH2 0x2786 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP5 DUP2 PUSH2 0x208F PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x2097 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 PUSH2 0x20AC PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x4 ADD DUP6 DUP2 PUSH2 0x20CA PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x20D2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x20E4 PUSH2 0x2786 JUMP JUMPDEST DUP7 PUSH1 0x5 ADD DUP7 DUP2 PUSH2 0x20F2 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x20FA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP8 PUSH1 0x6 ADD DUP8 DUP2 PUSH2 0x2112 PUSH2 0x2786 JUMP JUMPDEST DUP2 LT PUSH2 0x211A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP9 PUSH1 0x2 ADD PUSH2 0x2130 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2150 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 PUSH2 0x2164 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2179 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2176 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x2183 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x21A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x21A0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x21CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3475 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x201A JUMP JUMPDEST POP PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F DUP3 PUSH1 0x40 MLOAD PUSH2 0x2205 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x221C DUP4 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2227 JUMPI INVALID JUMPDEST EQ PUSH2 0x2256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2244 SWAP1 PUSH2 0x4547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2253 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC DUP3 ADD PUSH1 0x20 MSTORE SWAP1 SWAP2 POP PUSH1 0x40 DUP2 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x228E PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP SWAP1 DIV AND ISZERO PUSH2 0x22C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B7 SWAP1 PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x22C6 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x22D6 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x782D6FE1 DUP8 DUP6 PUSH1 0x7 ADD PUSH2 0x2301 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231E SWAP3 SWAP2 SWAP1 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x2331 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2343 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x2350 PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x236F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x236C PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2392 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x35C5 JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0x23CD JUMPI PUSH2 0x23B8 DUP4 PUSH1 0x9 ADD PUSH2 0x23A9 PUSH2 0x2786 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x24B5 JUMP JUMPDEST DUP1 PUSH1 0x9 DUP6 ADD PUSH2 0x23C5 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH2 0x23ED JUMP JUMPDEST PUSH2 0x23DC DUP4 PUSH1 0xA ADD PUSH2 0x23A9 PUSH2 0x2786 JUMP JUMPDEST DUP1 PUSH1 0xA DUP6 ADD PUSH2 0x23E9 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 DUP3 DUP2 DUP2 PUSH2 0x23FA PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x240F PUSH2 0x2AB0 JUMP JUMPDEST POP DUP6 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0x2422 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 PUSH2 0x2437 PUSH2 0x2AB0 JUMP JUMPDEST POP DUP3 SWAP2 POP DUP4 SWAP1 POP PUSH3 0x10000 DUP2 PUSH2 0x244B PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 PUSH2 0x246D PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH32 0x877856338E13F63D0C36822FF0EF736B80934CD90574A3A5BC9262C39D217C46 DUP7 DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24A5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x424D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x24EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24DA SWAP1 PUSH2 0x44A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x24E9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2515 SWAP1 PUSH2 0x4567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2524 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH2 0x2539 PUSH2 0x2D4C JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x254A PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2B06537 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2581 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B3 SWAP2 SWAP1 PUSH2 0x436A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 PUSH2 0x25C6 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 PUSH2 0x25D8 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x25E5 PUSH2 0x29A4 JUMP JUMPDEST POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2604 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x2601 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2627 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3427 JUMP JUMPDEST ISZERO PUSH2 0x2656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2644 SWAP1 PUSH2 0x4517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH2 0x2653 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2661 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A66F901 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 PUSH2 0x26B9 PUSH2 0x2827 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x26CE JUMPI PUSH1 0x0 DUP1 PUSH2 0x26CB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP GAS PUSH2 0x26D8 PUSH2 0x2873 JUMP JUMPDEST POP POP POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 PUSH2 0x26F5 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1619 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH4 0x2A2A7ADB MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2753 JUMPI DUP1 DUP7 ADD MLOAD DUP3 DUP3 ADD PUSH1 0x40 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2738 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP8 PUSH1 0x64 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE POP POP POP JUMP JUMPDEST PUSH4 0x3DAA959 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x73509064 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x8435035B MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x85979F76 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x28A4 JUMP JUMPDEST DUP1 DUP1 DUP4 GT ISZERO PUSH2 0x1F91 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 DUP4 LT ISZERO PUSH2 0x1F91 JUMPI POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP8 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x28DC JUMPI DUP1 DUP10 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x28C4 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP11 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP13 DUP13 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x2931 DUP15 RETURNDATASIZE PUSH2 0x2894 JUMP JUMPDEST DUP14 ADD PUSH2 0x293D DUP2 DUP8 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2952 JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x293E JUMP JUMPDEST POP SWAP3 SWAP14 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x5A98C361 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x8540661F MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x29E8 JUMPI DUP1 DUP9 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29D0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP10 PUSH1 0xA4 ADD DUP5 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD RETURNDATASIZE PUSH1 0x0 DUP6 RETURNDATACOPY DUP12 DUP12 DUP3 PUSH1 0x60 DUP8 ADD CALLER POP PUSH1 0x0 PUSH1 0x4 GAS CALL POP MSIZE PUSH2 0x2A3D DUP14 RETURNDATASIZE PUSH2 0x2894 JUMP JUMPDEST DUP13 ADD PUSH2 0x2A49 DUP2 DUP8 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A5E JUMPI PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4A JUMP JUMPDEST POP SWAP3 SWAP13 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xBDBF8C36 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH4 0x22BD64C0 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP5 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP2 PUSH1 0x44 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2B7D PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2B87 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2BED JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BED JUMPI DUP3 MLOAD DUP3 PUSH1 0x1 DUP2 PUSH2 0x2BB9 PUSH2 0x2786 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 PUSH2 0x2BDB PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2D92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2C07 PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C11 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2C51 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C51 JUMPI DUP3 MLOAD DUP3 PUSH2 0x2C40 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2C2D JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2DCE JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2C67 PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C71 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2CB9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2CB9 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD PUSH2 0x2CA9 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2DF3 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2C8D JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2E83 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2CCF PUSH2 0x2786 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2CD9 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2D21 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2D21 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD PUSH2 0x2D11 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST POP PUSH2 0x2BF9 SWAP3 SWAP2 POP PUSH2 0x2F2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x90580256 MSIZE DUP2 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP4 CALLER PUSH1 0x0 SWAP1 GAS CALL PC PUSH1 0x1D ADD JUMPI RETURNDATASIZE PUSH1 0x1 EQ PC PUSH1 0xC ADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH3 0x123456 MSTORE PUSH1 0xEA PUSH2 0x109C MSTORE DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP4 POP PUSH1 0x20 PUSH2 0x27CA JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 PUSH2 0x2DAE PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 PUSH2 0x2DC3 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH2 0x2DE8 PUSH2 0x2AB0 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2DFD PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x2E44 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 PUSH2 0x2E3D PUSH2 0x2AB0 JUMP JUMPDEST POP POP PUSH2 0x2C51 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 PUSH2 0x2E53 PUSH2 0x2AB0 JUMP JUMPDEST POP POP DUP3 ISZERO PUSH2 0x2C51 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C51 JUMPI DUP3 MLOAD DUP3 PUSH2 0x2E72 PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E5F JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 PUSH2 0x2E9D DUP3 DUP3 PUSH2 0x2F52 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2E89 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x2EB0 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x2EF0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 PUSH2 0x2E3D PUSH2 0x2AB0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 PUSH2 0x2EFF PUSH2 0x2AB0 JUMP JUMPDEST POP POP DUP3 ISZERO PUSH2 0x2C51 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2C51 JUMPI DUP3 MLOAD DUP3 PUSH2 0x2F1E PUSH2 0x2AB0 JUMP JUMPDEST POP POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x620 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 PUSH2 0x2F49 DUP3 DUP3 PUSH2 0x2F52 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2F35 JUMP JUMPDEST POP DUP1 PUSH2 0x2F5C PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 PUSH2 0x2F78 PUSH2 0x2AB0 JUMP JUMPDEST POP POP DUP1 PUSH1 0x1F LT PUSH2 0x2F88 JUMPI POP PUSH2 0x2FA4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH2 0x2FA4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2DCE JUMP JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x483E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FCC JUMPI PUSH1 0x0 DUP1 PUSH2 0x2FC9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FDF PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST PUSH2 0x46D1 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 PUSH2 0x300A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 PUSH2 0x3023 DUP9 DUP3 PUSH2 0x2FA7 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3010 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x305D JUMPI PUSH1 0x0 DUP1 PUSH2 0x305A PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x306B PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x3093 DUP9 DUP3 PUSH2 0x31C5 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x307D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30C3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x30C0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x30D1 PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x30F9 DUP9 DUP3 PUSH2 0x31C5 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3129 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3126 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3137 PUSH2 0x2FDA DUP3 PUSH2 0x4704 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x3165 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3162 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3039 JUMPI DUP2 PUSH2 0x317B DUP9 DUP3 PUSH2 0x31AB JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3168 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x4858 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x4858 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x4861 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x4861 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31DF JUMPI PUSH1 0x0 DUP1 PUSH2 0x31DC PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31ED PUSH2 0x2FDA DUP3 PUSH2 0x472D JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3212 JUMPI PUSH1 0x0 DUP1 PUSH2 0x320F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x321D DUP4 DUP3 DUP5 PUSH2 0x47F2 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3240 JUMPI PUSH1 0x0 DUP1 PUSH2 0x323D PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 MLOAD PUSH2 0x324E PUSH2 0x2FDA DUP3 PUSH2 0x472D JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3273 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3270 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x321D DUP4 DUP3 DUP5 PUSH2 0x47FE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F91 DUP2 PUSH2 0x486A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x4873 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x32B0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x2FA7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32E3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x32E0 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32EF DUP6 DUP6 PUSH2 0x2FA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3300 DUP6 DUP3 DUP7 ADD PUSH2 0x31AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x332B JUMPI PUSH1 0x0 DUP1 PUSH2 0x3328 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x334A JUMPI PUSH1 0x0 DUP1 PUSH2 0x3347 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x3356 DUP9 DUP3 DUP10 ADD PUSH2 0x2FB2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x337B JUMPI PUSH1 0x0 DUP1 PUSH2 0x3378 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x3387 DUP9 DUP3 DUP10 ADD PUSH2 0x310F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33AC JUMPI PUSH1 0x0 DUP1 PUSH2 0x33A9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x33B8 DUP9 DUP3 DUP10 ADD PUSH2 0x30A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33DD JUMPI PUSH1 0x0 DUP1 PUSH2 0x33DA PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x33E9 DUP9 DUP3 DUP10 ADD PUSH2 0x3043 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x340E JUMPI PUSH1 0x0 DUP1 PUSH2 0x340B PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x341A DUP9 DUP3 DUP10 ADD PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3442 JUMPI PUSH1 0x0 DUP1 PUSH2 0x343F PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3469 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3466 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x31B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 PUSH2 0x348D PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x34AF JUMPI PUSH1 0x0 DUP1 PUSH2 0x34AC PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x32BF DUP5 DUP3 DUP6 ADD PUSH2 0x3226 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x34D3 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x31AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34FE JUMPI PUSH1 0x0 DUP1 PUSH2 0x34FB PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x350A DUP6 DUP6 PUSH2 0x31AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3300 DUP6 DUP3 DUP7 ADD PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3537 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3534 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3543 DUP6 DUP6 PUSH2 0x31AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3300 DUP6 DUP3 DUP7 ADD PUSH2 0x3191 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3575 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3572 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3581 DUP9 DUP9 PUSH2 0x31AB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3592 DUP9 DUP3 DUP10 ADD PUSH2 0x3191 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x35A3 DUP9 DUP3 DUP10 ADD PUSH2 0x327E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x35B4 DUP9 DUP3 DUP10 ADD PUSH2 0x31AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x341A DUP9 DUP3 DUP10 ADD PUSH2 0x31AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E0 JUMPI PUSH1 0x0 DUP1 PUSH2 0x35DD PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP5 PUSH2 0x3289 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F8 DUP4 DUP4 PUSH2 0x3627 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EC DUP4 DUP4 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F8 DUP4 DUP4 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x4787 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363B DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x3645 DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP PUSH2 0x3650 DUP4 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x367E JUMPI DUP2 MLOAD PUSH2 0x3668 DUP9 DUP3 PUSH2 0x35EC JUMP JUMPDEST SWAP8 POP PUSH2 0x3673 DUP4 PUSH2 0x475D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3654 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3694 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x369E DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x36B0 DUP6 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x36EA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x36CD DUP6 DUP3 PUSH2 0x3600 JUMP JUMPDEST SWAP5 POP PUSH2 0x36D8 DUP4 PUSH2 0x475D JUMP JUMPDEST PUSH1 0x20 SWAP11 SWAP1 SWAP11 ADD SWAP10 SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x36B4 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3702 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x370C DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x371E DUP6 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x36EA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x373B DUP6 DUP3 PUSH2 0x3600 JUMP JUMPDEST SWAP5 POP PUSH2 0x3746 DUP4 PUSH2 0x475D JUMP JUMPDEST PUSH1 0x20 SWAP11 SWAP1 SWAP11 ADD SWAP10 SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3763 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x376D DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP PUSH2 0x3778 DUP4 PUSH2 0x475D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x367E JUMPI DUP2 MLOAD PUSH2 0x3790 DUP9 DUP3 PUSH2 0x360C JUMP JUMPDEST SWAP8 POP PUSH2 0x379B DUP4 PUSH2 0x475D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x377C JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x4792 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x3621 PUSH2 0x37C4 DUP3 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37D4 DUP3 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x37DE DUP2 DUP6 PUSH2 0x477E JUMP JUMPDEST SWAP4 POP PUSH2 0x37EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x47FE JUMP JUMPDEST PUSH2 0x37F7 DUP2 PUSH2 0x482A JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x380C PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3823 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3849 JUMPI PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x7F PUSH1 0x2 DUP4 DIV AND PUSH2 0x3834 DUP2 DUP8 PUSH2 0x477E JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP2 MSTORE SWAP6 POP POP PUSH1 0x20 DUP6 ADD SWAP3 POP PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x2 DUP3 DIV PUSH2 0x3857 DUP2 DUP8 PUSH2 0x477E JUMP JUMPDEST SWAP6 POP PUSH2 0x3862 DUP6 PUSH2 0x4763 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3889 JUMPI DUP2 PUSH2 0x3876 PUSH2 0x2786 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3865 JUMP JUMPDEST DUP8 ADD SWAP5 POP POP POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47C6 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47D1 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47DC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x38BE PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3823 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x38D5 JUMPI PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x2 DUP3 DIV PUSH2 0x38E3 DUP2 DUP8 PUSH2 0x477E JUMP JUMPDEST SWAP6 POP PUSH2 0x38EE DUP6 PUSH2 0x4763 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3889 JUMPI DUP2 PUSH2 0x3902 PUSH2 0x2786 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x38F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3922 PUSH1 0x42 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A2070726F706F73616C2066 DUP2 MSTORE PUSH32 0x756E6374696F6E20696E666F726D6174696F6E206172697479206D69736D6174 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398C PUSH1 0x27 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A73746174653A20696E76616C69642070726F70 DUP2 MSTORE PUSH7 0x1BDCD85B081A59 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D5 PUSH1 0x42 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A71756575653A2070726F706F73616C2063616E DUP2 MSTORE PUSH32 0x206F6E6C79206265207175657565642069662069742069732073756363656564 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3F PUSH1 0x26 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A20746F6F206D616E792061 DUP2 MSTORE PUSH6 0x6374696F6E73 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A87 PUSH1 0x2 DUP4 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA5 PUSH1 0x34 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F61626469636174653A2073656E64657220 DUP2 MSTORE PUSH20 0x36BAB9BA1031329033B7BB1033BAB0B93234B0B7 PUSH1 0x61 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFB PUSH1 0x2A DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A206D7573742070726F7669 DUP2 MSTORE PUSH10 0x646520616374696F6E73 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B47 PUSH1 0x18 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH24 0x73657450656E64696E6741646D696E286164647265737329 PUSH1 0x40 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B7B PUSH1 0x48 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F717565756553657454696D656C6F636B50 DUP2 MSTORE PUSH32 0x656E64696E6741646D696E3A2073656E646572206D75737420626520676F7620 PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0x33BAB0B93234B0B7 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BEB PUSH1 0x11 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH17 0x6164646974696F6E206F766572666C6F77 PUSH1 0x78 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C18 PUSH1 0x43 DUP4 PUSH2 0xD63 JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C75696E74323536 DUP2 MSTORE PUSH32 0x20636861696E49642C6164647265737320766572696679696E67436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x637429 PUSH1 0xE8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x43 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C83 PUSH1 0x27 DUP4 PUSH2 0xD63 JUMP JUMPDEST PUSH32 0x42616C6C6F742875696E743235362070726F706F73616C49642C626F6F6C2073 DUP2 MSTORE PUSH7 0x7570706F727429 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CCC PUSH1 0x2B DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F63617374566F74653A20766F74657220616C DUP2 MSTORE PUSH11 0x1C9958591E481D9BDD1959 PUSH1 0xAA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D19 PUSH1 0x43 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A657865637574653A2070726F706F73616C2063 DUP2 MSTORE PUSH32 0x616E206F6E6C7920626520657865637574656420696620697420697320717565 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1D5959 PUSH1 0xEA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D84 PUSH1 0x3D DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A70726F706F73653A2070726F706F7365722076 DUP2 MSTORE PUSH32 0x6F7465732062656C6F772070726F706F73616C207468726573686F6C64000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE3 PUSH1 0x4A DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F6578656375746553657454696D656C6F63 DUP2 MSTORE PUSH32 0x6B50656E64696E6741646D696E3A2073656E646572206D75737420626520676F PUSH1 0x20 DUP3 ADD MSTORE PUSH10 0x3B1033BAB0B93234B0B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E55 PUSH1 0x56 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x487D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x489D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH22 0x1B1C9958591E481858DD1A5D99481C1C9BDC1BDCD85B PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EAF PUSH1 0x34 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A63616E63656C3A2063616E6E6F742063616E63 DUP2 MSTORE PUSH20 0x195B08195E1958DD5D1959081C1C9BDC1BDCD85B PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F05 PUSH1 0x42 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F71756575654F725265766572743A2070726F DUP2 MSTORE PUSH32 0x706F73616C20616374696F6E20616C7265616479207175657565642061742065 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7461 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6F PUSH1 0x2D DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A63617374566F746542795369673A20696E7661 DUP2 MSTORE PUSH13 0x6C6964207369676E6174757265 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBE PUSH1 0x37 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F5F61636365707441646D696E3A2073656E64 DUP2 MSTORE PUSH23 0x32B91036BAB9BA1031329033B7BB1033BAB0B93234B0B7 PUSH1 0x49 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4017 PUSH1 0x28 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A5F63617374566F74653A20766F74696E672069 DUP2 MSTORE PUSH8 0x1CC818DB1BDCD959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4061 PUSH1 0x2D DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH32 0x53656E617465416C7068613A3A63616E63656C3A2070726F706F736572206162 DUP2 MSTORE PUSH13 0x1BDD99481D1A1C995CDA1BDB19 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B0 PUSH1 0x15 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH21 0x7375627472616374696F6E20756E646572666C6F77 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E1 PUSH1 0x57 DUP4 PUSH2 0x477E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x487D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x489D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH23 0x1B1C9958591E481C195B991A5B99C81C1C9BDC1BDCD85B PUSH1 0x4A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD DUP2 MLOAD PUSH2 0x413F DUP5 DUP3 PUSH2 0x37A6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4152 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x37A6 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x161C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4177 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47AD JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47E7 JUMP JUMPDEST PUSH2 0x3621 DUP2 PUSH2 0x47B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418B DUP3 PUSH2 0x3A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x4197 DUP3 DUP6 PUSH2 0x37B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x41A7 DUP3 DUP5 PUSH2 0x37B8 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x3C76 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x41E3 DUP3 DUP6 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x24EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x41FE DUP3 DUP8 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x420B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x38AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x421C DUP2 PUSH2 0x3B3A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4230 DUP2 DUP6 PUSH2 0x37C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x41E3 DUP3 DUP6 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x425B DUP3 DUP8 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x4268 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4275 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x1BB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x416E JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x4290 DUP3 DUP9 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x429D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x42AF DUP2 DUP7 PUSH2 0x37C9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x42C3 DUP2 DUP6 PUSH2 0x37C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x42D2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x42EA DUP3 DUP9 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x42F7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4309 DUP2 DUP7 PUSH2 0x38B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x42C3 DUP2 DUP6 PUSH2 0x3801 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x432E DUP2 DUP8 PUSH2 0x3630 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4342 DUP2 DUP7 PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4356 DUP2 DUP6 PUSH2 0x36F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x42D2 DUP2 DUP5 PUSH2 0x3689 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x4386 DUP3 DUP8 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4393 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x43A0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x1BB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3627 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x43BB DUP3 DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x43C8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x32BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x37A6 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x43E3 DUP3 DUP8 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x43F0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4165 JUMP JUMPDEST PUSH2 0x43FD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x1BB4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x3898 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x38A1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x24EC DUP2 DUP5 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3915 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x397F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x39C8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3A32 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3A98 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3AEE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3B6E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3BDE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3D77 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3DD6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3EA2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3F62 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x3FB1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x400A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x4054 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x40A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x1F91 DUP2 PUSH2 0x40D4 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x1F91 DUP3 DUP5 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x120 DUP2 ADD PUSH2 0x45A4 DUP3 DUP13 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x45B1 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3618 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x45C3 DUP2 DUP11 PUSH2 0x3630 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x45D7 DUP2 DUP10 PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x45EB DUP2 DUP9 PUSH2 0x36F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x45FF DUP2 DUP8 PUSH2 0x3689 JUMP JUMPDEST SWAP1 POP PUSH2 0x460E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x461B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x37AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x462E DUP2 DUP5 PUSH2 0x37C9 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP2 ADD PUSH2 0x464C DUP3 DUP13 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4659 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3627 JUMP JUMPDEST PUSH2 0x4666 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4673 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x4680 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x468D PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x469A PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x46A7 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x37A6 JUMP JUMPDEST PUSH2 0x46B5 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x37A6 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x41E3 DUP3 DUP6 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x46FC JUMPI PUSH1 0x0 DUP1 PUSH2 0x46F9 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4723 JUMPI PUSH1 0x0 DUP1 PUSH2 0x4720 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x474C JUMPI PUSH1 0x0 DUP1 PUSH2 0x4749 PUSH2 0x271B JUMP JUMPDEST POP POP JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE DUP2 SWAP1 PUSH1 0x20 SWAP1 KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x47A1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xD63 DUP2 PUSH2 0x4834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x4787 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x4797 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F91 DUP3 PUSH2 0x47B3 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4819 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4801 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x161C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x2FA4 JUMPI INVALID JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x4787 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FA4 JUMPI PUSH1 0x0 DUP1 PUSH2 0x7F5 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x4792 JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x47AD JUMP JUMPDEST PUSH2 0x4847 DUP2 PUSH2 0x47B3 JUMP INVALID MSTORE8 PUSH6 0x6E617465416C PUSH17 0x68613A3A70726F706F73653A206F6E6520 PUSH13 0x6976652070726F706F73616C20 PUSH17 0x65722070726F706F7365722C20666F756E PUSH5 0x20616E2061 ",
              "sourceMap": "60:16415:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3768:45;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;3768:45:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1144:83;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;1144:83:0;;;:::i;:::-;;;;;;;;129:46;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;129:46:0;;;:::i;:::-;;;;;;;;12678:125;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;12678:125:0;;;;;;;;:::i;:::-;;3874:52;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;3874:52:0;;;;;;;;:::i;3996:152::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;3996:152:0;;;:::i;15506:460::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;15506:460:0;;;;;;;;:::i;314:88::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;314:88:0;;;:::i;10987:376::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;10987:376:0;;;;;;;;:::i;:::-;;;;;;;;;;;923:78;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;923:78:0;;;:::i;11556:1116::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;11556:1116:0;;;;;;;;:::i;:::-;;;;;;;;10049:932;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;10049:932:0;;;;;;;;:::i;1520:23::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;1520:23:0;;;:::i;:::-;;;;;;;;12809:893;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;12809:893:0;;;;;;;;:::i;1437:25::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;1437:25:0;;;:::i;:::-;;;;;;;;14842:198;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;14842:198:0;;;:::i;730:89::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;730:89:0;;;:::i;15046:454::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;15046:454:0;;;;;;;;:::i;522:93::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;522:93:0;;;:::i;14631:205::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;14631:205:0;;;:::i;1337:33::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;1337:33:0;;;:::i;1596:28::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;1596:28:0;;;:::i;5471:2667::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;5471:2667:0;;;;;;;;:::i;8144:703::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;8144:703:0;;;;;;;;:::i;4235:102::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;4235:102:0;;;:::i;11369:181::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;-1:-1;11369:181:0;;;;;;;;:::i;:::-;;;;;;;;9346:697;;;;;;;;;:::i;3768:45::-;;;;;;;;;;;-1:-1:-1;3768:45:0;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;3768:45:0;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;1144:83::-;1215:5;1144:83;;:::o;129:46::-;;;;;;;;;;;;-1:-1:-1;;;129:46:0;;;;;:::o;12678:125::-;12754:42;12764:10;;;:::i;:::-;12776;12788:7;12754:9;:42::i;:::-;12678:125;;:::o;3874:52::-;;;;;;;;;;;-1:-1:-1;3874:52:0;;:::i;:::-;;:::o;3996:152::-;4046:102;;;;;;;;;;;;;;3996:152;:::o;15506:460::-;15660:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;15660:8:0;-1:-1:-1;;;;;15646:22:0;:10;;;:::i;:::-;-1:-1:-1;;;;;15646:22:0;;15625:143;;;;-1:-1:-1;;;15625:143:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;15778:8;;;;:::i;:::-;-1:-1:-1;;;;;15778:8:0;;;;;;;;:27;15827:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;15827:8:0;15850:1;15916:15;15905:27;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15905:27:0;;;15946:3;15778:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;15778:181:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;15778:181:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15778:181:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15778:181:0;;;;;;;;;;15506:460;;:::o;314:88::-;384:11;314:88;:::o;10987:376::-;11249:18;11270:21;;;:9;:21;;11085:24;;;;;;;;11270:21;11249:18;11270:21;11249:42;;11309:1;:9;;11320:1;:8;;11330:1;:12;;11344:1;:11;;11301:55;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;11301:55:0;-1:-1:-1;;;;;11301:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10987:376;;;;;:::o;923:78::-;993:1;923:78;:::o;11556:1116::-;11612:13;11675:10;11658:13;;;:::i;:::-;:27;;:45;;;;;11702:1;11689:10;:14;11658:45;11637:131;;;;-1:-1:-1;;;11637:131:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;11778:25;11806:21;;;:9;:21;;;11778:25;11806:21;11778:49;-1:-1:-1;11841:17:0;;;;;;:::i;:::-;;;;;;;;11837:829;;;11881:22;11874:29;;;;;11837:829;11940:8;:19;;;;:::i;:::-;11924:12;;;:::i;:::-;:35;11920:746;;11982:21;11975:28;;;;;11920:746;12040:8;:17;;;;:::i;:::-;12024:12;;;:::i;:::-;:33;12020:646;;12080:20;12073:27;;;;;12020:646;12155:8;:21;;;;:::i;:::-;12134:8;:17;;;;:::i;:::-;:42;;:91;;;;12212:13;:11;:13::i;:::-;12192:8;:17;;;;:::i;:::-;:33;12134:91;12117:549;;;12257:22;12250:29;;;;;12117:549;12300:8;:12;;;;:::i;:::-;12296:370;;12340:23;12333:30;;;;;12296:370;12384:17;;;;;;:::i;:::-;;;;;;;;12380:286;;;12424:22;12417:29;;;;;12380:286;12499:45;12506:8;:12;;;;:::i;:::-;12520:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;12520:8:0;-1:-1:-1;;;;;12520:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;12520:23:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;12520:23:0;;;;;;101:4:-1;12520:23:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;12520:23:0;;;;;;;;;12499:6;:45::i;:::-;12480:15;;;:::i;:::-;:64;12463:203;;12576:21;12569:28;;;;;12463:203;12635:20;12628:27;;;11556:1116;;;;:::o;10049:932::-;10102:19;10124:17;10130:10;10124:5;:17::i;:::-;10102:39;-1:-1:-1;10181:22:0;10172:5;:31;;;;;;;;;;10151:130;;;;-1:-1:-1;;;10151:130:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;10292:25;10320:21;;;:9;:21;;;10292:25;10320:21;10292:49;-1:-1:-1;10386:8:0;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;10386:8:0;-1:-1:-1;;;;;10372:22:0;:10;;;:::i;:::-;-1:-1:-1;;;;;10372:22:0;;:142;;;;10495:19;:17;:19::i;:::-;10414:4;;;;:::i;:::-;-1:-1:-1;;;;;10414:4:0;;;;;;;;:18;10433:17;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;10433:17:0;10452:23;10459:12;;;:::i;:::-;10473:1;10452:6;:23::i;:::-;10414:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;10414:62:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;10414:62:0;;;;;;101:4:-1;10414:62:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10414:62:0;;;;;;;;;-1:-1:-1;;;;;10414:100:0;;10372:142;10351:234;;;;-1:-1:-1;;;10351:234:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;10616:4;10596:17;;;10616:4;10596:17;:24;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10635:9:0;;-1:-1:-1;;10630:301:0;10654:8;:16;;:23;;;:::i;:::-;;;10650:1;:27;10630:301;;;10698:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;10698:8:0;-1:-1:-1;;;;;10698:26:0;;10742:8;:16;;10759:1;10742:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;10742:19:0;10779:8;:15;;10795:1;10779:18;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;10815:8;:19;;10835:1;10815:22;;;:::i;:::-;;;;;;;;;;;;;;10855:8;:18;;10874:1;10855:21;;;:::i;:::-;;;;;;;;;;;;;;10894:8;:12;;;;:::i;:::-;10698:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;10698:222:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;-1:-1;;10679:3:0;;;;;-1:-1:-1;10630:301:0;;-1:-1:-1;10630:301:0;;;10946:28;10963:10;10946:28;;;;;;;;;;;;;;;10049:932;;;:::o;1520:23::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1520:23:0;;:::o;12809:893::-;12960:23;4046:102;;;;;;;;;;;;;;13110:4;;;;;;;;;;;-1:-1:-1;;;13110:4:0;;;;;13094:22;;;;;13138:12;:10;:12::i;:::-;13180:4;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;229:22;;491:1;474:100;503:4;498:3;495:13;474:100;;;568:1;547:19;;;540:30;527:4;518:14;474:100;;;478:16;0:577;;13025:178:0;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13025:178:0;;;12998:219;;;;;;12960:257;;13227:18;4285:52;;;;;;;;;;;;;;13298:10;13310:7;13270:48;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13270:48:0;;;13260:59;;;;;;13227:92;;13329:14;13414:15;13431:10;13385:57;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13385:57:0;;;13358:98;;;;;;13329:127;;13466:17;13486:26;13496:6;13504:1;13507;13510;13486:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;13486:26:0;;;;;;;;13466:46;-1:-1:-1;;;;;;13543:23:0;;13522:115;;;;-1:-1:-1;;;13522:115:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;13654:41;13664:9;13675:10;13687:7;13654:9;:41::i;:::-;13647:48;;;;12809:893;;;;;:::o;1437:25::-;;;;;:::i;14842:198::-;14916:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;14916:8:0;-1:-1:-1;;;;;14902:22:0;:10;;;:::i;:::-;-1:-1:-1;;;;;14902:22:0;;14881:121;;;;-1:-1:-1;;;14881:121:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;15031:1;15012:8;:21;:8;:21;;:::i;:::-;;-1:-1:-1;;;;;15012:21:0;;;;;-1:-1:-1;;;;;15012:21:0;;;;;;:::i;730:89::-;810:2;730:89;:::o;15046:454::-;15198:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;15198:8:0;-1:-1:-1;;;;;15184:22:0;:10;;;:::i;:::-;-1:-1:-1;;;;;15184:22:0;;15163:141;;;;-1:-1:-1;;;15163:141:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;15314:8;;;;:::i;:::-;-1:-1:-1;;;;;15314:8:0;;;;;;;;:25;15361:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;15361:8:0;15384:1;15450:15;15439:27;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15439:27:0;;;15480:3;15314:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;15314:179:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;15314:179:0;;;;;;101:4:-1;15314:179:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15314:179:0;;;;;;;;522:93;598:10;522:93;:::o;14631:205::-;14708:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;14708:8:0;-1:-1:-1;;;;;14694:22:0;:10;;;:::i;:::-;-1:-1:-1;;;;;14694:22:0;;14673:124;;;;-1:-1:-1;;;14673:124:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;14807:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;14807:8:0;-1:-1:-1;;;;;14807:20:0;;:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;14807:22:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;14807:22:0;;;;14631:205::o;1337:33::-;;;;;:::i;1596:28::-;;;;:::i;5471:2667::-;5682:7;5796:19;:17;:19::i;:::-;5722:4;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;5722:4:0;-1:-1:-1;;;;;5722:18:0;;5741:10;;;:::i;:::-;5753:23;5760:12;;;:::i;5753:23::-;5722:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;5722:55:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;5722:55:0;;;;;;101:4:-1;5722:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;5722:55:0;;;;;;;;;-1:-1:-1;;;;;5722:93:0;;5701:201;;;;-1:-1:-1;;;5701:201:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;5951:6;:13;5933:7;:14;:31;:86;;;;;6002:10;:17;5984:7;:14;:35;5933:86;:140;;;;;6057:9;:16;6039:7;:14;:34;5933:140;5912:253;;;;-1:-1:-1;;;5912:253:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;6196:7;:14;6175:108;;;;-1:-1:-1;;;6175:108:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;6332:23;:21;:23::i;:::-;6314:7;:14;:41;;6293:126;;;;-1:-1:-1;;;6293:126:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;6430:24;6457:17;:29;6475:10;;;:::i;:::-;-1:-1:-1;;;;;6457:29:0;-1:-1:-1;;;;;6457:29:0;;;;;;;;;;;;;;:::i;:::-;6430:56;-1:-1:-1;6500:21:0;;6496:560;;6537:42;6598:23;6604:16;6598:5;:23::i;:::-;6537:84;-1:-1:-1;6692:20:0;6660:28;:52;;;;;;;;;;6635:197;;;;-1:-1:-1;;;6635:197:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;6903:21;6871:28;:53;;;;;;;;;;6846:199;;;;-1:-1:-1;;;6846:199:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;6496:560;;7066:18;7087:35;7094:12;;;:::i;:::-;7108:13;:11;:13::i;7087:35::-;7066:56;;7132:16;7151:34;7158:10;7170:14;:12;:14::i;7151:34::-;7132:53;;7196:13;;:15;;;:::i;:::-;;;;;;-1:-1:-1;7196:15:0;;:::i;:::-;;;;7221:27;;:::i;:::-;7263:469;;;;;;;;7294:13;;;:::i;:::-;7263:469;;;;7335:10;;;:::i;:::-;-1:-1:-1;;;;;7263:469:0;;;;;7368:1;7263:469;;;;7396:7;7263:469;;;;7429:6;7263:469;;;;7465:10;7263:469;;;;7504:9;7263:469;;;;7543:10;7263:469;;;;7581:8;7263:469;;;;7617:1;7263:469;;;;7650:1;7263:469;;;;7679:5;7263:469;;;;;;7712:5;7263:469;;;;;7221:511;;7771:11;7743:9;:25;7753:11;:14;;;7743:25;;;;;;;;;;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;7743:39:0;;;;;-1:-1:-1;;;;;7743:39:0;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7834:11:0;;-1:-1:-1;;;;7834:14:0;7792:17;:39;7810:11;:20;;;-1:-1:-1;;;;;7792:39:0;-1:-1:-1;;;;;7792:39:0;;;;;;;;;;;;:56;;;;:::i;:::-;;;;7864:236;7893:11;:14;;;7921:10;;;:::i;:::-;7945:7;7966:6;7986:10;8010:9;8033:10;8057:8;8079:11;7864:236;;;;;;;;;;;;;;;;;;;;;;;8117:11;:14;8110:21;;;;;;5471:2667;;;;;;;;:::o;8144:703::-;8238:23;8217:17;8223:10;8217:5;:17::i;:::-;:44;;;;;;;;;8196:157;;;;-1:-1:-1;;;8196:157:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;8363:25;8391:21;;;:9;:21;;;8363:25;8391:21;8363:49;;8422:11;8436:41;8443:15;;;:::i;:::-;8460:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;8460:8:0;-1:-1:-1;;;;;8460:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;:::i;8436:41::-;8422:55;-1:-1:-1;8492:9:0;8487:280;8511:8;:16;;:23;;;:::i;:::-;;;8507:1;:27;8487:280;;;8555:201;8587:8;:16;;8604:1;8587:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;8587:19:0;8624:8;:15;;8640:1;8624:18;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;8660:8;:19;;8680:1;8660:22;;;:::i;:::-;;;;;;;;;;;;;;8555:201;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8700:8;:18;;8719:1;8700:21;;;:::i;:::-;;;;;;;;;;;;;;8555:201;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8739:3;8555:14;:201::i;:::-;8536:3;;8487:280;;;-1:-1:-1;8791:3:0;;8776:12;;;:18;;:::i;:::-;;;;8809:31;8824:10;8836:3;8809:31;;;;;;;;4235:102;4285:52;;;;;;11369:181;11469:14;;:::i;:::-;11506:21;;;;:9;:21;;;;;-1:-1:-1;;;;;11506:37:0;;;;;;:30;;;;;:37;;;;;11499:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11499:44:0;;;;;;;;;;-1:-1:-1;11499:44:0;-1:-1:-1;11369:181:0;;;;;:::o;9346:697::-;9450:20;9429:17;9435:10;9429:5;:17::i;:::-;:41;;;;;;;;;9408:155;;;;-1:-1:-1;;;9408:155:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;9573:25;9601:21;;;:9;:21;;;9573:25;9601:21;9573:49;-1:-1:-1;9652:4:0;9632:17;;;:24;:17;:24;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9671:9:0;;-1:-1:-1;;9666:328:0;9690:8;:16;;:23;;;:::i;:::-;;;9686:1;:27;9666:328;;;9734:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;9734:8:0;-1:-1:-1;;;;;9734:27:0;;9768:8;:15;;9784:1;9768:18;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;9805:8;:16;;9822:1;9805:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;9805:19:0;9842:8;:15;;9858:1;9842:18;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;9878:8;:19;;9898:1;9878:22;;;:::i;:::-;;;;;;;;;;;;;;9918:8;:18;;9937:1;9918:21;;;:::i;:::-;;;;;;;;;;;;;;9957:8;:12;;;;:::i;:::-;9734:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;9734:249:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;9734:249:0;;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9734:249:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9734:249:0;;;;;;;;;-1:-1:-1;9715:3:0;;9666:328;;;;10008:28;10025:10;10008:28;;;;;;;;;;;;;;;9346:697;;:::o;13708:917::-;13867:20;13846:17;13852:10;13846:5;:17::i;:::-;:41;;;;;;;;;13825:128;;;;-1:-1:-1;;;13825:128:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;13963:25;13991:21;;;:9;:21;;;13963:25;13991:21;-1:-1:-1;;;;;14048:24:0;;14022:23;14048:24;;;:17;;;:24;;13963:49;;-1:-1:-1;14048:24:0;14022:23;14048:24;14022:50;-1:-1:-1;14103:16:0;14022:50;14103:16;;:::i;:::-;;;;;;;;;;:25;14082:115;;;;-1:-1:-1;;;14082:115:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;14207:12;;14222:4;;;:::i;:::-;;;;;;-1:-1:-1;;;;;14222:4:0;-1:-1:-1;;;;;14222:18:0;;14241:5;14248:8;:19;;;;:::i;:::-;14222:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;14222:46:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;14222:46:0;;;;;;101:4:-1;14222:46:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;14222:46:0;;;;;;;;;14207:61;;14283:7;14279:181;;;14326:32;14333:8;:17;;;;:::i;:::-;14352:5;-1:-1:-1;;;;;14326:32:0;:6;:32::i;:::-;14306:52;:17;;;:52;;:::i;:::-;;;;14279:181;;;14413:36;14420:8;:21;;;;:::i;14413:36::-;14389:60;:21;;;:60;;:::i;:::-;;;;14279:181;14489:4;14470:7;14489:4;14470:7;:23;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14521:7:0;;-1:-1:-1;14503:7:0;;-1:-1:-1;14503:25:0;:7;:25;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14554:5:0;;-1:-1:-1;14538:7:0;;-1:-1:-1;14538:21:0;:7;:21;;:::i;:::-;;-1:-1:-1;;;;;14538:21:0;;;;;-1:-1:-1;;;;;14538:21:0;;;;;;:::i;:::-;;;;14575:43;14584:5;14591:10;14603:7;14612:5;14575:43;;;;;;;;;;;;;;;;;;13708:917;;;;;;:::o;15972:168::-;16033:7;16064:5;;;16087:6;;;;16079:36;;;;-1:-1:-1;;;16079:36:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;16132:1;15972:168;-1:-1:-1;;;15972:168:0:o;16146:149::-;16207:7;16239:1;16234;:6;;16226:40;;;;-1:-1:-1;;;16226:40:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;16283:5:0;;;16146:149::o;16301:172::-;16346:7;16365:15;16424:9;;;:::i;:::-;16413:20;-1:-1:-1;;16301:172:0;:::o;8853:487::-;9052:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;9052:8:0;-1:-1:-1;;;;;9052:27:0;;9118:6;9126:5;9133:9;9144:4;9150:3;9107:47;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9107:47:0;;;9097:58;;;;;;9052:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;9052:117:0;;;;:::i;:::-;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;9052:117:0;;;;;;101:4:-1;9052:117:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9052:117:0;;;;;;;;;9051:118;9030:231;;;;-1:-1:-1;;;9030:231:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;9271:8;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;9271:8:0;-1:-1:-1;;;;;9271:25:0;;9297:6;9305:5;9312:9;9323:4;9329:3;9271:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8:9:-1;5:2;;;30:1;27;20:12;;:::i;:::-;;;5:2;9271:62:0;;;;:::i;:::-;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;;:::i;:::-;;;5:2;9271:62:0;;;;;;101:4:-1;9271:62:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9271:62:0;;;;;;;;60:16415;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;242:1;231:9;227:17;295:4;284:9;277:23;362:6;355:4;344:9;340:20;333:36;424:1;407:143;436:6;431:3;428:15;407:143;;;536:3;528:6;524:16;518:23;486:30;;;505:4;486:30;479:63;462:4;453:14;407:143;;;411:16;720:4;709:9;700:6;694:4;690:17;679:9;674:51;;;;;;;;;;;;;;;;;;;;;;;;;;0:821;;;60:16415:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;259:22;;521:1;504:100;533:4;528:3;525:13;504:100;;;598:1;577:19;;;570:30;557:4;548:14;504:100;;60:16415:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;60:16415:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;252:2;241:9;237:2;226:9;221:34;;;;;;;;;;;;;;;;;;;;;;;;;;271:9;265:16;521:1;570:30;;259:22;-1:-1;557:4;504:100;;60:16415:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;188:107;;;241:5;253:17;;;250:2;;;-1:-1;283:6;;226:69;-1:-1;226:69;298:110;353:5;365:17;;;362:2;;;-1:-1;396:6;;337:71;-1:-1;337:71;;462:6;455:4;444:9;440:20;433:36;521:4;514;503:9;499:20;492:34;592:4;585;574:9;570:20;563:34;670:10;663:4;652:9;648:20;641:40;762:4;751:9;747:20;787:1;770:135;799:10;794:3;791:19;770:135;;;895:3;883:10;879:20;873:27;849:22;;;842:59;829:4;820:14;770:135;;;774:16;1304:4;1293:9;1280:10;1274:4;1270:21;1259:9;1254:55;;;;;;;;;;;;;;;;;;;;;;;;;;1354:9;1348:16;1463:4;1452:9;1448:20;1442:27;1707:16;1704:1;1693:9;1678:46;1792:9;1781;1754:25;1747:4;1736:9;1732:20;1727:75;;;;;;;1870:7;2034:32;2056:9;2038:16;2034:32;;;2024:9;2020:47;2087:31;2102:15;2091:9;2087:31;;;2070:123;2129:10;2124:3;2121:19;2070:123;;;2184:4;2172:17;;2159:4;2150:14;2070:123;;;-1:-1;2351:10;;-1:-1;;;;;;;60:16415:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;60:16415:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;462:6;455:4;444:9;440:20;433:36;521:4;514;503:9;499:20;492:34;592:4;585;574:9;570:20;563:34;670:10;663:4;652:9;648:20;641:40;762:4;751:9;747:20;787:1;770:135;799:10;794:3;791:19;770:135;;;895:3;883:10;879:20;873:27;849:22;;;842:59;829:4;820:14;770:135;;;774:16;1304:4;1293:9;1280:10;1274:4;1270:21;1259:9;1254:55;;;;;;;;;;;;;;;;;;;;;;;;;;1354:9;1348:16;1463:4;1452:9;1448:20;1442:27;1707:16;1704:1;1693:9;1678:46;1792:9;1781;1754:25;1747:4;1736:9;1732:20;1727:75;;;;;;;1870:7;2034:32;2056:9;2038:16;2034:32;;;2024:9;2020:47;2087:31;2102:15;2091:9;2087:31;;;2070:123;2129:10;2124:3;2121:19;2070:123;;;2184:4;2172:17;;2159:4;2150:14;2070:123;;;-1:-1;2351:10;;-1:-1;;;;;;;60:16415:0:o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;60:16415:0;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;184:2;180:1;169:9;165:17;158:29;219:2;212:4;201:9;197:20;190:32;284:1;273:9;269:2;258:9;253:33;;;;;;;;;;;;;;;;;;;;;;;;;;530:1;579:30;;566:4;513:100;;60:16415:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:16415:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;60:16415:0;;;;;-1:-1:-1;;;;;60:16415:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;60:16415:0;;;-1:-1:-1;60:16415:0;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;60:16415:0;;;-1:-1:-1;60:16415:0;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;60:16415:0;;;-1:-1:-1;60:16415:0;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;60:16415:0;;;-1:-1:-1;60:16415:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;20:10:-1;50:7;143:8;138:3;134:18;123:9;116:37;222:2;211:9;208:1;197:9;192:33;;;;;;;;;;;;;;;;;;;;;;;;;;241:9;235:16;491:1;540:30;;229:22;-1:-1;527:4;474:100;;60:16415:0;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;60:16415:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;160:707;;277:3;270:4;262:6;258:17;254:27;244:2;;295:1;292;285:12;;:::i;:::-;;;244:2;332:6;319:20;354:80;369:64;426:6;369:64;;;354:80;;;345:89;;451:5;476:6;469:5;462:21;506:4;498:6;494:17;484:27;;528:4;523:3;519:14;512:21;;581:6;628:3;620:4;612:6;608:17;603:3;599:27;596:36;593:2;;;645:1;642;635:12;;:::i;:::-;;;593:2;670:1;655:206;680:6;677:1;674:13;655:206;;;738:3;760:37;793:3;781:10;760:37;;;748:50;;-1:-1;821:4;812:14;;;;840;;;;;702:1;695:9;655:206;;;659:14;237:630;;;;;;;;891:693;;1013:3;1006:4;998:6;994:17;990:27;980:2;;1031:1;1028;1021:12;;:::i;:::-;;;980:2;1068:6;1055:20;1090:85;1105:69;1167:6;1105:69;;1090:85;1203:21;;;1247:4;1235:17;;;;1081:94;;-1:-1;1260:14;;1235:17;1355:1;1340:238;1365:6;1362:1;1359:13;1340:238;;;1448:3;1435:17;1427:6;1423:30;1472:42;1510:3;1498:10;1472:42;;;1460:55;;-1:-1;1538:4;1529:14;;;;1557;;;;;1387:1;1380:9;1340:238;;1609:696;;1732:3;1725:4;1717:6;1713:17;1709:27;1699:2;;1750:1;1747;1740:12;;:::i;:::-;;;1699:2;1787:6;1774:20;1809:86;1824:70;1887:6;1824:70;;1809:86;1923:21;;;1967:4;1955:17;;;;1800:95;;-1:-1;1980:14;;1955:17;2075:1;2060:239;2085:6;2082:1;2079:13;2060:239;;;2168:3;2155:17;2147:6;2143:30;2192:43;2231:3;2219:10;2192:43;;;2180:56;;-1:-1;2259:4;2250:14;;;;2278;;;;;2107:1;2100:9;2060:239;;2331:707;;2448:3;2441:4;2433:6;2429:17;2425:27;2415:2;;2466:1;2463;2456:12;;:::i;:::-;;;2415:2;2503:6;2490:20;2525:80;2540:64;2597:6;2540:64;;2525:80;2516:89;;2622:5;2647:6;2640:5;2633:21;2677:4;2669:6;2665:17;2655:27;;2699:4;2694:3;2690:14;2683:21;;2752:6;2799:3;2791:4;2783:6;2779:17;2774:3;2770:27;2767:36;2764:2;;;2816:1;2813;2806:12;;:::i;:::-;;;2764:2;2841:1;2826:206;2851:6;2848:1;2845:13;2826:206;;;2909:3;2931:37;2964:3;2952:10;2931:37;;;2919:50;;-1:-1;2992:4;2983:14;;;;3011;;;;;2873:1;2866:9;2826:206;;3046:124;3110:20;;3135:30;3110:20;3135:30;;3177:128;;3258:6;3252:13;3243:22;;3270:30;3294:5;3270:30;;3312:130;3379:20;;3404:33;3379:20;3404:33;;3449:134;;3533:6;3527:13;3518:22;;3545:33;3572:5;3545:33;;3591:432;;3688:3;3681:4;3673:6;3669:17;3665:27;3655:2;;3706:1;3703;3696:12;;:::i;:::-;;;3655:2;3743:6;3730:20;3765:60;3780:44;3817:6;3780:44;;3765:60;3756:69;;3845:6;3838:5;3831:21;3881:4;3873:6;3869:17;3914:4;3907:5;3903:16;3949:3;3940:6;3935:3;3931:16;3928:25;3925:2;;;3966:1;3963;3956:12;;:::i;:::-;;;3925:2;3976:41;4010:6;4005:3;4000;3976:41;;;3648:375;;;;;;;;4032:442;;4144:3;4137:4;4129:6;4125:17;4121:27;4111:2;;4162:1;4159;4152:12;;:::i;:::-;;;4111:2;4192:6;4186:13;4214:64;4229:48;4270:6;4229:48;;4214:64;4205:73;;4298:6;4291:5;4284:21;4334:4;4326:6;4322:17;4367:4;4360:5;4356:16;4402:3;4393:6;4388:3;4384:16;4381:25;4378:2;;;4419:1;4416;4409:12;;:::i;:::-;;;4378:2;4429:39;4461:6;4456:3;4451;4429:39;;5654:126;5719:20;;5744:31;5719:20;5744:31;;5787:132;;5870:6;5864:13;5855:22;;5882:32;5908:5;5882:32;;5926:241;;6030:2;6018:9;6009:7;6005:23;6001:32;5998:2;;;6046:1;6043;6036:12;;:::i;:::-;;;5998:2;6081:1;6098:53;6143:7;6123:9;6098:53;;;6088:63;5992:175;-1:-1;;;;5992:175;6174:366;;;6295:2;6283:9;6274:7;6270:23;6266:32;6263:2;;;6311:1;6308;6301:12;;:::i;:::-;;;6263:2;6346:1;6363:53;6408:7;6388:9;6363:53;;;6353:63;;6325:97;6453:2;6471:53;6516:7;6507:6;6496:9;6492:22;6471:53;;;6461:63;;6432:98;6257:283;;;;;;6547:1415;;;;;;6840:3;6828:9;6819:7;6815:23;6811:33;6808:2;;;6857:1;6854;6847:12;;:::i;:::-;;;6808:2;6892:31;;-1:-1;;;;;6932:30;;6929:2;;;6975:1;6972;6965:12;;:::i;:::-;;;6929:2;6995:78;7065:7;7056:6;7045:9;7041:22;6995:78;;;6985:88;;6871:208;7138:2;7127:9;7123:18;7110:32;-1:-1;;;;;7154:6;7151:30;7148:2;;;7194:1;7191;7184:12;;:::i;:::-;;;7148:2;7214:78;7284:7;7275:6;7264:9;7260:22;7214:78;;;7204:88;;7089:209;7357:2;7346:9;7342:18;7329:32;-1:-1;;;;;7373:6;7370:30;7367:2;;;7413:1;7410;7403:12;;:::i;:::-;;;7367:2;7433:84;7509:7;7500:6;7489:9;7485:22;7433:84;;;7423:94;;7308:215;7582:2;7571:9;7567:18;7554:32;-1:-1;;;;;7598:6;7595:30;7592:2;;;7638:1;7635;7628:12;;:::i;:::-;;;7592:2;7658:83;7733:7;7724:6;7713:9;7709:22;7658:83;;;7648:93;;7533:214;7806:3;7795:9;7791:19;7778:33;-1:-1;;;;;7823:6;7820:30;7817:2;;;7863:1;7860;7853:12;;:::i;:::-;;;7817:2;7883:63;7938:7;7929:6;7918:9;7914:22;7883:63;;;7873:73;;7757:195;6802:1160;;;;;;;;;7969:257;;8081:2;8069:9;8060:7;8056:23;8052:32;8049:2;;;8097:1;8094;8087:12;;:::i;:::-;;;8049:2;8132:1;8149:61;8202:7;8182:9;8149:61;;8233:263;;8348:2;8336:9;8327:7;8323:23;8319:32;8316:2;;;8364:1;8361;8354:12;;:::i;:::-;;;8316:2;8399:1;8416:64;8472:7;8452:9;8416:64;;8503:360;;8627:2;8615:9;8606:7;8602:23;8598:32;8595:2;;;8643:1;8640;8633:12;;:::i;:::-;;;8595:2;8688:9;8678:24;-1:-1;;;;;8714:6;8711:30;8708:2;;;8754:1;8751;8744:12;;:::i;:::-;;;8708:2;8774:73;8839:7;8830:6;8819:9;8815:22;8774:73;;8870:241;;8974:2;8962:9;8953:7;8949:23;8945:32;8942:2;;;8990:1;8987;8980:12;;:::i;:::-;;;8942:2;9025:1;9042:53;9087:7;9067:9;9042:53;;9388:366;;;9509:2;9497:9;9488:7;9484:23;9480:32;9477:2;;;9525:1;9522;9515:12;;:::i;:::-;;;9477:2;9560:1;9577:53;9622:7;9602:9;9577:53;;;9567:63;;9539:97;9667:2;9685:53;9730:7;9721:6;9710:9;9706:22;9685:53;;9761:360;;;9879:2;9867:9;9858:7;9854:23;9850:32;9847:2;;;9895:1;9892;9885:12;;:::i;:::-;;;9847:2;9930:1;9947:53;9992:7;9972:9;9947:53;;;9937:63;;9909:97;10037:2;10055:50;10097:7;10088:6;10077:9;10073:22;10055:50;;10128:733;;;;;;10295:3;10283:9;10274:7;10270:23;10266:33;10263:2;;;10312:1;10309;10302:12;;:::i;:::-;;;10263:2;10347:1;10364:53;10409:7;10389:9;10364:53;;;10354:63;;10326:97;10454:2;10472:50;10514:7;10505:6;10494:9;10490:22;10472:50;;;10462:60;;10433:95;10559:2;10577:51;10620:7;10611:6;10600:9;10596:22;10577:51;;;10567:61;;10538:96;10665:2;10683:53;10728:7;10719:6;10708:9;10704:22;10683:53;;;10673:63;;10644:98;10773:3;10792:53;10837:7;10828:6;10817:9;10813:22;10792:53;;10868:261;;10982:2;10970:9;10961:7;10957:23;10953:32;10950:2;;;10998:1;10995;10988:12;;:::i;:::-;;;10950:2;11033:1;11050:63;11105:7;11085:9;11050:63;;11137:173;;11224:46;11266:3;11258:6;11224:46;;;-1:-1;;11299:4;11290:14;;11217:93;11319:177;;11430:60;11486:3;11478:6;11430:60;;11695:173;;11782:46;11824:3;11816:6;11782:46;;11876:142;11967:45;12006:5;11967:45;;;11962:3;11955:58;11949:69;;;12025:103;12098:24;12116:5;12098:24;;12286:690;;12431:54;12479:5;12431:54;;;12498:86;12577:6;12572:3;12498:86;;;12491:93;;12605:56;12655:5;12605:56;;;12681:7;12709:1;12694:260;12719:6;12716:1;12713:13;12694:260;;;12786:6;12780:13;12807:63;12866:3;12851:13;12807:63;;;12800:70;;12887:60;12940:6;12887:60;;;12877:70;-1:-1;;12741:1;12734:9;12694:260;;;-1:-1;12967:3;;12410:566;-1:-1;;;;;12410:566;13011:888;;13166:59;13219:5;13166:59;;;13238:91;13322:6;13317:3;13238:91;;;13231:98;;13352:3;13394:4;13386:6;13382:17;13377:3;13373:27;13421:61;13476:5;13421:61;;;13502:7;13530:1;13515:345;13540:6;13537:1;13534:13;13515:345;;;13602:9;13596:4;13592:20;13587:3;13580:33;13647:6;13641:13;13669:74;13738:4;13723:13;13669:74;;;13661:82;;13760:65;13818:6;13760:65;;;13848:4;13839:14;;;;;13750:75;-1:-1;;13562:1;13555:9;13515:345;;;-1:-1;13873:4;;13145:754;-1:-1;;;;;;;13145:754;13936:896;;14093:60;14147:5;14093:60;;;14166:92;14251:6;14246:3;14166:92;;;14159:99;;14281:3;14323:4;14315:6;14311:17;14306:3;14302:27;14350:62;14406:5;14350:62;;;14432:7;14460:1;14445:348;14470:6;14467:1;14464:13;14445:348;;;14532:9;14526:4;14522:20;14517:3;14510:33;14577:6;14571:13;14599:76;14670:4;14655:13;14599:76;;;14591:84;;14692:66;14751:6;14692:66;;;14781:4;14772:14;;;;;14682:76;-1:-1;;14492:1;14485:9;14445:348;;14871:690;;15016:54;15064:5;15016:54;;;15083:86;15162:6;15157:3;15083:86;;;15076:93;;15190:56;15240:5;15190:56;;;15266:7;15294:1;15279:260;15304:6;15301:1;15298:13;15279:260;;;15371:6;15365:13;15392:63;15451:3;15436:13;15392:63;;;15385:70;;15472:60;15525:6;15472:60;;;15462:70;-1:-1;;15326:1;15319:9;15279:260;;15569:94;15636:21;15651:5;15636:21;;15781:113;15864:24;15882:5;15864:24;;15901:152;16002:45;16022:24;16040:5;16022:24;;;16002:45;;16060:343;;16170:38;16202:5;16170:38;;;16220:70;16283:6;16278:3;16220:70;;;16213:77;;16295:52;16340:6;16335:3;16328:4;16321:5;16317:16;16295:52;;;16368:29;16390:6;16368:29;;;16359:39;;;;16150:253;-1:-1;;;16150:253;16755:818;;16872:5;16866:12;;:::i;:::-;16906:1;16891:17;;16914:247;;;;17172:1;17167:400;;;;16884:683;;16914:247;16992:4;16988:1;16977:9;16973:17;16969:28;17011:70;17074:6;17069:3;17011:70;;;-1:-1;;17100:25;;17088:38;;17004:77;-1:-1;;17149:4;17140:14;;;-1:-1;16914:247;;17167:400;17236:1;17225:9;17221:17;17252:70;17315:6;17310:3;17252:70;;;17245:77;;17344:37;17375:5;17344:37;;;17397:1;17405:130;17419:6;17416:1;17413:13;17405:130;;;17484:7;17478:14;;:::i;:::-;17465:11;;;17458:35;17525:1;17512:15;;;;;17441:4;17434:12;17405:130;;;17549:11;;;-1:-1;;;16884:683;;16842:731;;;;;;17581:170;17686:59;17739:5;17686:59;;17943:156;18041:52;18087:5;18041:52;;18106:142;18197:45;18236:5;18197:45;;19306:823;;19425:5;19419:12;;:::i;:::-;19459:1;19444:17;;19467:248;;;;19726:1;19721:402;;;;19437:686;;19721:402;19790:1;19779:9;19775:17;19806:71;19870:6;19865:3;19806:71;;;19799:78;;19899:38;19931:5;19899:38;;;19953:1;19961:130;19975:6;19972:1;19969:13;19961:130;;;20040:7;20034:14;;:::i;:::-;20021:11;;;20014:35;20081:1;20068:15;;;;;19997:4;19990:12;19961:130;;20138:440;;20298:67;20362:2;20357:3;20298:67;;;20398:34;20378:55;;20467:34;20462:2;20453:12;;20446:56;-1:-1;;;20531:2;20522:12;;20515:26;20569:2;20560:12;;20284:294;-1:-1;;20284:294;20587:376;;20747:67;20811:2;20806:3;20747:67;;;20847:34;20827:55;;-1:-1;;;20911:2;20902:12;;20895:31;20954:2;20945:12;;20733:230;-1:-1;;20733:230;20972:440;;21132:67;21196:2;21191:3;21132:67;;;21232:34;21212:55;;21301:34;21296:2;21287:12;;21280:56;-1:-1;;;21365:2;21356:12;;21349:26;21403:2;21394:12;;21118:294;-1:-1;;21118:294;21421:375;;21581:67;21645:2;21640:3;21581:67;;;21681:34;21661:55;;-1:-1;;;21745:2;21736:12;;21729:30;21787:2;21778:12;;21567:229;-1:-1;;21567:229;21805:398;;21983:84;22065:1;22060:3;21983:84;;;-1:-1;;;22080:87;;22195:1;22186:11;;21969:234;-1:-1;;21969:234;22212:389;;22372:67;22436:2;22431:3;22372:67;;;22472:34;22452:55;;-1:-1;;;22536:2;22527:12;;22520:44;22592:2;22583:12;;22358:243;-1:-1;;22358:243;22610:379;;22770:67;22834:2;22829:3;22770:67;;;22870:34;22850:55;;-1:-1;;;22934:2;22925:12;;22918:34;22980:2;22971:12;;22756:233;-1:-1;;22756:233;22998:324;;23158:67;23222:2;23217:3;23158:67;;;-1:-1;;;23238:47;;23313:2;23304:12;;23144:178;-1:-1;;23144:178;23331:446;;23491:67;23555:2;23550:3;23491:67;;;23591:34;23571:55;;23660:34;23655:2;23646:12;;23639:56;-1:-1;;;23724:2;23715:12;;23708:32;23768:2;23759:12;;23477:300;-1:-1;;23477:300;23786:317;;23946:67;24010:2;24005:3;23946:67;;;-1:-1;;;24026:40;;24094:2;24085:12;;23932:171;-1:-1;;23932:171;24112:477;;24290:85;24372:2;24367:3;24290:85;;;24408:34;24388:55;;24477:34;24472:2;24463:12;;24456:56;-1:-1;;;24541:2;24532:12;;24525:27;24580:2;24571:12;;24276:313;-1:-1;;24276:313;24598:412;;24776:85;24858:2;24853:3;24776:85;;;24894:34;24874:55;;-1:-1;;;24958:2;24949:12;;24942:31;25001:2;24992:12;;24762:248;-1:-1;;24762:248;25019:380;;25179:67;25243:2;25238:3;25179:67;;;25279:34;25259:55;;-1:-1;;;25343:2;25334:12;;25327:35;25390:2;25381:12;;25165:234;-1:-1;;25165:234;25408:441;;25568:67;25632:2;25627:3;25568:67;;;25668:34;25648:55;;25737:34;25732:2;25723:12;;25716:56;-1:-1;;;25801:2;25792:12;;25785:27;25840:2;25831:12;;25554:295;-1:-1;;25554:295;25858:398;;26018:67;26082:2;26077:3;26018:67;;;26118:34;26098:55;;26187:31;26182:2;26173:12;;26166:53;26247:2;26238:12;;26004:252;-1:-1;;26004:252;26265:448;;26425:67;26489:2;26484:3;26425:67;;;26525:34;26505:55;;26594:34;26589:2;26580:12;;26573:56;-1:-1;;;26658:2;26649:12;;26642:34;26704:2;26695:12;;26411:302;-1:-1;;26411:302;26722:460;;26882:67;26946:2;26941:3;26882:67;;;-1:-1;;;;;;;;;;;26962:55;;-1:-1;;;;;;;;;;;27046:2;27037:12;;27030:56;-1:-1;;;27115:2;27106:12;;27099:46;27173:2;27164:12;;26868:314;-1:-1;;26868:314;27191:389;;27351:67;27415:2;27410:3;27351:67;;;27451:34;27431:55;;-1:-1;;;27515:2;27506:12;;27499:44;27571:2;27562:12;;27337:243;-1:-1;;27337:243;27589:440;;27749:67;27813:2;27808:3;27749:67;;;27849:34;27829:55;;27918:34;27913:2;27904:12;;27897:56;-1:-1;;;27982:2;27973:12;;27966:26;28020:2;28011:12;;27735:294;-1:-1;;27735:294;28038:382;;28198:67;28262:2;28257:3;28198:67;;;28298:34;28278:55;;-1:-1;;;28362:2;28353:12;;28346:37;28411:2;28402:12;;28184:236;-1:-1;;28184:236;28429:392;;28589:67;28653:2;28648:3;28589:67;;;28689:34;28669:55;;-1:-1;;;28753:2;28744:12;;28737:47;28812:2;28803:12;;28575:246;-1:-1;;28575:246;28830:377;;28990:67;29054:2;29049:3;28990:67;;;29090:34;29070:55;;-1:-1;;;29154:2;29145:12;;29138:32;29198:2;29189:12;;28976:231;-1:-1;;28976:231;29216:382;;29376:67;29440:2;29435:3;29376:67;;;29476:34;29456:55;;-1:-1;;;29540:2;29531:12;;29524:37;29589:2;29580:12;;29362:236;-1:-1;;29362:236;29607:321;;29767:67;29831:2;29826:3;29767:67;;;-1:-1;;;29847:44;;29919:2;29910:12;;29753:175;-1:-1;;29753:175;29937:461;;30097:67;30161:2;30156:3;30097:67;;;-1:-1;;;;;;;;;;;30177:55;;-1:-1;;;;;;;;;;;30261:2;30252:12;;30245:56;-1:-1;;;30330:2;30321:12;;30314:47;30389:2;30380:12;;30083:315;-1:-1;;30083:315;30469:620;30608:4;30599:14;;30688:5;30678:23;30707:57;30753:3;30735:12;30707:57;;;30628:142;30846:4;30839:5;30835:16;30829:23;30858:57;30909:4;30904:3;30900:14;30886:12;30858:57;;;30780:141;30995:4;30988:5;30984:16;30978:23;31007:61;31062:4;31057:3;31053:14;31039:12;31007:61;;31326:107;31405:22;31421:5;31405:22;;31440:124;31522:36;31552:5;31522:36;;31571:100;31642:23;31659:5;31642:23;;31678:650;;31933:148;32077:3;31933:148;;;31926:155;;32092:75;32163:3;32154:6;32092:75;;;32189:2;32184:3;32180:12;32173:19;;32203:75;32274:3;32265:6;32203:75;;;-1:-1;32300:2;32291:12;;31914:414;-1:-1;;31914:414;32335:372;;32534:148;32678:3;32534:148;;32714:372;;32913:148;33057:3;32913:148;;33093:213;33211:2;33196:18;;33225:71;33200:9;33269:6;33225:71;;33313:340;33467:2;33452:18;;33481:79;33456:9;33533:6;33481:79;;;33571:72;33639:2;33628:9;33624:18;33615:6;33571:72;;33660:953;33989:3;33974:19;;34004:71;33978:9;34048:6;34004:71;;;34086:80;34162:2;34151:9;34147:18;34138:6;34086:80;;;34214:9;34208:4;34204:20;34199:2;34188:9;34184:18;34177:48;34239:131;34365:4;34239:131;;;34231:139;;34418:9;34412:4;34408:20;34403:2;34392:9;34388:18;34381:48;34443:76;34514:4;34505:6;34443:76;;;34435:84;;34530:73;34598:3;34587:9;34583:19;34574:6;34530:73;;34620:324;34766:2;34751:18;;34780:71;34755:9;34824:6;34780:71;;34951:533;35146:3;35131:19;;35161:71;35135:9;35205:6;35161:71;;;35243:72;35311:2;35300:9;35296:18;35287:6;35243:72;;;35326:66;35388:2;35377:9;35373:18;35364:6;35326:66;;;35403:71;35470:2;35459:9;35455:18;35446:6;35403:71;;35491:831;35759:3;35744:19;;35774:71;35748:9;35818:6;35774:71;;;35856:72;35924:2;35913:9;35909:18;35900:6;35856:72;;;35976:9;35970:4;35966:20;35961:2;35950:9;35946:18;35939:48;36001:78;36074:4;36065:6;36001:78;;;35993:86;;36127:9;36121:4;36117:20;36112:2;36101:9;36097:18;36090:48;36152:76;36223:4;36214:6;36152:76;;;36144:84;;36239:73;36307:3;36296:9;36292:19;36283:6;36239:73;;;35730:592;;;;;;;;;36329:819;36591:3;36576:19;;36606:71;36580:9;36650:6;36606:71;;;36688:72;36756:2;36745:9;36741:18;36732:6;36688:72;;;36808:9;36802:4;36798:20;36793:2;36782:9;36778:18;36771:48;36833:75;36903:4;36894:6;36833:75;;;36825:83;;36956:9;36950:4;36946:20;36941:2;36930:9;36926:18;36919:48;36981:73;37049:4;37040:6;36981:73;;37155:1183;37579:3;37594:47;;;37564:19;;37655:108;37564:19;37749:6;37655:108;;;37647:116;;37811:9;37805:4;37801:20;37796:2;37785:9;37781:18;37774:48;37836:108;37939:4;37930:6;37836:108;;;37828:116;;37992:9;37986:4;37982:20;37977:2;37966:9;37962:18;37955:48;38017:120;38132:4;38123:6;38017:120;;;38009:128;;38185:9;38179:4;38175:20;38170:2;38159:9;38155:18;38148:48;38210:118;38323:4;38314:6;38210:118;;38345:213;38463:2;38448:18;;38477:71;38452:9;38521:6;38477:71;;38565:547;38767:3;38752:19;;38782:71;38756:9;38826:6;38782:71;;;38864:72;38932:2;38921:9;38917:18;38908:6;38864:72;;;38947;39015:2;39004:9;39000:18;38991:6;38947:72;;;39030;39098:2;39087:9;39083:18;39074:6;39030:72;;39119:423;39287:2;39272:18;;39301:71;39276:9;39345:6;39301:71;;;39383:72;39451:2;39440:9;39436:18;39427:6;39383:72;;;39466:66;39528:2;39517:9;39513:18;39504:6;39466:66;;39549:539;39747:3;39732:19;;39762:71;39736:9;39806:6;39762:71;;;39844:68;39908:2;39897:9;39893:18;39884:6;39844:68;;;39923:72;39991:2;39980:9;39976:18;39967:6;39923:72;;;40006;40074:2;40063:9;40059:18;40050:6;40006:72;;40095:257;40235:2;40220:18;;40249:93;40224:9;40315:6;40249:93;;40631:243;40764:2;40749:18;;40778:86;40753:9;40837:6;40778:86;;40881:293;41015:2;41029:47;;;41000:18;;41090:74;41000:18;41150:6;41090:74;;41181:407;41372:2;41386:47;;;41357:18;;41447:131;41357:18;41447:131;;41595:407;41786:2;41800:47;;;41771:18;;41861:131;41771:18;41861:131;;42009:407;42200:2;42214:47;;;42185:18;;42275:131;42185:18;42275:131;;42423:407;42614:2;42628:47;;;42599:18;;42689:131;42599:18;42689:131;;42837:407;43028:2;43042:47;;;43013:18;;43103:131;43013:18;43103:131;;43251:407;43442:2;43456:47;;;43427:18;;43517:131;43427:18;43517:131;;43665:407;43856:2;43870:47;;;43841:18;;43931:131;43841:18;43931:131;;44079:407;44270:2;44284:47;;;44255:18;;44345:131;44255:18;44345:131;;44493:407;44684:2;44698:47;;;44669:18;;44759:131;44669:18;44759:131;;44907:407;45098:2;45112:47;;;45083:18;;45173:131;45083:18;45173:131;;45321:407;45512:2;45526:47;;;45497:18;;45587:131;45497:18;45587:131;;45735:407;45926:2;45940:47;;;45911:18;;46001:131;45911:18;46001:131;;46149:407;46340:2;46354:47;;;46325:18;;46415:131;46325:18;46415:131;;46563:407;46754:2;46768:47;;;46739:18;;46829:131;46739:18;46829:131;;46977:407;47168:2;47182:47;;;47153:18;;47243:131;47153:18;47243:131;;47391:407;47582:2;47596:47;;;47567:18;;47657:131;47567:18;47657:131;;47805:407;47996:2;48010:47;;;47981:18;;48071:131;47981:18;48071:131;;48219:407;48410:2;48424:47;;;48395:18;;48485:131;48395:18;48485:131;;48633:407;48824:2;48838:47;;;48809:18;;48899:131;48809:18;48899:131;;49047:407;49238:2;49252:47;;;49223:18;;49313:131;49223:18;49313:131;;49461:407;49652:2;49666:47;;;49637:18;;49727:131;49637:18;49727:131;;49875:305;50039:2;50024:18;;50053:117;50028:9;50143:6;50053:117;;50407:1847;50999:3;50984:19;;51014:71;50988:9;51058:6;51014:71;;;51096:80;51172:2;51161:9;51157:18;51148:6;51096:80;;;51224:9;51218:4;51214:20;51209:2;51198:9;51194:18;51187:48;51249:108;51352:4;51343:6;51249:108;;;51241:116;;51405:9;51399:4;51395:20;51390:2;51379:9;51375:18;51368:48;51430:108;51533:4;51524:6;51430:108;;;51422:116;;51587:9;51581:4;51577:20;51571:3;51560:9;51556:19;51549:49;51612:120;51727:4;51718:6;51612:120;;;51604:128;;51781:9;51775:4;51771:20;51765:3;51754:9;51750:19;51743:49;51806:118;51919:4;51910:6;51806:118;;;51798:126;;51935:73;52003:3;51992:9;51988:19;51979:6;51935:73;;;52019;52087:3;52076:9;52072:19;52063:6;52019:73;;;52141:9;52135:4;52131:20;52125:3;52114:9;52110:19;52103:49;52166:78;52239:4;52230:6;52166:78;;;52158:86;50970:1284;-1:-1;;;;;;;;;;;50970:1284;52261:1083;52591:3;52576:19;;52606:71;52580:9;52650:6;52606:71;;;52688:72;52756:2;52745:9;52741:18;52732:6;52688:72;;;52771;52839:2;52828:9;52824:18;52815:6;52771:72;;;52854;52922:2;52911:9;52907:18;52898:6;52854:72;;;52937:73;53005:3;52994:9;52990:19;52981:6;52937:73;;;53021;53089:3;53078:9;53074:19;53065:6;53021:73;;;53105;53173:3;53162:9;53158:19;53149:6;53105:73;;;53189:67;53251:3;53240:9;53236:19;53227:6;53189:67;;;53267;53329:3;53318:9;53314:19;53305:6;53267:67;;;52562:782;;;;;;;;;;;;;53351:324;53497:2;53482:18;;53511:71;53486:9;53555:6;53511:71;;53682:256;;53744:2;53738:9;53728:19;;53782:4;53774:6;53770:17;53881:6;53869:10;53866:22;-1:-1;;;;;53833:10;53830:34;53827:62;53824:2;;;53902:1;53899;53892:12;;:::i;:::-;;;53824:2;53918;53911:22;53722:216;;-1:-1;53722:216;53945:304;;-1:-1;;;;;54096:6;54093:30;54090:2;;;54136:1;54133;54126:12;;:::i;:::-;;;54090:2;-1:-1;54171:4;54159:17;;;54224:15;;54027:222;55200:317;;-1:-1;;;;;55331:6;55328:30;55325:2;;;55371:1;55368;55361:12;;:::i;:::-;;;55325:2;-1:-1;55502:4;55438;55415:17;;;;-1:-1;;55411:33;55492:15;;55262:255;56506:151;56630:4;56621:14;;56578:79;57149:157;;57243:14;;;57216:3;;57285:4;;57272:18;57264:26;57202:104;-1:-1;;57202:104;57478:137;;57587:5;57581:12;57571:22;57552:63;-1:-1;;57552:63;59043:178;59161:19;;;59210:4;59201:14;;59154:67;60621:91;;60683:24;60701:5;60683:24;;60719:85;60785:13;60778:21;;60761:43;60890:140;60969:5;60975:50;60969:5;60975:50;;61037:121;-1:-1;;;;;61099:54;;61082:76;61244:81;61315:4;61304:16;;61287:38;61332:104;-1:-1;;;;;61393:38;;61376:60;61443:129;;61530:37;61561:5;61579:165;;61680:59;61733:5;61680:59;;62209:140;;62303:41;62338:5;62303:41;;62356:116;;62443:24;62461:5;62443:24;;62722:106;;62800:23;62817:5;62800:23;;62836:145;62917:6;62912:3;62907;62894:30;-1:-1;62973:1;62955:16;;62948:27;62887:94;62990:268;63055:1;63062:101;63076:6;63073:1;63070:13;63062:101;;;63152:1;63147:3;63143:11;63137:18;63124:11;;;63117:39;63098:2;63091:10;63062:101;;;63178:6;63175:1;63172:13;63169:2;;;-1:-1;;63243:1;63225:16;;63218:27;63039:219;63347:97;63435:2;63415:14;-1:-1;;63411:28;;63395:49;63452:108;63538:1;63531:5;63528:12;63518:2;;63544:9;63567:117;63636:24;63654:5;63636:24;;;63629:5;63626:35;63616:2;;63675:1;63672;63665:12;;:::i;63691:111::-;63757:21;63772:5;63757:21;;63809:117;63878:24;63896:5;63878:24;;64057:113;64124:22;64140:5;64124:22;;64177:115;64245:23;64262:5;64245:23;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3724200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "BALLOT_TYPEHASH()": "infinite",
                "DOMAIN_TYPEHASH()": "infinite",
                "RBCN()": "infinite",
                "__abdicate()": "infinite",
                "__acceptAdmin()": "infinite",
                "__executeSetTimelockPendingAdmin(address,uint256)": "infinite",
                "__queueSetTimelockPendingAdmin(address,uint256)": "infinite",
                "cancel(uint256)": "infinite",
                "castVote(uint256,bool)": "infinite",
                "castVoteBySig(uint256,bool,uint8,bytes32,bytes32)": "infinite",
                "execute(uint256)": "infinite",
                "getActions(uint256)": "infinite",
                "getReceipt(uint256,address)": "infinite",
                "guardian()": "infinite",
                "latestProposalIds(address)": "infinite",
                "name()": "infinite",
                "proposalCount()": "infinite",
                "proposalMaxOperations()": "infinite",
                "proposalThreshold()": "infinite",
                "proposals(uint256)": "infinite",
                "propose(address[],uint256[],string[],bytes[],string)": "infinite",
                "queue(uint256)": "infinite",
                "quorumVotes()": "infinite",
                "state(uint256)": "infinite",
                "timelock()": "infinite",
                "votingDelay()": "infinite",
                "votingPeriod()": "infinite"
              },
              "internal": {
                "_castVote(address,uint256,bool)": "infinite",
                "_queueOrRevert(address,uint256,string memory,bytes memory,uint256)": "infinite",
                "add256(uint256,uint256)": "infinite",
                "getChainId()": "infinite",
                "sub256(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "BALLOT_TYPEHASH()": "deaaa7cc",
              "DOMAIN_TYPEHASH()": "20606b70",
              "RBCN()": "5794a68a",
              "__abdicate()": "760fbc13",
              "__acceptAdmin()": "b9a61961",
              "__executeSetTimelockPendingAdmin(address,uint256)": "21f43e42",
              "__queueSetTimelockPendingAdmin(address,uint256)": "91500671",
              "cancel(uint256)": "40e58ee5",
              "castVote(uint256,bool)": "15373e3d",
              "castVoteBySig(uint256,bool,uint8,bytes32,bytes32)": "4634c61f",
              "execute(uint256)": "fe0d94c1",
              "getActions(uint256)": "328dd982",
              "getReceipt(uint256,address)": "e23a9a52",
              "guardian()": "452a9320",
              "latestProposalIds(address)": "17977c61",
              "name()": "06fdde03",
              "proposalCount()": "da35c664",
              "proposalMaxOperations()": "7bdbe4d0",
              "proposalThreshold()": "b58131b0",
              "proposals(uint256)": "013cf08b",
              "propose(address[],uint256[],string[],bytes[],string)": "da95691a",
              "queue(uint256)": "ddf0b009",
              "quorumVotes()": "24bc1a64",
              "state(uint256)": "3e4f49e6",
              "timelock()": "d33219b4",
              "votingDelay()": "3932abb1",
              "votingPeriod()": "02a251a3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16-develop.2020.12.10+ovm+commit.25adf37d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RBCN_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RBCN\",\"outputs\":[{\"internalType\":\"contract RBCNInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"__abdicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"__acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__executeSetTimelockPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__queueSetTimelockPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct SenateAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum SenateAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocksLOWERED FOR TESTING PURPOSES NOT LAUNCH READY\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/SenateAlpha.sol\":\"SenateAlpha\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/SenateAlpha.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\ncontract SenateAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Rubicon Senate\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint256) {\\n        return 30000000e18;\\n    } // 30,000,000 = 3% of RBCN\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint256) {\\n        return 5000000e18;\\n    } // 5,000,000 = 0.5% of RBCN\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint256) {\\n        return 10;\\n    } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint256) {\\n        return 1;\\n    } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    /// @notice LOWERED FOR TESTING PURPOSES NOT LAUNCH READY\\n    function votingPeriod() public pure returns (uint256) {\\n        return 28800;\\n    } // ~5 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the Rubicon Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Rubicon governance token\\n    RBCNInterface public RBCN;\\n\\n    /// @notice The address of the Senate Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] values;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH =\\n        keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(\\n        address voter,\\n        uint256 proposalId,\\n        bool support,\\n        uint256 votes\\n    );\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    constructor(\\n        address timelock_,\\n        address RBCN_,\\n        address guardian_\\n    ) public {\\n        timelock = TimelockInterface(timelock_);\\n        RBCN = RBCNInterface(RBCN_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        require(\\n            RBCN.getPriorVotes(msg.sender, sub256(block.number, 1)) >\\n                proposalThreshold(),\\n            \\\"SenateAlpha::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"SenateAlpha::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(\\n            targets.length != 0,\\n            \\\"SenateAlpha::propose: must provide actions\\\"\\n        );\\n        require(\\n            targets.length <= proposalMaxOperations(),\\n            \\\"SenateAlpha::propose: too many actions\\\"\\n        );\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState =\\n                state(latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"SenateAlpha::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"SenateAlpha::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay());\\n        uint256 endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal =\\n            Proposal({\\n                id: proposalCount,\\n                proposer: msg.sender,\\n                eta: 0,\\n                targets: targets,\\n                values: values,\\n                signatures: signatures,\\n                calldatas: calldatas,\\n                startBlock: startBlock,\\n                endBlock: endBlock,\\n                forVotes: 0,\\n                againstVotes: 0,\\n                canceled: false,\\n                executed: false\\n            });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint256 proposalId) public {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"SenateAlpha::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"SenateAlpha::_queueOrRevert: proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint256 proposalId) public payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"SenateAlpha::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint256 proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(\\n            state != ProposalState.Executed,\\n            \\\"SenateAlpha::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                RBCN.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\\n                proposalThreshold(),\\n            \\\"SenateAlpha::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint256 proposalId)\\n        public\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint256 proposalId, address voter)\\n        public\\n        view\\n        returns (Receipt memory)\\n    {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > 0,\\n            \\\"SenateAlpha::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            proposal.forVotes <= proposal.againstVotes ||\\n            proposal.forVotes < quorumVotes()\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (\\n            block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())\\n        ) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint256 proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        bool support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name)),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n        bytes32 structHash =\\n            keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"SenateAlpha::castVoteBySig: invalid signature\\\"\\n        );\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(\\n        address voter,\\n        uint256 proposalId,\\n        bool support\\n    ) internal {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"SenateAlpha::_castVote: voting is closed\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(\\n            receipt.hasVoted == false,\\n            \\\"SenateAlpha::_castVote: voter already voted\\\"\\n        );\\n        uint96 votes = RBCN.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__acceptAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__abdicate: sender must be gov guardian\\\"\\n        );\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.queueTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.executeTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface RBCNInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x76ebc42b7dc259b5cdf56f728603be367abafd111e3a2f42f7ac26636951cdca\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 47,
                "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                "label": "timelock",
                "offset": 0,
                "slot": "0",
                "type": "t_contract(TimelockInterface)1233"
              },
              {
                "astId": 49,
                "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                "label": "RBCN",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(RBCNInterface)1243"
              },
              {
                "astId": 51,
                "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                "label": "guardian",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 53,
                "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                "label": "proposalCount",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 108,
                "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                "label": "proposals",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_struct(Proposal)88_storage)"
              },
              {
                "astId": 112,
                "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                "label": "latestProposalIds",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_array(t_bytes_storage)dyn_storage": {
                "base": "t_bytes_storage",
                "encoding": "dynamic_array",
                "label": "bytes[]",
                "numberOfBytes": "32"
              },
              "t_array(t_string_storage)dyn_storage": {
                "base": "t_string_storage",
                "encoding": "dynamic_array",
                "label": "string[]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)dyn_storage": {
                "base": "t_uint256",
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes_storage": {
                "encoding": "bytes",
                "label": "bytes",
                "numberOfBytes": "32"
              },
              "t_contract(RBCNInterface)1243": {
                "encoding": "inplace",
                "label": "contract RBCNInterface",
                "numberOfBytes": "20"
              },
              "t_contract(TimelockInterface)1233": {
                "encoding": "inplace",
                "label": "contract TimelockInterface",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_struct(Receipt)95_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct SenateAlpha.Receipt)",
                "numberOfBytes": "32",
                "value": "t_struct(Receipt)95_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_uint256,t_struct(Proposal)88_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct SenateAlpha.Proposal)",
                "numberOfBytes": "32",
                "value": "t_struct(Proposal)88_storage"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(Proposal)88_storage": {
                "encoding": "inplace",
                "label": "struct SenateAlpha.Proposal",
                "members": [
                  {
                    "astId": 55,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "id",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 57,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "proposer",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_address"
                  },
                  {
                    "astId": 59,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "eta",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 62,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "targets",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_array(t_address)dyn_storage"
                  },
                  {
                    "astId": 65,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "values",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_array(t_uint256)dyn_storage"
                  },
                  {
                    "astId": 68,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "signatures",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_array(t_string_storage)dyn_storage"
                  },
                  {
                    "astId": 71,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "calldatas",
                    "offset": 0,
                    "slot": "6",
                    "type": "t_array(t_bytes_storage)dyn_storage"
                  },
                  {
                    "astId": 73,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "startBlock",
                    "offset": 0,
                    "slot": "7",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 75,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "endBlock",
                    "offset": 0,
                    "slot": "8",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 77,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "forVotes",
                    "offset": 0,
                    "slot": "9",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 79,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "againstVotes",
                    "offset": 0,
                    "slot": "10",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 81,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "canceled",
                    "offset": 0,
                    "slot": "11",
                    "type": "t_bool"
                  },
                  {
                    "astId": 83,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "executed",
                    "offset": 1,
                    "slot": "11",
                    "type": "t_bool"
                  },
                  {
                    "astId": 87,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "receipts",
                    "offset": 0,
                    "slot": "12",
                    "type": "t_mapping(t_address,t_struct(Receipt)95_storage)"
                  }
                ],
                "numberOfBytes": "416"
              },
              "t_struct(Receipt)95_storage": {
                "encoding": "inplace",
                "label": "struct SenateAlpha.Receipt",
                "members": [
                  {
                    "astId": 90,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "hasVoted",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 92,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "support",
                    "offset": 1,
                    "slot": "0",
                    "type": "t_bool"
                  },
                  {
                    "astId": 94,
                    "contract": "contracts/SenateAlpha.sol:SenateAlpha",
                    "label": "votes",
                    "offset": 2,
                    "slot": "0",
                    "type": "t_uint96"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint96": {
                "encoding": "inplace",
                "label": "uint96",
                "numberOfBytes": "12"
              }
            }
          },
          "userdoc": {
            "methods": {
              "proposalMaxOperations()": {
                "notice": "The maximum number of actions that can be included in a proposal"
              },
              "proposalThreshold()": {
                "notice": "The number of votes required in order for a voter to become a proposer"
              },
              "quorumVotes()": {
                "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
              },
              "votingDelay()": {
                "notice": "The delay before voting on a proposal may take place, once proposed"
              },
              "votingPeriod()": {
                "notice": "The duration of voting on a proposal, in blocksLOWERED FOR TESTING PURPOSES NOT LAUNCH READY"
              }
            }
          }
        },
        "TimelockInterface": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "GRACE_PERIOD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "acceptAdmin",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "signature",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "cancelTransaction",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "delay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "signature",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "executeTransaction",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "payable": true,
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "signature",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "queueTransaction",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ],
              "name": "queuedTransactions",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "GRACE_PERIOD()": "c1a287e2",
              "acceptAdmin()": "0e18b681",
              "cancelTransaction(address,uint256,string,bytes,uint256)": "591fcdfe",
              "delay()": "6a42b8f8",
              "executeTransaction(address,uint256,string,bytes,uint256)": "0825f38f",
              "queueTransaction(address,uint256,string,bytes,uint256)": "3a66f901",
              "queuedTransactions(bytes32)": "f2b06537"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16-develop.2020.12.10+ovm+commit.25adf37d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"cancelTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"queueTransaction\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"queuedTransactions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SenateAlpha.sol\":\"TimelockInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/SenateAlpha.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\ncontract SenateAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Rubicon Senate\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint256) {\\n        return 30000000e18;\\n    } // 30,000,000 = 3% of RBCN\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint256) {\\n        return 5000000e18;\\n    } // 5,000,000 = 0.5% of RBCN\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint256) {\\n        return 10;\\n    } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint256) {\\n        return 1;\\n    } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    /// @notice LOWERED FOR TESTING PURPOSES NOT LAUNCH READY\\n    function votingPeriod() public pure returns (uint256) {\\n        return 28800;\\n    } // ~5 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the Rubicon Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Rubicon governance token\\n    RBCNInterface public RBCN;\\n\\n    /// @notice The address of the Senate Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] values;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH =\\n        keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(\\n        address voter,\\n        uint256 proposalId,\\n        bool support,\\n        uint256 votes\\n    );\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    constructor(\\n        address timelock_,\\n        address RBCN_,\\n        address guardian_\\n    ) public {\\n        timelock = TimelockInterface(timelock_);\\n        RBCN = RBCNInterface(RBCN_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        require(\\n            RBCN.getPriorVotes(msg.sender, sub256(block.number, 1)) >\\n                proposalThreshold(),\\n            \\\"SenateAlpha::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"SenateAlpha::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(\\n            targets.length != 0,\\n            \\\"SenateAlpha::propose: must provide actions\\\"\\n        );\\n        require(\\n            targets.length <= proposalMaxOperations(),\\n            \\\"SenateAlpha::propose: too many actions\\\"\\n        );\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState =\\n                state(latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"SenateAlpha::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"SenateAlpha::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay());\\n        uint256 endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal =\\n            Proposal({\\n                id: proposalCount,\\n                proposer: msg.sender,\\n                eta: 0,\\n                targets: targets,\\n                values: values,\\n                signatures: signatures,\\n                calldatas: calldatas,\\n                startBlock: startBlock,\\n                endBlock: endBlock,\\n                forVotes: 0,\\n                againstVotes: 0,\\n                canceled: false,\\n                executed: false\\n            });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint256 proposalId) public {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"SenateAlpha::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"SenateAlpha::_queueOrRevert: proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint256 proposalId) public payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"SenateAlpha::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint256 proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(\\n            state != ProposalState.Executed,\\n            \\\"SenateAlpha::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                RBCN.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\\n                proposalThreshold(),\\n            \\\"SenateAlpha::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint256 proposalId)\\n        public\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint256 proposalId, address voter)\\n        public\\n        view\\n        returns (Receipt memory)\\n    {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > 0,\\n            \\\"SenateAlpha::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            proposal.forVotes <= proposal.againstVotes ||\\n            proposal.forVotes < quorumVotes()\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (\\n            block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())\\n        ) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint256 proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        bool support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name)),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n        bytes32 structHash =\\n            keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"SenateAlpha::castVoteBySig: invalid signature\\\"\\n        );\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(\\n        address voter,\\n        uint256 proposalId,\\n        bool support\\n    ) internal {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"SenateAlpha::_castVote: voting is closed\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(\\n            receipt.hasVoted == false,\\n            \\\"SenateAlpha::_castVote: voter already voted\\\"\\n        );\\n        uint96 votes = RBCN.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__acceptAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__abdicate: sender must be gov guardian\\\"\\n        );\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.queueTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.executeTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface RBCNInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x76ebc42b7dc259b5cdf56f728603be367abafd111e3a2f42f7ac26636951cdca\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/SenateAlpha.sol:149:14: Warning: OVM: Taking arguments in constructor may result in unsafe code.\n    ) public {\n             ^\n",
        "message": "OVM: Taking arguments in constructor may result in unsafe code.",
        "severity": "warning",
        "sourceLocation": {
          "end": 5343,
          "file": "contracts/SenateAlpha.sol",
          "start": 5342
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "formattedMessage": "contracts/SenateAlpha.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
        "message": "Experimental features are turned on. Do not use experimental features on live deployments.",
        "severity": "warning",
        "sourceLocation": {
          "end": 58,
          "file": "contracts/SenateAlpha.sol",
          "start": 25
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/SenateAlpha.sol": {
        "ast": {
          "absolutePath": "contracts/SenateAlpha.sol",
          "exportedSymbols": {
            "RBCNInterface": [
              1243
            ],
            "SenateAlpha": [
              1169
            ],
            "TimelockInterface": [
              1233
            ]
          },
          "id": 1244,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:0"
            },
            {
              "id": 2,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "25:33:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1169,
              "linearizedBaseContracts": [
                1169
              ],
              "name": "SenateAlpha",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 5,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "129:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "52756269636f6e2053656e617465",
                    "id": 4,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "159:16:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3c6d2bc16b0832e3e5f3e5582d807669d9b0f16f73600f6265942b6d7dc160ad",
                      "typeString": "literal_string \"Rubicon Senate\""
                    },
                    "value": "Rubicon Senate"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "367:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "3330303030303030653138",
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "384:11:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30000000000000000000000000_by_1",
                            "typeString": "int_const 30000000000000000000000000"
                          },
                          "value": "30000000e18"
                        },
                        "functionReturnParameters": 9,
                        "id": 11,
                        "nodeType": "Return",
                        "src": "377:18:0"
                      }
                    ]
                  },
                  "documentation": "@notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "quorumVotes",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "334:2:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "358:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "357:9:0"
                  },
                  "scope": 1169,
                  "src": "314:88:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 20,
                    "nodeType": "Block",
                    "src": "581:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "35303030303030653138",
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "598:10:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000000000000000000000000_by_1",
                            "typeString": "int_const 5000000000000000000000000"
                          },
                          "value": "5000000e18"
                        },
                        "functionReturnParameters": 17,
                        "id": 19,
                        "nodeType": "Return",
                        "src": "591:17:0"
                      }
                    ]
                  },
                  "documentation": "@notice The number of votes required in order for a voter to become a proposer",
                  "id": 21,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposalThreshold",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "548:2:0"
                  },
                  "returnParameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "572:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "572:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "571:9:0"
                  },
                  "scope": 1169,
                  "src": "522:93:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 28,
                    "nodeType": "Block",
                    "src": "793:26:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "810:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "functionReturnParameters": 25,
                        "id": 27,
                        "nodeType": "Return",
                        "src": "803:9:0"
                      }
                    ]
                  },
                  "documentation": "@notice The maximum number of actions that can be included in a proposal",
                  "id": 29,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposalMaxOperations",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "760:2:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "784:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "783:9:0"
                  },
                  "scope": 1169,
                  "src": "730:89:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 36,
                    "nodeType": "Block",
                    "src": "976:25:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "993:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 33,
                        "id": 35,
                        "nodeType": "Return",
                        "src": "986:8:0"
                      }
                    ]
                  },
                  "documentation": "@notice The delay before voting on a proposal may take place, once proposed",
                  "id": 37,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "votingDelay",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "943:2:0"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 37,
                        "src": "967:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "966:9:0"
                  },
                  "scope": 1169,
                  "src": "923:78:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 44,
                    "nodeType": "Block",
                    "src": "1198:29:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "3238383030",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1215:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_28800_by_1",
                            "typeString": "int_const 28800"
                          },
                          "value": "28800"
                        },
                        "functionReturnParameters": 41,
                        "id": 43,
                        "nodeType": "Return",
                        "src": "1208:12:0"
                      }
                    ]
                  },
                  "documentation": "@notice The duration of voting on a proposal, in blocks\n @notice LOWERED FOR TESTING PURPOSES NOT LAUNCH READY",
                  "id": 45,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "votingPeriod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1165:2:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "1189:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1189:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1188:9:0"
                  },
                  "scope": 1169,
                  "src": "1144:83:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 47,
                  "name": "timelock",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "1337:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                    "typeString": "contract TimelockInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 46,
                    "name": "TimelockInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1233,
                    "src": "1337:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                      "typeString": "contract TimelockInterface"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "RBCN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "1437:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                    "typeString": "contract RBCNInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 48,
                    "name": "RBCNInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1243,
                    "src": "1437:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                      "typeString": "contract RBCNInterface"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "guardian",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "1520:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 53,
                  "name": "proposalCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "1596:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "canonicalName": "SenateAlpha.Proposal",
                  "id": 88,
                  "members": [
                    {
                      "constant": false,
                      "id": 55,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1713:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1713:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 57,
                      "name": "proposer",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1777:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1777:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59,
                      "name": "eta",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1915:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1915:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 62,
                      "name": "targets",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2014:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 61,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2014:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65,
                      "name": "values",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2142:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 63,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 64,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2142:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68,
                      "name": "signatures",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2241:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 66,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 67,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2241:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 71,
                      "name": "calldatas",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2345:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 69,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2345:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 70,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2345:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73,
                      "name": "startBlock",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2480:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2480:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75,
                      "name": "endBlock",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2599:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2599:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 77,
                      "name": "forVotes",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2695:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2695:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 79,
                      "name": "againstVotes",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2796:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2796:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 81,
                      "name": "canceled",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2898:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2898:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 83,
                      "name": "executed",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "2993:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2993:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87,
                      "name": "receipts",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "3085:36:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Receipt_$95_storage_$",
                        "typeString": "mapping(address => struct SenateAlpha.Receipt)"
                      },
                      "typeName": {
                        "id": 86,
                        "keyType": {
                          "id": 84,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3093:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "3085:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Receipt_$95_storage_$",
                          "typeString": "mapping(address => struct SenateAlpha.Receipt)"
                        },
                        "valueType": {
                          "contractScope": null,
                          "id": 85,
                          "name": "Receipt",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 95,
                          "src": "3104:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                            "typeString": "struct SenateAlpha.Receipt"
                          }
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Proposal",
                  "nodeType": "StructDefinition",
                  "scope": 1169,
                  "src": "1631:1497:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "SenateAlpha.Receipt",
                  "id": 95,
                  "members": [
                    {
                      "constant": false,
                      "id": 90,
                      "name": "hasVoted",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "3265:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3265:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 92,
                      "name": "support",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "3355:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3355:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 94,
                      "name": "votes",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "3448:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3448:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Receipt",
                  "nodeType": "StructDefinition",
                  "scope": 1169,
                  "src": "3184:283:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "SenateAlpha.ProposalState",
                  "id": 104,
                  "members": [
                    {
                      "id": 96,
                      "name": "Pending",
                      "nodeType": "EnumValue",
                      "src": "3560:7:0"
                    },
                    {
                      "id": 97,
                      "name": "Active",
                      "nodeType": "EnumValue",
                      "src": "3577:6:0"
                    },
                    {
                      "id": 98,
                      "name": "Canceled",
                      "nodeType": "EnumValue",
                      "src": "3593:8:0"
                    },
                    {
                      "id": 99,
                      "name": "Defeated",
                      "nodeType": "EnumValue",
                      "src": "3611:8:0"
                    },
                    {
                      "id": 100,
                      "name": "Succeeded",
                      "nodeType": "EnumValue",
                      "src": "3629:9:0"
                    },
                    {
                      "id": 101,
                      "name": "Queued",
                      "nodeType": "EnumValue",
                      "src": "3648:6:0"
                    },
                    {
                      "id": 102,
                      "name": "Expired",
                      "nodeType": "EnumValue",
                      "src": "3664:7:0"
                    },
                    {
                      "id": 103,
                      "name": "Executed",
                      "nodeType": "EnumValue",
                      "src": "3681:8:0"
                    }
                  ],
                  "name": "ProposalState",
                  "nodeType": "EnumDefinition",
                  "src": "3531:164:0"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "proposals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "3768:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                    "typeString": "mapping(uint256 => struct SenateAlpha.Proposal)"
                  },
                  "typeName": {
                    "id": 107,
                    "keyType": {
                      "id": 105,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3776:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3768:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                      "typeString": "mapping(uint256 => struct SenateAlpha.Proposal)"
                    },
                    "valueType": {
                      "contractScope": null,
                      "id": 106,
                      "name": "Proposal",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 88,
                      "src": "3787:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                        "typeString": "struct SenateAlpha.Proposal"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "latestProposalIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "3874:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 111,
                    "keyType": {
                      "id": 109,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3882:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3874:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 110,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3893:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 117,
                  "name": "DOMAIN_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "3996:152:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4069:69:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                          "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                        },
                        "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                          "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                        }
                      ],
                      "id": 114,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "4046:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4046:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 122,
                  "name": "BALLOT_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "4235:102:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4235:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20737570706f727429",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4295:41:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee",
                          "typeString": "literal_string \"Ballot(uint256 proposalId,bool support)\""
                        },
                        "value": "Ballot(uint256 proposalId,bool support)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee",
                          "typeString": "literal_string \"Ballot(uint256 proposalId,bool support)\""
                        }
                      ],
                      "id": 119,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "4285:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4285:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event emitted when a new proposal is created",
                  "id": 146,
                  "name": "ProposalCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4439:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4439:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 126,
                        "indexed": false,
                        "name": "proposer",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4459:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4459:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "indexed": false,
                        "name": "targets",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4485:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4485:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 128,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4485:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 132,
                        "indexed": false,
                        "name": "values",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4512:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 130,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4512:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 131,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4512:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 135,
                        "indexed": false,
                        "name": "signatures",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4538:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 133,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4538:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 134,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4538:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "indexed": false,
                        "name": "calldatas",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4567:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 136,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4567:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 137,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4567:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 140,
                        "indexed": false,
                        "name": "startBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4594:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4594:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 142,
                        "indexed": false,
                        "name": "endBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4622:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4622:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 144,
                        "indexed": false,
                        "name": "description",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "4648:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4648:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4429:243:0"
                  },
                  "src": "4408:265:0"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event emitted when a vote has been cast on a proposal",
                  "id": 156,
                  "name": "VoteCast",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "indexed": false,
                        "name": "voter",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "4776:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4776:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 150,
                        "indexed": false,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "4799:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4799:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "indexed": false,
                        "name": "support",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "4827:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4827:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 154,
                        "indexed": false,
                        "name": "votes",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "4849:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:102:0"
                  },
                  "src": "4752:117:0"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event emitted when a proposal has been canceled",
                  "id": 160,
                  "name": "ProposalCanceled",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 158,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "4965:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4965:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4964:12:0"
                  },
                  "src": "4942:35:0"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event emitted when a proposal has been queued in the Timelock",
                  "id": 166,
                  "name": "ProposalQueued",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "5085:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5085:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": false,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "5097:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5097:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5084:25:0"
                  },
                  "src": "5064:46:0"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice An event emitted when a proposal has been executed in the Timelock",
                  "id": 170,
                  "name": "ProposalExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "5222:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5222:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5221:12:0"
                  },
                  "src": "5199:35:0"
                },
                {
                  "body": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "5342:123:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "timelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5352:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                              "typeString": "contract TimelockInterface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 181,
                                "name": "timelock_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "5381:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 180,
                              "name": "TimelockInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "5363:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TimelockInterface_$1233_$",
                                "typeString": "type(contract TimelockInterface)"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5363:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                              "typeString": "contract TimelockInterface"
                            }
                          },
                          "src": "5352:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                            "typeString": "contract TimelockInterface"
                          }
                        },
                        "id": 184,
                        "nodeType": "ExpressionStatement",
                        "src": "5352:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "RBCN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "5401:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                              "typeString": "contract RBCNInterface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 187,
                                "name": "RBCN_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "5422:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 186,
                              "name": "RBCNInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1243,
                              "src": "5408:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RBCNInterface_$1243_$",
                                "typeString": "type(contract RBCNInterface)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5408:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                              "typeString": "contract RBCNInterface"
                            }
                          },
                          "src": "5401:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                            "typeString": "contract RBCNInterface"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "5401:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5438:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "guardian_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "5449:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5438:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "5438:20:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 196,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "name": "timelock_",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "5261:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5261:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "name": "RBCN_",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "5288:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5288:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "name": "guardian_",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "5311:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5311:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5251:83:0"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5342:0:0"
                  },
                  "scope": 1169,
                  "src": "5240:225:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 375,
                    "nodeType": "Block",
                    "src": "5691:2447:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 218,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1258,
                                      "src": "5741:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5741:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 221,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1248,
                                          "src": "5760:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 222,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "5760:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5774:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "id": 220,
                                      "name": "sub256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1156,
                                      "src": "5753:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5753:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 216,
                                    "name": "RBCN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "5722:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                                      "typeString": "contract RBCNInterface"
                                    }
                                  },
                                  "id": 217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getPriorVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1242,
                                  "src": "5722:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint96_$",
                                    "typeString": "function (address,uint256) view external returns (uint96)"
                                  }
                                },
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5722:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 226,
                                  "name": "proposalThreshold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5796:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5796:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5722:93:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a70726f706f73653a2070726f706f73657220766f7465732062656c6f772070726f706f73616c207468726573686f6c64",
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5829:63:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97d3014761f182dad6e7e7e8f91b4594c251f5db22fab9a7166f0697964535f4",
                                "typeString": "literal_string \"SenateAlpha::propose: proposer votes below proposal threshold\""
                              },
                              "value": "SenateAlpha::propose: proposer votes below proposal threshold"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97d3014761f182dad6e7e7e8f91b4594c251f5db22fab9a7166f0697964535f4",
                                "typeString": "literal_string \"SenateAlpha::propose: proposer votes below proposal threshold\""
                              }
                            ],
                            "id": 215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "5701:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5701:201:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "5701:201:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 233,
                                      "name": "targets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5933:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5933:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 235,
                                      "name": "values",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 202,
                                      "src": "5951:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5951:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5933:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 238,
                                      "name": "targets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 199,
                                      "src": "5984:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 239,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5984:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 240,
                                      "name": "signatures",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 205,
                                      "src": "6002:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                        "typeString": "string memory[] memory"
                                      }
                                    },
                                    "id": 241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "6002:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5984:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5933:86:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 244,
                                    "name": "targets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 199,
                                    "src": "6039:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6039:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 246,
                                    "name": "calldatas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 208,
                                    "src": "6057:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                      "typeString": "bytes memory[] memory"
                                    }
                                  },
                                  "id": 247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6057:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6039:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5933:140:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a70726f706f73653a2070726f706f73616c2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d61746368",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6087:68:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_067b144cfe8ad1bde50ece0b3f97508b1976b16fb7ecdefbb9c90169d4292efd",
                                "typeString": "literal_string \"SenateAlpha::propose: proposal function information arity mismatch\""
                              },
                              "value": "SenateAlpha::propose: proposal function information arity mismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_067b144cfe8ad1bde50ece0b3f97508b1976b16fb7ecdefbb9c90169d4292efd",
                                "typeString": "literal_string \"SenateAlpha::propose: proposal function information arity mismatch\""
                              }
                            ],
                            "id": 232,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "5912:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5912:253:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "5912:253:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 254,
                                  "name": "targets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "6196:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6196:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6214:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6196:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a70726f706f73653a206d7573742070726f7669646520616374696f6e73",
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6229:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_31f5dfd309e573f85bb18aa16837ddc30a5a36439635037aaf76820c065b4286",
                                "typeString": "literal_string \"SenateAlpha::propose: must provide actions\""
                              },
                              "value": "SenateAlpha::propose: must provide actions"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_31f5dfd309e573f85bb18aa16837ddc30a5a36439635037aaf76820c065b4286",
                                "typeString": "literal_string \"SenateAlpha::propose: must provide actions\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "6175:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6175:108:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "6175:108:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 262,
                                  "name": "targets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "6314:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6314:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 264,
                                  "name": "proposalMaxOperations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "6332:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6332:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6314:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a70726f706f73653a20746f6f206d616e7920616374696f6e73",
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6369:40:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d3408c7dd76e4450735e86c1183e51589ff260670af1ab390f4e6d7259a443c",
                                "typeString": "literal_string \"SenateAlpha::propose: too many actions\""
                              },
                              "value": "SenateAlpha::propose: too many actions"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d3408c7dd76e4450735e86c1183e51589ff260670af1ab390f4e6d7259a443c",
                                "typeString": "literal_string \"SenateAlpha::propose: too many actions\""
                              }
                            ],
                            "id": 261,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "6293:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6293:126:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 269,
                        "nodeType": "ExpressionStatement",
                        "src": "6293:126:0"
                      },
                      {
                        "assignments": [
                          271
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 271,
                            "name": "latestProposalId",
                            "nodeType": "VariableDeclaration",
                            "scope": 375,
                            "src": "6430:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 270,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6430:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 276,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "latestProposalIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "6457:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 273,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "6475:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6475:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6457:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6430:56:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "latestProposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "6500:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6520:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6500:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 303,
                        "nodeType": "IfStatement",
                        "src": "6496:560:0",
                        "trueBody": {
                          "id": 302,
                          "nodeType": "Block",
                          "src": "6523:533:0",
                          "statements": [
                            {
                              "assignments": [
                                281
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 281,
                                  "name": "proposersLatestProposalState",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 302,
                                  "src": "6537:42:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalState_$104",
                                    "typeString": "enum SenateAlpha.ProposalState"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 280,
                                    "name": "ProposalState",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 104,
                                    "src": "6537:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalState_$104",
                                      "typeString": "enum SenateAlpha.ProposalState"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 285,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 283,
                                    "name": "latestProposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 271,
                                    "src": "6604:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 282,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "6598:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$104_$",
                                    "typeString": "function (uint256) view returns (enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6598:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6537:84:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_ProposalState_$104",
                                      "typeString": "enum SenateAlpha.ProposalState"
                                    },
                                    "id": 290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 287,
                                      "name": "proposersLatestProposalState",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 281,
                                      "src": "6660:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ProposalState_$104",
                                        "typeString": "enum SenateAlpha.ProposalState"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 288,
                                        "name": "ProposalState",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "6692:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                          "typeString": "type(enum SenateAlpha.ProposalState)"
                                        }
                                      },
                                      "id": 289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "Active",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "6692:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ProposalState_$104",
                                        "typeString": "enum SenateAlpha.ProposalState"
                                      }
                                    },
                                    "src": "6660:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "53656e617465416c7068613a3a70726f706f73653a206f6e65206c6976652070726f706f73616c207065722070726f706f7365722c20666f756e6420616e20616c7265616479206163746976652070726f706f73616c",
                                    "id": 291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6730:88:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a9c18a47896ed5529a2c4cd5077c28dee3e88f56412753730ac855d2e3af8ef3",
                                      "typeString": "literal_string \"SenateAlpha::propose: one live proposal per proposer, found an already active proposal\""
                                    },
                                    "value": "SenateAlpha::propose: one live proposal per proposer, found an already active proposal"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a9c18a47896ed5529a2c4cd5077c28dee3e88f56412753730ac855d2e3af8ef3",
                                      "typeString": "literal_string \"SenateAlpha::propose: one live proposal per proposer, found an already active proposal\""
                                    }
                                  ],
                                  "id": 286,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1261,
                                    1262
                                  ],
                                  "referencedDeclaration": 1262,
                                  "src": "6635:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6635:197:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 293,
                              "nodeType": "ExpressionStatement",
                              "src": "6635:197:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_ProposalState_$104",
                                      "typeString": "enum SenateAlpha.ProposalState"
                                    },
                                    "id": 298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 295,
                                      "name": "proposersLatestProposalState",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 281,
                                      "src": "6871:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ProposalState_$104",
                                        "typeString": "enum SenateAlpha.ProposalState"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 296,
                                        "name": "ProposalState",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "6903:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                          "typeString": "type(enum SenateAlpha.ProposalState)"
                                        }
                                      },
                                      "id": 297,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "Pending",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "6903:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ProposalState_$104",
                                        "typeString": "enum SenateAlpha.ProposalState"
                                      }
                                    },
                                    "src": "6871:53:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "53656e617465416c7068613a3a70726f706f73653a206f6e65206c6976652070726f706f73616c207065722070726f706f7365722c20666f756e6420616e20616c72656164792070656e64696e672070726f706f73616c",
                                    "id": 299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6942:89:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f87bb7cd787a624fc4a8484427ab33eea110c5937fc4b43a8dc98c93870d15c3",
                                      "typeString": "literal_string \"SenateAlpha::propose: one live proposal per proposer, found an already pending proposal\""
                                    },
                                    "value": "SenateAlpha::propose: one live proposal per proposer, found an already pending proposal"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f87bb7cd787a624fc4a8484427ab33eea110c5937fc4b43a8dc98c93870d15c3",
                                      "typeString": "literal_string \"SenateAlpha::propose: one live proposal per proposer, found an already pending proposal\""
                                    }
                                  ],
                                  "id": 294,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1261,
                                    1262
                                  ],
                                  "referencedDeclaration": 1262,
                                  "src": "6846:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6846:199:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 301,
                              "nodeType": "ExpressionStatement",
                              "src": "6846:199:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          305
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 305,
                            "name": "startBlock",
                            "nodeType": "VariableDeclaration",
                            "scope": 375,
                            "src": "7066:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7066:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 312,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 307,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1248,
                                "src": "7094:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7094:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 309,
                                "name": "votingDelay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "7108:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                  "typeString": "function () pure returns (uint256)"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7108:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 306,
                            "name": "add256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "7087:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7087:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7066:56:0"
                      },
                      {
                        "assignments": [
                          314
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 314,
                            "name": "endBlock",
                            "nodeType": "VariableDeclaration",
                            "scope": 375,
                            "src": "7132:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 313,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7132:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 320,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 316,
                              "name": "startBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "7158:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 317,
                                "name": "votingPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "7170:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                  "typeString": "function () pure returns (uint256)"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7170:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 315,
                            "name": "add256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "7151:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7151:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7132:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7196:15:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "proposalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "7196:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "7196:15:0"
                      },
                      {
                        "assignments": [
                          325
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 325,
                            "name": "newProposal",
                            "nodeType": "VariableDeclaration",
                            "scope": 375,
                            "src": "7221:27:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 324,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "7221:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 342,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "proposalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "7294:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 328,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1258,
                                "src": "7335:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7335:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7368:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "targets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "7396:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 332,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "7429:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 333,
                              "name": "signatures",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "7465:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 334,
                              "name": "calldatas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "7504:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 335,
                              "name": "startBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "7543:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 336,
                              "name": "endBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "7581:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7617:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7650:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7679:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7712:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 326,
                            "name": "Proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "7263:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Proposal_$88_storage_ptr_$",
                              "typeString": "type(struct SenateAlpha.Proposal storage pointer)"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "id",
                            "proposer",
                            "eta",
                            "targets",
                            "values",
                            "signatures",
                            "calldatas",
                            "startBlock",
                            "endBlock",
                            "forVotes",
                            "againstVotes",
                            "canceled",
                            "executed"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "7263:469:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_memory",
                            "typeString": "struct SenateAlpha.Proposal memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7221:511:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 343,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "7743:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                                "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                              }
                            },
                            "id": 346,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 344,
                                "name": "newProposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "7753:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                                  "typeString": "struct SenateAlpha.Proposal memory"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "7753:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7743:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage",
                              "typeString": "struct SenateAlpha.Proposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 347,
                            "name": "newProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "7771:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                              "typeString": "struct SenateAlpha.Proposal memory"
                            }
                          },
                          "src": "7743:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "7743:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 350,
                              "name": "latestProposalIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 112,
                              "src": "7792:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 353,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 351,
                                "name": "newProposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "7810:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                                  "typeString": "struct SenateAlpha.Proposal memory"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57,
                              "src": "7810:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7792:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 354,
                              "name": "newProposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "7834:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                                "typeString": "struct SenateAlpha.Proposal memory"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "7834:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7792:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "7792:56:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 359,
                                "name": "newProposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "7893:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                                  "typeString": "struct SenateAlpha.Proposal memory"
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "7893:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 361,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1258,
                                "src": "7921:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7921:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "targets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "7945:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "7966:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "signatures",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "7986:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 366,
                              "name": "calldatas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "8010:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 367,
                              "name": "startBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "8033:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "endBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "8057:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 369,
                              "name": "description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "8079:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 358,
                            "name": "ProposalCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "7864:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,address,address[] memory,uint256[] memory,string memory[] memory,bytes memory[] memory,uint256,uint256,string memory)"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7864:236:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "EmitStatement",
                        "src": "7859:241:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 372,
                            "name": "newProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "8117:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_memory_ptr",
                              "typeString": "struct SenateAlpha.Proposal memory"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "8117:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 214,
                        "id": 374,
                        "nodeType": "Return",
                        "src": "8110:21:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 376,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "propose",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "name": "targets",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "5497:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5497:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 198,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "5497:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "name": "values",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "5531:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 200,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5531:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 201,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "5531:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "name": "signatures",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "5564:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 203,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "5564:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 204,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "5564:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 208,
                        "name": "calldatas",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "5600:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 206,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5600:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 207,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "5600:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 210,
                        "name": "description",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "5634:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5634:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5487:178:0"
                  },
                  "returnParameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "5682:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5682:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5681:9:0"
                  },
                  "scope": 1169,
                  "src": "5471:2667:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 452,
                    "nodeType": "Block",
                    "src": "8186:661:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalState_$104",
                                "typeString": "enum SenateAlpha.ProposalState"
                              },
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 383,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "8223:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 382,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "8217:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$104_$",
                                    "typeString": "function (uint256) view returns (enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8217:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 385,
                                  "name": "ProposalState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "8238:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                    "typeString": "type(enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Succeeded",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8238:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "src": "8217:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a71756575653a2070726f706f73616c2063616e206f6e6c792062652071756575656420696620697420697320737563636565646564",
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8275:68:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_27a37f8a83f99feac488efd96379b8ecdf3bfb40eccbde3f3da1685e080c3967",
                                "typeString": "literal_string \"SenateAlpha::queue: proposal can only be queued if it is succeeded\""
                              },
                              "value": "SenateAlpha::queue: proposal can only be queued if it is succeeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_27a37f8a83f99feac488efd96379b8ecdf3bfb40eccbde3f3da1685e080c3967",
                                "typeString": "literal_string \"SenateAlpha::queue: proposal can only be queued if it is succeeded\""
                              }
                            ],
                            "id": 381,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "8196:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8196:157:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "8196:157:0"
                      },
                      {
                        "assignments": [
                          392
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 392,
                            "name": "proposal",
                            "nodeType": "VariableDeclaration",
                            "scope": 452,
                            "src": "8363:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 391,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "8363:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 396,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "8391:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                              "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                            }
                          },
                          "id": 395,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 394,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "8401:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8391:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8363:49:0"
                      },
                      {
                        "assignments": [
                          398
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 398,
                            "name": "eta",
                            "nodeType": "VariableDeclaration",
                            "scope": 452,
                            "src": "8422:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 397,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8422:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 406,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 400,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1248,
                                "src": "8443:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8443:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 402,
                                  "name": "timelock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "8460:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                    "typeString": "contract TimelockInterface"
                                  }
                                },
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "delay",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1174,
                                "src": "8460:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8460:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 399,
                            "name": "add256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "8436:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8436:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8422:55:0"
                      },
                      {
                        "body": {
                          "id": 439,
                          "nodeType": "Block",
                          "src": "8541:226:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 420,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 392,
                                        "src": "8587:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 421,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "targets",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 62,
                                      "src": "8587:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 423,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 422,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "8604:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8587:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 424,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 392,
                                        "src": "8624:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 425,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "values",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65,
                                      "src": "8624:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 427,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 426,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "8640:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8624:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 428,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 392,
                                        "src": "8660:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 429,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "signatures",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 68,
                                      "src": "8660:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 431,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 430,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "8680:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8660:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 432,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 392,
                                        "src": "8700:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 433,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "calldatas",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71,
                                      "src": "8700:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                        "typeString": "bytes storage ref[] storage ref"
                                      }
                                    },
                                    "id": 435,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 434,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "8719:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8700:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 436,
                                    "name": "eta",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "8739:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 419,
                                  "name": "_queueOrRevert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 495,
                                  "src": "8555:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,string memory,bytes memory,uint256)"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8555:201:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 438,
                              "nodeType": "ExpressionStatement",
                              "src": "8555:201:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 411,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "8507:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 412,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 392,
                                "src": "8511:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "targets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "8511:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8511:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8507:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 440,
                        "initializationExpression": {
                          "assignments": [
                            408
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 408,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 440,
                              "src": "8492:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 407,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8492:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 410,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8504:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8492:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8536:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 416,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "8536:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 418,
                          "nodeType": "ExpressionStatement",
                          "src": "8536:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "8487:280:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 441,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 392,
                              "src": "8776:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal storage pointer"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "eta",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "8776:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 444,
                            "name": "eta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "8791:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8776:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "8776:18:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 448,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "8824:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 449,
                              "name": "eta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "8836:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 447,
                            "name": "ProposalQueued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "8809:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8809:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 451,
                        "nodeType": "EmitStatement",
                        "src": "8804:36:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 453,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "queue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "8159:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8158:20:0"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8186:0:0"
                  },
                  "scope": 1169,
                  "src": "8144:703:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 494,
                    "nodeType": "Block",
                    "src": "9020:320:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "9051:118:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 472,
                                            "name": "target",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 455,
                                            "src": "9118:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "argumentTypes": null,
                                            "id": 473,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 457,
                                            "src": "9126:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "argumentTypes": null,
                                            "id": 474,
                                            "name": "signature",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 459,
                                            "src": "9133:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          {
                                            "argumentTypes": null,
                                            "id": 475,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 461,
                                            "src": "9144:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          {
                                            "argumentTypes": null,
                                            "id": 476,
                                            "name": "eta",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 463,
                                            "src": "9150:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 470,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1245,
                                            "src": "9107:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 471,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encode",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "9107:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 477,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9107:47:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 469,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1252,
                                      "src": "9097:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9097:58:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 467,
                                    "name": "timelock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "9052:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                      "typeString": "contract TimelockInterface"
                                    }
                                  },
                                  "id": 468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "queuedTransactions",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1189,
                                  "src": "9052:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                                    "typeString": "function (bytes32) view external returns (bool)"
                                  }
                                },
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9052:117:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f71756575654f725265766572743a2070726f706f73616c20616374696f6e20616c72656164792071756575656420617420657461",
                              "id": 481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9183:68:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1edb58fff8ad83768f96f9a018a17e95bf3cddf352033c044c525373a2b481e",
                                "typeString": "literal_string \"SenateAlpha::_queueOrRevert: proposal action already queued at eta\""
                              },
                              "value": "SenateAlpha::_queueOrRevert: proposal action already queued at eta"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1edb58fff8ad83768f96f9a018a17e95bf3cddf352033c044c525373a2b481e",
                                "typeString": "literal_string \"SenateAlpha::_queueOrRevert: proposal action already queued at eta\""
                              }
                            ],
                            "id": 466,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "9030:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9030:231:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 483,
                        "nodeType": "ExpressionStatement",
                        "src": "9030:231:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 487,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "9297:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "9305:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 489,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "9312:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 490,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "9323:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "eta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "9329:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 484,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "9271:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                "typeString": "contract TimelockInterface"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "queueTransaction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1204,
                            "src": "9271:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (address,uint256,string memory,bytes memory,uint256) external returns (bytes32)"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9271:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "9271:62:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 495,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_queueOrRevert",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 455,
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "8886:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8886:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "8910:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8910:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "8933:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8933:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "8966:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8966:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "8993:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8993:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8876:134:0"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9020:0:0"
                  },
                  "scope": 1169,
                  "src": "8853:487:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 570,
                    "nodeType": "Block",
                    "src": "9398:645:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalState_$104",
                                "typeString": "enum SenateAlpha.ProposalState"
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 502,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 497,
                                    "src": "9435:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 501,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "9429:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$104_$",
                                    "typeString": "function (uint256) view returns (enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9429:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 504,
                                  "name": "ProposalState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "9450:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                    "typeString": "type(enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Queued",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9450:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "src": "9429:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a657865637574653a2070726f706f73616c2063616e206f6e6c7920626520657865637574656420696620697420697320717565756564",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9484:69:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90d97f340e3bd4cdb14b02b85c30fe1d672bb642b0cc9958e420058e0a075f86",
                                "typeString": "literal_string \"SenateAlpha::execute: proposal can only be executed if it is queued\""
                              },
                              "value": "SenateAlpha::execute: proposal can only be executed if it is queued"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90d97f340e3bd4cdb14b02b85c30fe1d672bb642b0cc9958e420058e0a075f86",
                                "typeString": "literal_string \"SenateAlpha::execute: proposal can only be executed if it is queued\""
                              }
                            ],
                            "id": 500,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "9408:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9408:155:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "9408:155:0"
                      },
                      {
                        "assignments": [
                          511
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 511,
                            "name": "proposal",
                            "nodeType": "VariableDeclaration",
                            "scope": 570,
                            "src": "9573:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 510,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "9573:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 515,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 512,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "9601:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                              "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                            }
                          },
                          "id": 514,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "9611:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9601:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9573:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "9632:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal storage pointer"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "9632:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9652:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9632:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "9632:24:0"
                      },
                      {
                        "body": {
                          "id": 564,
                          "nodeType": "Block",
                          "src": "9720:274:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 544,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "9805:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 545,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "targets",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 62,
                                      "src": "9805:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 547,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 546,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 523,
                                      "src": "9822:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9805:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 548,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "9842:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 549,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "values",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65,
                                      "src": "9842:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 551,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 550,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 523,
                                      "src": "9858:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9842:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 552,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "9878:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 553,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "signatures",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 68,
                                      "src": "9878:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 555,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 554,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 523,
                                      "src": "9898:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9878:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 556,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "9918:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 557,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "calldatas",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71,
                                      "src": "9918:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                        "typeString": "bytes storage ref[] storage ref"
                                      }
                                    },
                                    "id": 559,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 558,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 523,
                                      "src": "9937:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9918:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 560,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 511,
                                      "src": "9957:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 561,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "eta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "9957:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 539,
                                          "name": "proposal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 511,
                                          "src": "9768:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                            "typeString": "struct SenateAlpha.Proposal storage pointer"
                                          }
                                        },
                                        "id": 540,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "values",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 65,
                                        "src": "9768:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 542,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 541,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 523,
                                        "src": "9784:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9768:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 534,
                                        "name": "timelock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47,
                                        "src": "9734:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                          "typeString": "contract TimelockInterface"
                                        }
                                      },
                                      "id": 537,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "executeTransaction",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1232,
                                      "src": "9734:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (address,uint256,string memory,bytes memory,uint256) payable external returns (bytes memory)"
                                      }
                                    },
                                    "id": 538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "9734:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$value_$",
                                      "typeString": "function (uint256) pure returns (function (address,uint256,string memory,bytes memory,uint256) payable external returns (bytes memory))"
                                    }
                                  },
                                  "id": 543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9734:53:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (address,uint256,string memory,bytes memory,uint256) payable external returns (bytes memory)"
                                  }
                                },
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9734:249:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 563,
                              "nodeType": "ExpressionStatement",
                              "src": "9734:249:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 526,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 523,
                            "src": "9686:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 527,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 511,
                                "src": "9690:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "targets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "9690:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9690:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9686:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 565,
                        "initializationExpression": {
                          "assignments": [
                            523
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 523,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 565,
                              "src": "9671:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 522,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9671:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 525,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9683:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9671:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9715:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "9715:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 533,
                          "nodeType": "ExpressionStatement",
                          "src": "9715:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "9666:328:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 567,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "10025:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 566,
                            "name": "ProposalExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "10008:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10008:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 569,
                        "nodeType": "EmitStatement",
                        "src": "10003:33:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 571,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 497,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 571,
                        "src": "9363:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9363:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9362:20:0"
                  },
                  "returnParameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9398:0:0"
                  },
                  "scope": 1169,
                  "src": "9346:697:0",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 665,
                    "nodeType": "Block",
                    "src": "10092:889:0",
                    "statements": [
                      {
                        "assignments": [
                          577
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 577,
                            "name": "state",
                            "nodeType": "VariableDeclaration",
                            "scope": 665,
                            "src": "10102:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$104",
                              "typeString": "enum SenateAlpha.ProposalState"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 576,
                              "name": "ProposalState",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 104,
                              "src": "10102:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$104",
                                "typeString": "enum SenateAlpha.ProposalState"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 581,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 579,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 573,
                              "src": "10130:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 578,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "10124:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$104_$",
                              "typeString": "function (uint256) view returns (enum SenateAlpha.ProposalState)"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10124:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$104",
                            "typeString": "enum SenateAlpha.ProposalState"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10102:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalState_$104",
                                "typeString": "enum SenateAlpha.ProposalState"
                              },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 583,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 577,
                                "src": "10172:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 584,
                                  "name": "ProposalState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "10181:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                    "typeString": "type(enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Executed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10181:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "src": "10172:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a63616e63656c3a2063616e6e6f742063616e63656c2065786563757465642070726f706f73616c",
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10217:54:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b1b405180e76d86c3fa808340df06ec3136fdd026f28bc80c116a7c5d8e42b58",
                                "typeString": "literal_string \"SenateAlpha::cancel: cannot cancel executed proposal\""
                              },
                              "value": "SenateAlpha::cancel: cannot cancel executed proposal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b1b405180e76d86c3fa808340df06ec3136fdd026f28bc80c116a7c5d8e42b58",
                                "typeString": "literal_string \"SenateAlpha::cancel: cannot cancel executed proposal\""
                              }
                            ],
                            "id": 582,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "10151:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10151:130:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "10151:130:0"
                      },
                      {
                        "assignments": [
                          591
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 591,
                            "name": "proposal",
                            "nodeType": "VariableDeclaration",
                            "scope": 665,
                            "src": "10292:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 590,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "10292:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 595,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 592,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "10320:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                              "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                            }
                          },
                          "id": 594,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 593,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "10330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10320:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10292:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 597,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1258,
                                    "src": "10372:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10372:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 599,
                                  "name": "guardian",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "10386:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "10372:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 603,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 591,
                                        "src": "10433:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 604,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "proposer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 57,
                                      "src": "10433:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 606,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1248,
                                            "src": "10459:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 607,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "10459:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 608,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10473:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          }
                                        ],
                                        "id": 605,
                                        "name": "sub256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1156,
                                        "src": "10452:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10452:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 601,
                                      "name": "RBCN",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49,
                                      "src": "10414:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                                        "typeString": "contract RBCNInterface"
                                      }
                                    },
                                    "id": 602,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getPriorVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1242,
                                    "src": "10414:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint96_$",
                                      "typeString": "function (address,uint256) view external returns (uint96)"
                                    }
                                  },
                                  "id": 610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10414:62:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 611,
                                    "name": "proposalThreshold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21,
                                    "src": "10495:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                      "typeString": "function () pure returns (uint256)"
                                    }
                                  },
                                  "id": 612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10495:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10414:100:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10372:142:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a63616e63656c3a2070726f706f7365722061626f7665207468726573686f6c64",
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10528:47:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d099bb7e754681d80b4dea609aed1242bc0ce46fc51209054cb955b211920969",
                                "typeString": "literal_string \"SenateAlpha::cancel: proposer above threshold\""
                              },
                              "value": "SenateAlpha::cancel: proposer above threshold"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d099bb7e754681d80b4dea609aed1242bc0ce46fc51209054cb955b211920969",
                                "typeString": "literal_string \"SenateAlpha::cancel: proposer above threshold\""
                              }
                            ],
                            "id": 596,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "10351:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10351:234:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "10351:234:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 618,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "10596:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal storage pointer"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81,
                            "src": "10596:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10616:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "10596:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 623,
                        "nodeType": "ExpressionStatement",
                        "src": "10596:24:0"
                      },
                      {
                        "body": {
                          "id": 659,
                          "nodeType": "Block",
                          "src": "10684:247:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 639,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 591,
                                        "src": "10742:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 640,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "targets",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 62,
                                      "src": "10742:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 642,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 641,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 625,
                                      "src": "10759:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10742:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 643,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 591,
                                        "src": "10779:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 644,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "values",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65,
                                      "src": "10779:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 646,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 645,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 625,
                                      "src": "10795:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10779:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 647,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 591,
                                        "src": "10815:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 648,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "signatures",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 68,
                                      "src": "10815:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 650,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 649,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 625,
                                      "src": "10835:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10815:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 651,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 591,
                                        "src": "10855:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "calldatas",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71,
                                      "src": "10855:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                        "typeString": "bytes storage ref[] storage ref"
                                      }
                                    },
                                    "id": 654,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 653,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 625,
                                      "src": "10874:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10855:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 655,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 591,
                                      "src": "10894:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 656,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "eta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "10894:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 636,
                                    "name": "timelock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "10698:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                      "typeString": "contract TimelockInterface"
                                    }
                                  },
                                  "id": 638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "cancelTransaction",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1217,
                                  "src": "10698:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,string memory,bytes memory,uint256) external"
                                  }
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10698:222:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 658,
                              "nodeType": "ExpressionStatement",
                              "src": "10698:222:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 628,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "10650:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 629,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 591,
                                "src": "10654:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 630,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "targets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "10654:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10654:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10650:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 660,
                        "initializationExpression": {
                          "assignments": [
                            625
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 625,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 660,
                              "src": "10635:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 624,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10635:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 627,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10647:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10635:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10679:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 633,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "10679:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 635,
                          "nodeType": "ExpressionStatement",
                          "src": "10679:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "10630:301:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 662,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 573,
                              "src": "10963:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 661,
                            "name": "ProposalCanceled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "10946:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10946:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 664,
                        "nodeType": "EmitStatement",
                        "src": "10941:33:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 666,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 573,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "10065:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10065:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10064:20:0"
                  },
                  "returnParameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10092:0:0"
                  },
                  "scope": 1169,
                  "src": "10049:932:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 699,
                    "nodeType": "Block",
                    "src": "11239:124:0",
                    "statements": [
                      {
                        "assignments": [
                          684
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 684,
                            "name": "p",
                            "nodeType": "VariableDeclaration",
                            "scope": 699,
                            "src": "11249:18:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 683,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "11249:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 688,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 685,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "11270:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                              "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                            }
                          },
                          "id": 687,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 686,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "11280:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11270:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11249:42:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 689,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 684,
                                "src": "11309:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "targets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "11309:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 691,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 684,
                                "src": "11320:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "values",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65,
                              "src": "11320:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 693,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 684,
                                "src": "11330:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 694,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "signatures",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "11330:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 695,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 684,
                                "src": "11344:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 696,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "calldatas",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "11344:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                "typeString": "bytes storage ref[] storage ref"
                              }
                            }
                          ],
                          "id": 697,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11308:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_storage_$_t_array$_t_uint256_$dyn_storage_$_t_array$_t_string_storage_$dyn_storage_$_t_array$_t_bytes_storage_$dyn_storage_$",
                            "typeString": "tuple(address[] storage ref,uint256[] storage ref,string storage ref[] storage ref,bytes storage ref[] storage ref)"
                          }
                        },
                        "functionReturnParameters": 682,
                        "id": 698,
                        "nodeType": "Return",
                        "src": "11301:55:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 700,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 668,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "11007:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11007:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11006:20:0"
                  },
                  "returnParameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 672,
                        "name": "targets",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "11085:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 670,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11085:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 671,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11085:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 675,
                        "name": "values",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "11123:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 673,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11123:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 674,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11123:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 678,
                        "name": "signatures",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "11160:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 676,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "11160:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 677,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11160:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "name": "calldatas",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "11200:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 679,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "11200:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 680,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11071:163:0"
                  },
                  "scope": 1169,
                  "src": "10987:376:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "11489:61:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 709,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 108,
                                "src": "11506:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                                  "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                                }
                              },
                              "id": 711,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 710,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 702,
                                "src": "11516:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11506:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage",
                                "typeString": "struct SenateAlpha.Proposal storage ref"
                              }
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receipts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87,
                            "src": "11506:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Receipt_$95_storage_$",
                              "typeString": "mapping(address => struct SenateAlpha.Receipt storage ref)"
                            }
                          },
                          "id": 714,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 713,
                            "name": "voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "11537:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11506:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Receipt_$95_storage",
                            "typeString": "struct SenateAlpha.Receipt storage ref"
                          }
                        },
                        "functionReturnParameters": 708,
                        "id": 715,
                        "nodeType": "Return",
                        "src": "11499:44:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 717,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReceipt",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "11389:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11389:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 704,
                        "name": "voter",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "11409:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11409:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11388:35:0"
                  },
                  "returnParameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 707,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "11469:14:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Receipt_$95_memory_ptr",
                          "typeString": "struct SenateAlpha.Receipt"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 706,
                          "name": "Receipt",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 95,
                          "src": "11469:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                            "typeString": "struct SenateAlpha.Receipt"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11468:16:0"
                  },
                  "scope": 1169,
                  "src": "11369:181:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "11627:1045:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 725,
                                  "name": "proposalCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53,
                                  "src": "11658:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 726,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 719,
                                  "src": "11675:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11658:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 728,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 719,
                                  "src": "11689:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11702:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11689:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11658:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a73746174653a20696e76616c69642070726f706f73616c206964",
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11717:41:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25a1366b82eea8b63c818c78200250146c21e4787c495cb80c952ecf4f0f1349",
                                "typeString": "literal_string \"SenateAlpha::state: invalid proposal id\""
                              },
                              "value": "SenateAlpha::state: invalid proposal id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25a1366b82eea8b63c818c78200250146c21e4787c495cb80c952ecf4f0f1349",
                                "typeString": "literal_string \"SenateAlpha::state: invalid proposal id\""
                              }
                            ],
                            "id": 724,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "11637:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11637:131:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "11637:131:0"
                      },
                      {
                        "assignments": [
                          736
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 736,
                            "name": "proposal",
                            "nodeType": "VariableDeclaration",
                            "scope": 819,
                            "src": "11778:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 735,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "11778:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 740,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 737,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "11806:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                              "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                            }
                          },
                          "id": 739,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 738,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 719,
                            "src": "11816:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11806:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11778:49:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 741,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "11841:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal storage pointer"
                            }
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canceled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81,
                          "src": "11841:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 747,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1248,
                                "src": "11924:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11924:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 749,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "11940:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "11940:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11924:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 756,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1248,
                                  "src": "12024:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "12024:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 758,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 736,
                                  "src": "12040:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                    "typeString": "struct SenateAlpha.Proposal storage pointer"
                                  }
                                },
                                "id": 759,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "12040:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12024:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 765,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "12134:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 766,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "forVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 77,
                                    "src": "12134:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 767,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "12155:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 768,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "againstVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 79,
                                    "src": "12155:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12134:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 770,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "12192:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 771,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "forVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 77,
                                    "src": "12192:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 772,
                                      "name": "quorumVotes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13,
                                      "src": "12212:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                        "typeString": "function () pure returns (uint256)"
                                      }
                                    },
                                    "id": 773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12212:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12192:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "12134:91:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 780,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "12300:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 781,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "eta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "12300:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12316:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "12300:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 788,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "12384:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                        "typeString": "struct SenateAlpha.Proposal storage pointer"
                                      }
                                    },
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "executed",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83,
                                    "src": "12384:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 794,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1248,
                                          "src": "12480:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "12480:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 797,
                                              "name": "proposal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 736,
                                              "src": "12506:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                                "typeString": "struct SenateAlpha.Proposal storage pointer"
                                              }
                                            },
                                            "id": 798,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "eta",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 59,
                                            "src": "12506:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "argumentTypes": null,
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 799,
                                                "name": "timelock",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47,
                                                "src": "12520:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                                  "typeString": "contract TimelockInterface"
                                                }
                                              },
                                              "id": 800,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "GRACE_PERIOD",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1179,
                                              "src": "12520:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view external returns (uint256)"
                                              }
                                            },
                                            "id": 801,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "12520:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 796,
                                          "name": "add256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1135,
                                          "src": "12499:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12499:45:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12480:64:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 811,
                                      "nodeType": "Block",
                                      "src": "12614:52:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 808,
                                              "name": "ProposalState",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 104,
                                              "src": "12635:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                                "typeString": "type(enum SenateAlpha.ProposalState)"
                                              }
                                            },
                                            "id": 809,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "Queued",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "12635:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ProposalState_$104",
                                              "typeString": "enum SenateAlpha.ProposalState"
                                            }
                                          },
                                          "functionReturnParameters": 723,
                                          "id": 810,
                                          "nodeType": "Return",
                                          "src": "12628:27:0"
                                        }
                                      ]
                                    },
                                    "id": 812,
                                    "nodeType": "IfStatement",
                                    "src": "12463:203:0",
                                    "trueBody": {
                                      "id": 807,
                                      "nodeType": "Block",
                                      "src": "12555:53:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 804,
                                              "name": "ProposalState",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 104,
                                              "src": "12576:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                                "typeString": "type(enum SenateAlpha.ProposalState)"
                                              }
                                            },
                                            "id": 805,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "Expired",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "12576:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ProposalState_$104",
                                              "typeString": "enum SenateAlpha.ProposalState"
                                            }
                                          },
                                          "functionReturnParameters": 723,
                                          "id": 806,
                                          "nodeType": "Return",
                                          "src": "12569:28:0"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 813,
                                  "nodeType": "IfStatement",
                                  "src": "12380:286:0",
                                  "trueBody": {
                                    "id": 793,
                                    "nodeType": "Block",
                                    "src": "12403:54:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 790,
                                            "name": "ProposalState",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 104,
                                            "src": "12424:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                              "typeString": "type(enum SenateAlpha.ProposalState)"
                                            }
                                          },
                                          "id": 791,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Executed",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "12424:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ProposalState_$104",
                                            "typeString": "enum SenateAlpha.ProposalState"
                                          }
                                        },
                                        "functionReturnParameters": 723,
                                        "id": 792,
                                        "nodeType": "Return",
                                        "src": "12417:29:0"
                                      }
                                    ]
                                  }
                                },
                                "id": 814,
                                "nodeType": "IfStatement",
                                "src": "12296:370:0",
                                "trueBody": {
                                  "id": 787,
                                  "nodeType": "Block",
                                  "src": "12319:55:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 784,
                                          "name": "ProposalState",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "12340:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                            "typeString": "type(enum SenateAlpha.ProposalState)"
                                          }
                                        },
                                        "id": 785,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "Succeeded",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "12340:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ProposalState_$104",
                                          "typeString": "enum SenateAlpha.ProposalState"
                                        }
                                      },
                                      "functionReturnParameters": 723,
                                      "id": 786,
                                      "nodeType": "Return",
                                      "src": "12333:30:0"
                                    }
                                  ]
                                }
                              },
                              "id": 815,
                              "nodeType": "IfStatement",
                              "src": "12117:549:0",
                              "trueBody": {
                                "id": 779,
                                "nodeType": "Block",
                                "src": "12236:54:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 776,
                                        "name": "ProposalState",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "12257:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                          "typeString": "type(enum SenateAlpha.ProposalState)"
                                        }
                                      },
                                      "id": 777,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "Defeated",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "12257:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ProposalState_$104",
                                        "typeString": "enum SenateAlpha.ProposalState"
                                      }
                                    },
                                    "functionReturnParameters": 723,
                                    "id": 778,
                                    "nodeType": "Return",
                                    "src": "12250:29:0"
                                  }
                                ]
                              }
                            },
                            "id": 816,
                            "nodeType": "IfStatement",
                            "src": "12020:646:0",
                            "trueBody": {
                              "id": 764,
                              "nodeType": "Block",
                              "src": "12059:52:0",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 761,
                                      "name": "ProposalState",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 104,
                                      "src": "12080:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                        "typeString": "type(enum SenateAlpha.ProposalState)"
                                      }
                                    },
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Active",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "12080:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ProposalState_$104",
                                      "typeString": "enum SenateAlpha.ProposalState"
                                    }
                                  },
                                  "functionReturnParameters": 723,
                                  "id": 763,
                                  "nodeType": "Return",
                                  "src": "12073:27:0"
                                }
                              ]
                            }
                          },
                          "id": 817,
                          "nodeType": "IfStatement",
                          "src": "11920:746:0",
                          "trueBody": {
                            "id": 755,
                            "nodeType": "Block",
                            "src": "11961:53:0",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 752,
                                    "name": "ProposalState",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 104,
                                    "src": "11982:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                      "typeString": "type(enum SenateAlpha.ProposalState)"
                                    }
                                  },
                                  "id": 753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Pending",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11982:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ProposalState_$104",
                                    "typeString": "enum SenateAlpha.ProposalState"
                                  }
                                },
                                "functionReturnParameters": 723,
                                "id": 754,
                                "nodeType": "Return",
                                "src": "11975:28:0"
                              }
                            ]
                          }
                        },
                        "id": 818,
                        "nodeType": "IfStatement",
                        "src": "11837:829:0",
                        "trueBody": {
                          "id": 746,
                          "nodeType": "Block",
                          "src": "11860:54:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 743,
                                  "name": "ProposalState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "11881:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                    "typeString": "type(enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Canceled",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "11881:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "functionReturnParameters": 723,
                              "id": 745,
                              "nodeType": "Return",
                              "src": "11874:29:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 820,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "state",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "11571:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11570:20:0"
                  },
                  "returnParameters": {
                    "id": 723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 722,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "11612:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalState_$104",
                          "typeString": "enum SenateAlpha.ProposalState"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 721,
                          "name": "ProposalState",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 104,
                          "src": "11612:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$104",
                            "typeString": "enum SenateAlpha.ProposalState"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11611:15:0"
                  },
                  "scope": 1169,
                  "src": "11556:1116:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 834,
                    "nodeType": "Block",
                    "src": "12737:66:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 828,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1258,
                                "src": "12764:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "12764:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 830,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "12776:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 831,
                              "name": "support",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "12788:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 827,
                            "name": "_castVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "12754:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12754:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 826,
                        "id": 833,
                        "nodeType": "Return",
                        "src": "12747:49:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 835,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "castVote",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "12696:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12696:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 824,
                        "name": "support",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "12716:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12716:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12695:34:0"
                  },
                  "returnParameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12737:0:0"
                  },
                  "scope": 1169,
                  "src": "12678:125:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 913,
                    "nodeType": "Block",
                    "src": "12950:752:0",
                    "statements": [
                      {
                        "assignments": [
                          849
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 849,
                            "name": "domainSeparator",
                            "nodeType": "VariableDeclaration",
                            "scope": 913,
                            "src": "12960:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 848,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12960:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 866,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 853,
                                  "name": "DOMAIN_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "13057:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 856,
                                          "name": "name",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5,
                                          "src": "13110:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 855,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13104:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": "bytes"
                                      },
                                      "id": 857,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13104:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 854,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1252,
                                    "src": "13094:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13094:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 859,
                                    "name": "getChainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1168,
                                    "src": "13138:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                      "typeString": "function () pure returns (uint256)"
                                    }
                                  },
                                  "id": 860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13138:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 862,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1272,
                                      "src": "13180:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SenateAlpha_$1169",
                                        "typeString": "contract SenateAlpha"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SenateAlpha_$1169",
                                        "typeString": "contract SenateAlpha"
                                      }
                                    ],
                                    "id": 861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13172:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13172:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 851,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "13025:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13025:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13025:178:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 850,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "12998:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12998:219:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12960:257:0"
                      },
                      {
                        "assignments": [
                          868
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 868,
                            "name": "structHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 913,
                            "src": "13227:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 867,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13227:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 877,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 872,
                                  "name": "BALLOT_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 122,
                                  "src": "13281:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 873,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 837,
                                  "src": "13298:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 874,
                                  "name": "support",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "13310:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 870,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "13270:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13270:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13270:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 869,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "13260:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13260:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13227:92:0"
                      },
                      {
                        "assignments": [
                          879
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 879,
                            "name": "digest",
                            "nodeType": "VariableDeclaration",
                            "scope": 913,
                            "src": "13329:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 878,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13329:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 888,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "1901",
                                  "id": 883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13402:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string \"\u0019\u0001\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 884,
                                  "name": "domainSeparator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 849,
                                  "src": "13414:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 885,
                                  "name": "structHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 868,
                                  "src": "13431:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string \"\u0019\u0001\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 881,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "13385:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13385:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13385:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 880,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "13358:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13358:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13329:127:0"
                      },
                      {
                        "assignments": [
                          890
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 890,
                            "name": "signatory",
                            "nodeType": "VariableDeclaration",
                            "scope": 913,
                            "src": "13466:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 889,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13466:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 897,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 892,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "13496:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 893,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "13504:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 894,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "13507:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 895,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "13510:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 891,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "13486:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13486:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13466:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 899,
                                "name": "signatory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 890,
                                "src": "13543:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13564:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13556:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13556:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "13543:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a63617374566f746542795369673a20696e76616c6964207369676e6174757265",
                              "id": 904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13580:47:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b6c8f8b53f656a2fc3393a7a740411bbb21fc5143463ab0788d273bfcfb6145f",
                                "typeString": "literal_string \"SenateAlpha::castVoteBySig: invalid signature\""
                              },
                              "value": "SenateAlpha::castVoteBySig: invalid signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b6c8f8b53f656a2fc3393a7a740411bbb21fc5143463ab0788d273bfcfb6145f",
                                "typeString": "literal_string \"SenateAlpha::castVoteBySig: invalid signature\""
                              }
                            ],
                            "id": 898,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "13522:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13522:115:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 906,
                        "nodeType": "ExpressionStatement",
                        "src": "13522:115:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 908,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "13664:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "13675:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 910,
                              "name": "support",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "13687:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 907,
                            "name": "_castVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "13654:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13654:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 847,
                        "id": 912,
                        "nodeType": "Return",
                        "src": "13647:48:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 914,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "castVoteBySig",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 914,
                        "src": "12841:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12841:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "name": "support",
                        "nodeType": "VariableDeclaration",
                        "scope": 914,
                        "src": "12869:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12869:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 841,
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 914,
                        "src": "12891:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "12891:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 914,
                        "src": "12908:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12908:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 914,
                        "src": "12927:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12927:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12831:111:0"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12950:0:0"
                  },
                  "scope": 1169,
                  "src": "12809:893:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1012,
                    "nodeType": "Block",
                    "src": "13815:810:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalState_$104",
                                "typeString": "enum SenateAlpha.ProposalState"
                              },
                              "id": 929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 925,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 918,
                                    "src": "13852:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 924,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "13846:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$104_$",
                                    "typeString": "function (uint256) view returns (enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13846:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 927,
                                  "name": "ProposalState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "13867:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalState_$104_$",
                                    "typeString": "type(enum SenateAlpha.ProposalState)"
                                  }
                                },
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13867:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalState_$104",
                                  "typeString": "enum SenateAlpha.ProposalState"
                                }
                              },
                              "src": "13846:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f63617374566f74653a20766f74696e6720697320636c6f736564",
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13901:42:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c7c630cad9cf38805469df89d096e3d3852c578d44a07a24d09789054a6d801c",
                                "typeString": "literal_string \"SenateAlpha::_castVote: voting is closed\""
                              },
                              "value": "SenateAlpha::_castVote: voting is closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c7c630cad9cf38805469df89d096e3d3852c578d44a07a24d09789054a6d801c",
                                "typeString": "literal_string \"SenateAlpha::_castVote: voting is closed\""
                              }
                            ],
                            "id": 923,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "13825:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13825:128:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "13825:128:0"
                      },
                      {
                        "assignments": [
                          934
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 934,
                            "name": "proposal",
                            "nodeType": "VariableDeclaration",
                            "scope": 1012,
                            "src": "13963:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                              "typeString": "struct SenateAlpha.Proposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 933,
                              "name": "Proposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 88,
                              "src": "13963:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 938,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 935,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "13991:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$88_storage_$",
                              "typeString": "mapping(uint256 => struct SenateAlpha.Proposal storage ref)"
                            }
                          },
                          "id": 937,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 936,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "14001:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13991:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$88_storage",
                            "typeString": "struct SenateAlpha.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13963:49:0"
                      },
                      {
                        "assignments": [
                          940
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 940,
                            "name": "receipt",
                            "nodeType": "VariableDeclaration",
                            "scope": 1012,
                            "src": "14022:23:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                              "typeString": "struct SenateAlpha.Receipt"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 939,
                              "name": "Receipt",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 95,
                              "src": "14022:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                                "typeString": "struct SenateAlpha.Receipt"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 945,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 941,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "14048:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                "typeString": "struct SenateAlpha.Proposal storage pointer"
                              }
                            },
                            "id": 942,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receipts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87,
                            "src": "14048:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Receipt_$95_storage_$",
                              "typeString": "mapping(address => struct SenateAlpha.Receipt storage ref)"
                            }
                          },
                          "id": 944,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 943,
                            "name": "voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "14066:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14048:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Receipt_$95_storage",
                            "typeString": "struct SenateAlpha.Receipt storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14022:50:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 947,
                                  "name": "receipt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 940,
                                  "src": "14103:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                                    "typeString": "struct SenateAlpha.Receipt storage pointer"
                                  }
                                },
                                "id": 948,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "hasVoted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 90,
                                "src": "14103:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14123:5:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "14103:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f63617374566f74653a20766f74657220616c726561647920766f746564",
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14142:45:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f8420d197cd50109a8c5d9a2675894f931b49d81fededa014631a2e937fb8ff",
                                "typeString": "literal_string \"SenateAlpha::_castVote: voter already voted\""
                              },
                              "value": "SenateAlpha::_castVote: voter already voted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f8420d197cd50109a8c5d9a2675894f931b49d81fededa014631a2e937fb8ff",
                                "typeString": "literal_string \"SenateAlpha::_castVote: voter already voted\""
                              }
                            ],
                            "id": 946,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "14082:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14082:115:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 953,
                        "nodeType": "ExpressionStatement",
                        "src": "14082:115:0"
                      },
                      {
                        "assignments": [
                          955
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 955,
                            "name": "votes",
                            "nodeType": "VariableDeclaration",
                            "scope": 1012,
                            "src": "14207:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "typeName": {
                              "id": 954,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "14207:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 962,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 958,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "14241:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 959,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 934,
                                "src": "14248:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                  "typeString": "struct SenateAlpha.Proposal storage pointer"
                                }
                              },
                              "id": 960,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "14248:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 956,
                              "name": "RBCN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "14222:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RBCNInterface_$1243",
                                "typeString": "contract RBCNInterface"
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPriorVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1242,
                            "src": "14222:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint96_$",
                              "typeString": "function (address,uint256) view external returns (uint96)"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14222:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14207:61:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 963,
                          "name": "support",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 920,
                          "src": "14283:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 985,
                          "nodeType": "Block",
                          "src": "14375:85:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 975,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 934,
                                    "src": "14389:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                      "typeString": "struct SenateAlpha.Proposal storage pointer"
                                    }
                                  },
                                  "id": 977,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "againstVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 79,
                                  "src": "14389:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 979,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 934,
                                        "src": "14420:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 980,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "againstVotes",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 79,
                                      "src": "14420:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 981,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 955,
                                      "src": "14443:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    ],
                                    "id": 978,
                                    "name": "add256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1135,
                                    "src": "14413:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14413:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14389:60:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 984,
                              "nodeType": "ExpressionStatement",
                              "src": "14389:60:0"
                            }
                          ]
                        },
                        "id": 986,
                        "nodeType": "IfStatement",
                        "src": "14279:181:0",
                        "trueBody": {
                          "id": 974,
                          "nodeType": "Block",
                          "src": "14292:77:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 964,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 934,
                                    "src": "14306:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                      "typeString": "struct SenateAlpha.Proposal storage pointer"
                                    }
                                  },
                                  "id": 966,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "forVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 77,
                                  "src": "14306:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 968,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 934,
                                        "src": "14333:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$88_storage_ptr",
                                          "typeString": "struct SenateAlpha.Proposal storage pointer"
                                        }
                                      },
                                      "id": 969,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "forVotes",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 77,
                                      "src": "14333:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 970,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 955,
                                      "src": "14352:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    ],
                                    "id": 967,
                                    "name": "add256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1135,
                                    "src": "14326:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14326:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14306:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 973,
                              "nodeType": "ExpressionStatement",
                              "src": "14306:52:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 987,
                              "name": "receipt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "14470:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                                "typeString": "struct SenateAlpha.Receipt storage pointer"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hasVoted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 90,
                            "src": "14470:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14489:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "14470:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 992,
                        "nodeType": "ExpressionStatement",
                        "src": "14470:23:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 993,
                              "name": "receipt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "14503:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                                "typeString": "struct SenateAlpha.Receipt storage pointer"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "support",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 92,
                            "src": "14503:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 996,
                            "name": "support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "14521:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14503:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 998,
                        "nodeType": "ExpressionStatement",
                        "src": "14503:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 999,
                              "name": "receipt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "14538:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Receipt_$95_storage_ptr",
                                "typeString": "struct SenateAlpha.Receipt storage pointer"
                              }
                            },
                            "id": 1001,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94,
                            "src": "14538:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1002,
                            "name": "votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 955,
                            "src": "14554:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "14538:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "14538:21:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1006,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "14584:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1007,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "14591:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1008,
                              "name": "support",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 920,
                              "src": "14603:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1009,
                              "name": "votes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "14612:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1005,
                            "name": "VoteCast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "14575:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,bool,uint256)"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14575:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1011,
                        "nodeType": "EmitStatement",
                        "src": "14570:48:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1013,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_castVote",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 916,
                        "name": "voter",
                        "nodeType": "VariableDeclaration",
                        "scope": 1013,
                        "src": "13736:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13736:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1013,
                        "src": "13759:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13759:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 920,
                        "name": "support",
                        "nodeType": "VariableDeclaration",
                        "scope": 1013,
                        "src": "13787:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 919,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13787:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13726:79:0"
                  },
                  "returnParameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13815:0:0"
                  },
                  "scope": 1169,
                  "src": "13708:917:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "14663:173:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1017,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1258,
                                  "src": "14694:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "14694:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1019,
                                "name": "guardian",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "14708:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14694:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f5f61636365707441646d696e3a2073656e646572206d75737420626520676f7620677561726469616e",
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14730:57:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bca8eda60a69cdd14cdfbef9ee80ab76166188c04c85ffdf2d72a759233d1d1c",
                                "typeString": "literal_string \"SenateAlpha::__acceptAdmin: sender must be gov guardian\""
                              },
                              "value": "SenateAlpha::__acceptAdmin: sender must be gov guardian"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bca8eda60a69cdd14cdfbef9ee80ab76166188c04c85ffdf2d72a759233d1d1c",
                                "typeString": "literal_string \"SenateAlpha::__acceptAdmin: sender must be gov guardian\""
                              }
                            ],
                            "id": 1016,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "14673:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14673:124:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1023,
                        "nodeType": "ExpressionStatement",
                        "src": "14673:124:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1024,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "14807:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                "typeString": "contract TimelockInterface"
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "acceptAdmin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1182,
                            "src": "14807:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14807:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1028,
                        "nodeType": "ExpressionStatement",
                        "src": "14807:22:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1030,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "__acceptAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1014,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14653:2:0"
                  },
                  "returnParameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14663:0:0"
                  },
                  "scope": 1169,
                  "src": "14631:205:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1047,
                    "nodeType": "Block",
                    "src": "14871:169:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1034,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1258,
                                  "src": "14902:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "14902:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1036,
                                "name": "guardian",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "14916:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14902:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f5f61626469636174653a2073656e646572206d75737420626520676f7620677561726469616e",
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14938:54:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_307e9b30fa026d3331ad749d3c0948842dab48cd6002d6cfb942f9e81ff1d3e9",
                                "typeString": "literal_string \"SenateAlpha::__abdicate: sender must be gov guardian\""
                              },
                              "value": "SenateAlpha::__abdicate: sender must be gov guardian"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_307e9b30fa026d3331ad749d3c0948842dab48cd6002d6cfb942f9e81ff1d3e9",
                                "typeString": "literal_string \"SenateAlpha::__abdicate: sender must be gov guardian\""
                              }
                            ],
                            "id": 1033,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "14881:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14881:121:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1040,
                        "nodeType": "ExpressionStatement",
                        "src": "14881:121:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1041,
                            "name": "guardian",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "15012:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15031:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15023:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15023:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "15012:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1046,
                        "nodeType": "ExpressionStatement",
                        "src": "15012:21:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1048,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "__abdicate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14861:2:0"
                  },
                  "returnParameters": {
                    "id": 1032,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14871:0:0"
                  },
                  "scope": 1169,
                  "src": "14842:198:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "15153:347:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1056,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1258,
                                  "src": "15184:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15184:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1058,
                                "name": "guardian",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "15198:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15184:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f5f717565756553657454696d656c6f636b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f7620677561726469616e",
                              "id": 1060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15220:74:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6078d67de60ef02dbae27c979d33198c310551caf0bdcc77f35ab670686c903c",
                                "typeString": "literal_string \"SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\""
                              },
                              "value": "SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6078d67de60ef02dbae27c979d33198c310551caf0bdcc77f35ab670686c903c",
                                "typeString": "literal_string \"SenateAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\""
                              }
                            ],
                            "id": 1055,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "15163:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15163:141:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1062,
                        "nodeType": "ExpressionStatement",
                        "src": "15163:141:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1067,
                                  "name": "timelock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "15361:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                    "typeString": "contract TimelockInterface"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                    "typeString": "contract TimelockInterface"
                                  }
                                ],
                                "id": 1066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15353:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15353:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15384:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "73657450656e64696e6741646d696e286164647265737329",
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15399:26:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4dd18bf55ce7f29dcfaf98cdd1107659d19d0be3b61dbef73e05ac221f0e8e28",
                                "typeString": "literal_string \"setPendingAdmin(address)\""
                              },
                              "value": "setPendingAdmin(address)"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1073,
                                  "name": "newPendingAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1050,
                                  "src": "15450:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1071,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "15439:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15439:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15439:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1075,
                              "name": "eta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1052,
                              "src": "15480:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4dd18bf55ce7f29dcfaf98cdd1107659d19d0be3b61dbef73e05ac221f0e8e28",
                                "typeString": "literal_string \"setPendingAdmin(address)\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1063,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "15314:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                "typeString": "contract TimelockInterface"
                              }
                            },
                            "id": 1065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "queueTransaction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1204,
                            "src": "15314:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (address,uint256,string memory,bytes memory,uint256) external returns (bytes32)"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15314:179:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1077,
                        "nodeType": "ExpressionStatement",
                        "src": "15314:179:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1079,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "__queueSetTimelockPendingAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1050,
                        "name": "newPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "15095:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15095:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1052,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "15128:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15128:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15085:60:0"
                  },
                  "returnParameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15153:0:0"
                  },
                  "scope": 1169,
                  "src": "15046:454:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "15615:351:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1087,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1258,
                                  "src": "15646:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15646:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1089,
                                "name": "guardian",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "15660:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15646:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e617465416c7068613a3a5f5f6578656375746553657454696d656c6f636b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f7620677561726469616e",
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15682:76:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fc69ed702cb3df8c93ac3ef999281b9d5449000826c19f3316bb0046cdbc160",
                                "typeString": "literal_string \"SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\""
                              },
                              "value": "SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fc69ed702cb3df8c93ac3ef999281b9d5449000826c19f3316bb0046cdbc160",
                                "typeString": "literal_string \"SenateAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\""
                              }
                            ],
                            "id": 1086,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "15625:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15625:143:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1093,
                        "nodeType": "ExpressionStatement",
                        "src": "15625:143:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1098,
                                  "name": "timelock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "15827:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                    "typeString": "contract TimelockInterface"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                    "typeString": "contract TimelockInterface"
                                  }
                                ],
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15819:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15819:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15850:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "73657450656e64696e6741646d696e286164647265737329",
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15865:26:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4dd18bf55ce7f29dcfaf98cdd1107659d19d0be3b61dbef73e05ac221f0e8e28",
                                "typeString": "literal_string \"setPendingAdmin(address)\""
                              },
                              "value": "setPendingAdmin(address)"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1104,
                                  "name": "newPendingAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1081,
                                  "src": "15916:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1102,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "15905:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15905:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15905:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1106,
                              "name": "eta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "15946:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4dd18bf55ce7f29dcfaf98cdd1107659d19d0be3b61dbef73e05ac221f0e8e28",
                                "typeString": "literal_string \"setPendingAdmin(address)\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1094,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "15778:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TimelockInterface_$1233",
                                "typeString": "contract TimelockInterface"
                              }
                            },
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executeTransaction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1232,
                            "src": "15778:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,uint256,string memory,bytes memory,uint256) payable external returns (bytes memory)"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15778:181:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1108,
                        "nodeType": "ExpressionStatement",
                        "src": "15778:181:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "__executeSetTimelockPendingAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1081,
                        "name": "newPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "15557:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15557:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1083,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "15590:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15590:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15547:60:0"
                  },
                  "returnParameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15615:0:0"
                  },
                  "scope": 1169,
                  "src": "15506:460:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1134,
                    "nodeType": "Block",
                    "src": "16042:98:0",
                    "statements": [
                      {
                        "assignments": [
                          1120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1120,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1134,
                            "src": "16052:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1119,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16052:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1124,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "16064:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1122,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "16068:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16064:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16052:17:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1126,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "16087:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1127,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1112,
                                "src": "16092:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16087:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6164646974696f6e206f766572666c6f77",
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16095:19:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
                                "typeString": "literal_string \"addition overflow\""
                              },
                              "value": "addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
                                "typeString": "literal_string \"addition overflow\""
                              }
                            ],
                            "id": 1125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "16079:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16079:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1131,
                        "nodeType": "ExpressionStatement",
                        "src": "16079:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1132,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1120,
                          "src": "16132:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1118,
                        "id": 1133,
                        "nodeType": "Return",
                        "src": "16125:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add256",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1112,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "15988:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15988:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "15999:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15999:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15987:22:0"
                  },
                  "returnParameters": {
                    "id": 1118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1117,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "16033:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16033:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16032:9:0"
                  },
                  "scope": 1169,
                  "src": "15972:168:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1155,
                    "nodeType": "Block",
                    "src": "16216:79:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1145,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1139,
                                "src": "16234:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1146,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1137,
                                "src": "16239:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16234:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7375627472616374696f6e20756e646572666c6f77",
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16242:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f22f6b3017af2aff30fb71d5e8f8adc6cd3022431e6fc88c01d6d8b2adb30f31",
                                "typeString": "literal_string \"subtraction underflow\""
                              },
                              "value": "subtraction underflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f22f6b3017af2aff30fb71d5e8f8adc6cd3022431e6fc88c01d6d8b2adb30f31",
                                "typeString": "literal_string \"subtraction underflow\""
                              }
                            ],
                            "id": 1144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1261,
                              1262
                            ],
                            "referencedDeclaration": 1262,
                            "src": "16226:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16226:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1150,
                        "nodeType": "ExpressionStatement",
                        "src": "16226:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1151,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1137,
                            "src": "16283:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1152,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "16287:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16283:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1143,
                        "id": 1154,
                        "nodeType": "Return",
                        "src": "16276:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1156,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub256",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "16162:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16162:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "16173:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16173:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16161:22:0"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1156,
                        "src": "16207:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16207:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16206:9:0"
                  },
                  "scope": 1169,
                  "src": "16146:149:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1167,
                    "nodeType": "Block",
                    "src": "16355:118:0",
                    "statements": [
                      {
                        "assignments": [
                          1162
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1162,
                            "name": "chainId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1167,
                            "src": "16365:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1161,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16365:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1163,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16365:15:0"
                      },
                      {
                        "externalReferences": [
                          {
                            "chainId": {
                              "declaration": 1162,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "16413:7:0",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 1164,
                        "nodeType": "InlineAssembly",
                        "operations": "{ chainId := chainid() }",
                        "src": "16390:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1165,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1162,
                          "src": "16459:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1160,
                        "id": 1166,
                        "nodeType": "Return",
                        "src": "16452:14:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChainId",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16320:2:0"
                  },
                  "returnParameters": {
                    "id": 1160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1159,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1168,
                        "src": "16346:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16346:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16345:9:0"
                  },
                  "scope": 1169,
                  "src": "16301:172:0",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1244,
              "src": "60:16415:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1233,
              "linearizedBaseContracts": [
                1233
              ],
              "name": "TimelockInterface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "id": 1174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delay",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16525:2:0"
                  },
                  "returnParameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1172,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1174,
                        "src": "16551:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16551:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16550:9:0"
                  },
                  "scope": 1233,
                  "src": "16511:49:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1179,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "GRACE_PERIOD",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16587:2:0"
                  },
                  "returnParameters": {
                    "id": 1178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1177,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1179,
                        "src": "16613:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16613:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16612:9:0"
                  },
                  "scope": 1233,
                  "src": "16566:56:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16648:2:0"
                  },
                  "returnParameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16659:0:0"
                  },
                  "scope": 1233,
                  "src": "16628:32:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1189,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "queuedTransactions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "name": "hash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1189,
                        "src": "16694:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16694:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16693:14:0"
                  },
                  "returnParameters": {
                    "id": 1188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1187,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1189,
                        "src": "16731:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16731:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16730:6:0"
                  },
                  "scope": 1233,
                  "src": "16666:71:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1204,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "queueTransaction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1191,
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "16778:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16778:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "16802:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16802:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "16825:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "16825:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "16860:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "16860:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1199,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "16889:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16889:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16768:138:0"
                  },
                  "returnParameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1202,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "16925:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16925:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16924:9:0"
                  },
                  "scope": 1233,
                  "src": "16743:191:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1217,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelTransaction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1206,
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1217,
                        "src": "16976:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16976:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1208,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1217,
                        "src": "17000:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17000:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1210,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1217,
                        "src": "17023:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17023:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1212,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1217,
                        "src": "17058:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17058:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1214,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1217,
                        "src": "17087:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17087:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16966:138:0"
                  },
                  "returnParameters": {
                    "id": 1216,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17113:0:0"
                  },
                  "scope": 1233,
                  "src": "16940:174:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1232,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeTransaction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1219,
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "17157:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17157:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1221,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "17181:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17181:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1223,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "17204:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17204:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1225,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "17239:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17239:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1227,
                        "name": "eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "17268:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17268:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17147:138:0"
                  },
                  "returnParameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1230,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "17312:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17312:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17311:14:0"
                  },
                  "scope": 1233,
                  "src": "17120:206:0",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 1244,
              "src": "16477:851:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1243,
              "linearizedBaseContracts": [
                1243
              ],
              "name": "RBCNInterface",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "id": 1242,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPriorVotes",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1235,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "17383:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17383:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "name": "blockNumber",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "17400:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17400:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17382:38:0"
                  },
                  "returnParameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1240,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "17468:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "17468:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17467:8:0"
                  },
                  "scope": 1243,
                  "src": "17360:116:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 1244,
              "src": "17330:148:0"
            }
          ],
          "src": "0:17479:0"
        },
        "id": 0
      }
    }
  }
}
